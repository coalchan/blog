<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title><![CDATA[Flink流计算——前言和目录]]></title>
    <url>%2F2018%2F11%2F27%2Fstream-processing-with-apache-flink-0%2F</url>
    <content type="text"><![CDATA[本书概要对于提前发布的电子书来说，你得到的是最原始的内容，甚至没有经过作者的编辑，因此你可以早在官方正式发布之前就利用其中的技术。此外，在本书有重大修改、新章节更新以及最终的电子书发布的时候，都会收到更新提示。 开始学习Apache Flink吧，这套开源框架让你驾驭流式数据处理，诸如用户的交互行为、传感器数据和机器日志等。通过这套实用指南，你将学会使用Apache Flink的流处理API来实现、持续运行和维护实际的程序。 作者之一Fabian Hueske是Flink的创建者，另外一位作者Vasia Kalavri是Flink图处理API (Gelly)的核心贡献者。他们解释了并行处理的基本概念，告诉你流式分析与传统批处理数据分析的区别。通过此书，软件工程师、数据工程师以及系统管理员将会学到Flink的DataStream API的基础知识，包括它的架构和一个基本的Flink流处理程序的组件。 使用Apache Flink的DataStream API来解决现实世界的问题 为开发一个Flink的流处理程序创建一个环境 设计流式程序并且将周期的批处理工作迁移到持续的流处理工作上 学习处理一组记录的窗口操作 将数据流提取到一个DataStream程序，并将结果流发到不同的存储系统中 实现流处理应用中创建有状态以及自定义运算 操作、维护和更新持续运行的Flink流处理程序 研究几个部署选项，包括高可用安装的配置 出版社资源勘误页：http://oreilly.com/catalog/0636920057321/errata 关于出版社O Reilly Media通过在线和面对面的培训、书籍、视频、研究和会议传播创新者的知识。自1978年以来，O Reilly一直是前沿技术发展的记录者和催化剂，瞄准了…… 更多关于O’Reilly Media, Inc. 目录 有状态的流处理介绍 传统的数据结构 有状态的流处理 事件驱动的应用 数据管道与实时ETL 流式分析 开源流处理的演进 Flink尝鲜 你将在这本书中学到什么 流处理的基本原理 Dataflow编程模型介绍 Dataflow图 数据并行与任务并行 数据交换策略 并行处理无限流 延迟与吞吐量 数据量的操作 时间语义 一分钟是什么意思 处理时间 事件时间 水印 处理时间 VS 事件时间 状态与一致性模型 任务失败 结果保证 小结 Apache Flink的架构 系统架构 Flink组件配置 应用部署 任务执行 高可用配置 Flink中的数据传输 高吞吐和低延迟 背压流量控制 事件时间的处理 时间戳 水印 水印与事件时间 时间戳分配和水印生成 状态管理 操作符状态 带键的（keyed）状态 后端状态 扩展状态操作符 检查点、保存点以及状态恢复 一致性检查点 从一致性检查点恢复 Flink的轻量级检查点算法 保存点 小结 搭建Apache Flink的开发环境 软件要求 在IDE中运行和调试Flink程序 在你的IDE中导入书中的案例 在IDE中运行Flink程序 在IDE中调试Flink程序 Flink的maven项目开发向导 DataStream的API（v1.4.0） 你好，Flink！ 设置运行时环境 读取输入流 应用转换 输出结果 执行 类型 支持的数据类型 类型提示 TypeInformation介绍 转换 基本的转换 带键流的转换 多流转换 分区转换 并行设置 引用字段（field）和定义键（key） 定义UDF 添加Flink以及外部的依赖 小结 基于时间和窗口的操作符 时间特征配置 程序中事件时间的时间戳和水印 水印、延迟和完整性 处理函数 计时服务和计时器 Emitting to Side Outputs CoProcessFunction介绍 窗口操作符 定义窗口操作符 内置的Window Assigners 在窗口上应用函数 自定义窗口操作符 实时的流Join 处理迟到的数据 丢弃迟到的事件 重定向迟到的事件 使用迟到的事件来更新结果 小结 状态操作符和用户函数 实现有状态的函数 在RuntimeContext中声明带键状态 使用ListCheckpointed接口实现操作符列表状态（Operator List State） 使用连接的广播状态（Connected Broadcast State） 使用CheckpointedFunction接口 接收已完成的检查点的通知 有状态程序的鲁棒性和性能 选择一个状态后端（State Backend） 启用检查点 更新状态操作符 优化有状态程序的性能 防止状态泄露 可查询的状态 架构和启用可查询的状态 暴露可查询的状态 从外部程序中查询状态 小结 外部系统的读写 应用一致性保证 提供的连接器 Apache Kafka的source连接器 Apache Kafka的sink连接器 文件系统的source连接器 文件系统的sink连接器 Apache Cassandra的sink连接器 实现一个自定义source函数 可重置的source函数 source函数、时间戳和水印 实现一个自定义sink函数 幂等的sink连接器 事务性的sink连接器 异步访问外部系统 小结 为流处理程序搭建Flink 部署模式 独立集群 Docker Apache Hadoop YARN Kubernetes 高可用配置 高可用的独立部署配置 高可用的YARN部署配置 高可用的Kubernetes配置 与Hadoop组件的集成 文件系统配置 系统配置 Java和类加载 CPU 主存 磁盘存储器 状态后端、检查点以及恢复 安全 小结]]></content>
      <categories>
        <category>翻译</category>
      </categories>
      <tags>
        <tag>flink</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[2018-11-04参加Flink meetup总结]]></title>
    <url>%2F2018%2F11%2F05%2Fflink-meetup-2018-11-04%2F</url>
    <content type="text"><![CDATA[Flink在有赞的实践 实时框架从Storm到Spark Structed Streaming，到今年才开始的Flink尝试 Spark Structed Streaming对SQL支持不够（如不支持多个聚合、count distinct等） Flink的实际踩坑经历： container超过配置的数量，解决：FLINK-9567 开启延迟监控后收到太多报警，解决1：FLINK-10243；解决2：FLINK-10246 Flink结合spring：如何获取SpringContext（单例，在算子的open方法中获取bean） Flink异步不支持KeyedState（没搞懂。。） Flink CEP简介 小结：刚开始尝试flink，坑比较多，需要紧跟开源社区。 Flink在袋鼠云一站式大数据平台中的使用专题演讲：Flink SQL的扩展 开源地址：https://github.com/DTStack/flinkStreamSQL 另外推荐他们开源的离线同步工具，也是用Flink实现的，叫做flinkx，基本上是参考了datax的设计思路。 为什么要扩展Flink SQL 实际需要，有些数据就是在外部，而非在流中。 如何实现流与维表的JOIN 尽量少修改源码，只在SQL解析时转化成流 两种方式： LRU维表：继承RichAsyncFunction，相关：Async I/O ALL维表：继承RichFlatMapFunction 小结：推崇SQL的开发效率和学习成本，相信SQL可以解决大部分问题。 汇智在Flink上的实践写在前面：号称做的都是国家安全部门的项目，下面都是虚拟案例。。。 专题演讲：Flink CEP的一些实践案例，主要就是利用flink的实时处理能力，搭配自研的规则引擎模块，做一些规则匹配与计算。 案例：商品的实时监控 UDF实现：在open方法中，将规则加载到内存 案例：实时在线统计 利用flink算子实现 案例：定时器功能 使用DataStream API中的process function实现 小结：逻辑简单，但是号称每秒数据量能有百万，估计集群规模也不小。 Stream Processing with Apache RocketMQ and Apache Flink小结：没听进去，干货不多，讲了好多RocketMQ的东西。。。 提高Flink易用性小结：讲了很多阿里内部对于Flink使用上的一些努力，听下来觉得很牛逼，但是基本没怎么说怎么实现的。如：资源自动优化、一键诊断等等。 扩展阅读：Flink已经足够强大了吗？阿里巴巴说：还不够 总结本次大会干活第一：袋鼠云案例 附如要下载PPT，请加入钉钉群（扫描下方二维码，或者搜索钉钉群号21789141）]]></content>
      <categories>
        <category>技术</category>
      </categories>
      <tags>
        <tag>flink</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Scala之旅——默认参数值]]></title>
    <url>%2F2018%2F10%2F28%2Fdefault-parameter-values%2F</url>
    <content type="text"><![CDATA[Scala提供了默认参数值的功能，允许调用者忽略那些参数。 1234def log(message: String, level: String = &quot;INFO&quot;) = println(s&quot;$level: $message&quot;)log(&quot;System starting&quot;) // prints INFO: System startinglog(&quot;User not found&quot;, &quot;WARNING&quot;) // prints WARNING: User not found 参数level拥有一个默认值所以该参数是可选的。最后一行，参数&quot;WARNING&quot;覆盖了默认参数&quot;INFO&quot;。在Java中你可能需要进行重载方法，而在Scala中使用可选参数能够达到同样的效果。但是，如果调用者忽略了一个参数，那么后面的参数必须带上名字。 123class Point(val x: Double = 0, val y: Double = 0)val point1 = new Point(y = 1) 这里一定要写上y=1。 注意，在Java代码中调用时，Scala中的默认参数并不是可选的： 12// Point.scalaclass Point(val x: Double = 0, val y: Double = 0) 123456// Main.javapublic class Main &#123; public static void main(String[] args) &#123; Point point = new Point(1); // does not compile &#125;&#125;]]></content>
      <categories>
        <category>翻译</category>
      </categories>
      <tags>
        <tag>scala</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Scala之旅——操作符]]></title>
    <url>%2F2018%2F10%2F28%2Foperators%2F</url>
    <content type="text"><![CDATA[在Scala中，操作符也是方法。任何带有单个参数的方法可以作为_中缀操作符_来使用。例如：+可以用点表达式来调用： 110.+(1) 然而，使用中缀操作符更加便于阅读： 110 + 1 定义和使用操作符你可以使用任何合法的标识符来作为操作符。这包括名称（如add）以及符号（如+）。 12345678910case class Vec(val x: Double, val y: Double) &#123; def +(that: Vec) = new Vec(this.x + that.x, this.y + that.y)&#125;val vector1 = Vec(1.0, 1.0)val vector2 = Vec(2.0, 2.0)val vector3 = vector1 + vector2vector3.x // 3.0vector3.y // 3.0 Vec类有一个方法+用于将vector和vector2相加。通过圆括号，你可以用易读的语法来构建复杂的表达式。这里定义了类MyBool，其中包括方法and和or： 12345case class MyBool(x: Boolean) &#123; def and(that: MyBool): MyBool = if (x) that else this def or(that: MyBool): MyBool = if (x) this else that def negate: MyBool = MyBool(!x)&#125; 现在可以使用and和or来作为中缀操作符了： 12def not(x: MyBool) = x.negatedef xor(x: MyBool, y: MyBool) = (x or y) and not(x and y) 这有助于让xor的定义更加可读。 优先级当一个表达式使用了多个操作符，它们会基于第一个字符的优先级进行评估： 12345678910(characters not shown below)* / %+ -:= !&lt; &gt;&amp;^|(all letters) 以上优先级会应用到你定义的函数当中去。例如，下面的表达式： 1a + b ^? c ?^ d less a ==&gt; b | c 相当于 1((a + b) ^? (c ?^ d)) less ((a ==&gt; b) | c) 由于?^以字符?开头所以具有最高优先级，+具有第二优先级，接着是==&gt;、^?、|和less。]]></content>
      <categories>
        <category>翻译</category>
      </categories>
      <tags>
        <tag>scala</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Scala之旅——传名（By-name)参数]]></title>
    <url>%2F2018%2F10%2F28%2Fby-name-parameters%2F</url>
    <content type="text"><![CDATA[_传名参数_只有在使用时才会被计算。相对地是_传值（by-value）参数_。要使得参数可以通过传名来调用，只需要在它的类型前加上=&gt;。 1def calculate(input: =&gt; Int) = input * 37 传名参数的优点在于如果它们没有在函数体中使用，就不会被计算。另一方面，传值参数的优点在于它们仅会被计算一次。 这里有个例子，介绍了我们如何实现一个while循环： 123456789101112def whileLoop(condition: =&gt; Boolean)(body: =&gt; Unit): Unit = if (condition) &#123; body whileLoop(condition)(body) &#125;var i = 2whileLoop (i &gt; 0) &#123; println(i) i -= 1&#125; // prints 2 1 方法whileLoop使用多参数列表来接受一个条件和一个循环体。如果condition为真，则body被执行然后递归调用whileLoop。如果condition为假，body将永远不会被计算，因为我们在body类型的前面加了=&gt;。 现在我们传入i &gt; 0作为我们的condition和println(i); i-= 1作为body，它的表现类似于许多语言中的标准while循环。 这种使得参数延迟到使用时才被计算的能力，在当参数是计算密集型的或者是一段比较耗时的代码块（比如抓取一个URL）的时候，可以帮助我们提高性能。]]></content>
      <categories>
        <category>翻译</category>
      </categories>
      <tags>
        <tag>scala</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Scala之旅——带名参数]]></title>
    <url>%2F2018%2F10%2F28%2Fnamed-arguments%2F</url>
    <content type="text"><![CDATA[调用方法时，可以使用参数名给参数带上标签，正如： 1234567def printName(first: String, last: String): Unit = &#123; println(first + &quot; &quot; + last)&#125;printName(&quot;John&quot;, &quot;Smith&quot;) // Prints &quot;John Smith&quot;printName(first = &quot;John&quot;, last = &quot;Smith&quot;) // Prints &quot;John Smith&quot;printName(last = &quot;Smith&quot;, first = &quot;John&quot;) // Prints &quot;John Smith&quot; 注意，带名参数的顺序可以重新调整。然而，如果有些参数是带名的，有些则不是，那么不带名的参数必须在最前面，并且是按照方法定义中参数的顺序出现。 1printName(last = &quot;Smith&quot;, &quot;john&quot;) // error: positional after named argument 注意带名参数不适用于调用Java方法。]]></content>
      <categories>
        <category>翻译</category>
      </categories>
      <tags>
        <tag>scala</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Scala之旅——包和导入]]></title>
    <url>%2F2018%2F10%2F28%2Fpackages-and-imports%2F</url>
    <content type="text"><![CDATA[包和导入Scala使用包来创建命名空间，允许你对程序进行模块化设计。 创建包通过在Scala文件顶部声明一个或者多个包名来创建包。 package users class User一般而言包的命名是和包含Scala文件的目录相同的，然而实际上Scala并不关心文件布局。一个sbt项目中users包的目录结构可能如下所示： - ExampleProject - build.sbt - project - src - main - scala - users User.scala UserProfile.scala UserPreferences.scala - test注意users目录是怎样包含在Scala目录中，以及是如何包含了多个Scala文件的。包中的每个Scala文件都可以有相同的包声明。另外有一种声明包的方式是使用花括号： package users { package administrators { class NormalUser } package normalusers { class NormalUser } }正如你所见，该方式允许进行包嵌套，且提供了对于作用域和封装方面更强的控制力。 包名应该全部小写，另外如果是一个拥有网站的组织来开发代码，那应该按照以下的格式约定：&lt;顶级域名&gt;.&lt;域名&gt;.&lt;项目名&gt;。例如，如果谷歌有个项目叫做SelfDrivingCar，那么包名应该如下： package com.google.selfdrivingcar.camera class Lens这一般会对应到下面的目录结构：SelfDrivingCar/src/main/scala/com/google/selfdrivingcar/camera/Lens.scala。 导入导入语句用于访问其他包中的成员（如类、特质、函数等）。访问相同包中的成员不需要导入语句。导入语句有下面几种方式可选： import users._ // import everything from the users package import users.User // import the class User import users.{User, UserPreferences} // Only imports selected members import users.{UserPreferences =&gt; UPrefs} // import and rename for convenienceScala中不同于Java的一点是导入语句可以被用在任何地方： def sqrtplus1(x: Int) = { import scala.math.sqrt sqrt(x) + 1.0 }如果存在包冲突且需要从项目的根目录导入某些东西的时候，可以在包前面加上_root_： package accounts import _root_.users._注意：scala和java.lang包以及object Predef是默认导入的。]]></content>
      <categories>
        <category>翻译</category>
      </categories>
      <tags>
        <tag>scala</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Scala之旅——类型推断]]></title>
    <url>%2F2018%2F10%2F28%2Ftype-inference%2F</url>
    <content type="text"><![CDATA[Scala编译器经常可以推断出一个表达式的类型，所以你可以不必显示地进行声明。 类型省略1val businessName = &quot;Montreux Jazz Café&quot; 编译器可以发现businessName是一个字符串。对于方法，也是类似的： 1def squareOf(x: Int) = x * x 编译器可以推断出返回类型是Int，所以不需要显式的返回类型。 对于递归方法，编译器不能推断出它的返回类型。下面的这段程序正是这个原因导致了编译失败： 1def fac(n: Int) = if (n == 0) 1 else n * fac(n - 1) 同样地，在调用多态方法或者实例化泛型类时，也不需要强制明确类型参数。Scala编译器会从上下文和实际的方法（或者构造器）中的参数类型推断出缺失的类型参数。 下面有2个例子： 12345case class MyPair[A, B](x: A, y: B);val p = MyPair(1, &quot;scala&quot;) // type: MyPair[Int, String]def id[T](x: T) = xval q = id(1) // type: Int 编译器使用MyPair的参数类型确定了A和B的类型，后面x的类型也是一样的。 参数编译器永远不会推断方法的参数类型。然而，在某些特定例子中，当一个匿名函数作为参数传入时，是可以推断出函数的参数类型的。 1Seq(1, 3, 4).map(x =&gt; x * 2) // List(2, 6, 8) map的参数是f: A =&gt; B。因为我们将整数放入Seq，所以编译器知道A是Int（即x是一个整数）。因此，编译器可以从x * 2推断出B是Int类型。 何时不依赖于类型推断一般认为，对于暴露在公共API中的成员进行显式声明类型更具可读性。因此，我们推荐对于那些将暴露给你的用户的API，进行显式声明类型。 同时，类型推断有时会推断出一个尤其特殊的类型。假如我们这样写： 1var obj = null 那么我们不能继续这样的重新赋值： 1obj = new AnyRef 这样不会通过编译，因为obj的类型推断是Null，而该类型的唯一值是null，所以不可能分配一个不同的值。]]></content>
      <categories>
        <category>翻译</category>
      </categories>
      <tags>
        <tag>scala</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Scala之旅——多态方法]]></title>
    <url>%2F2018%2F10%2F28%2Fpolymorphic-methods%2F</url>
    <content type="text"><![CDATA[Scala中的方法可以通过类型和值来进行参数化。它的语法和泛型类是接近的。类型参数是用方括号括起来，而值参数是用圆括号括起来。 下面是示例： 12345678def listOfDuplicates[A](x: A, length: Int): List[A] = &#123; if (length &lt; 1) Nil else x :: listOfDuplicates(x, length - 1)&#125;println(listOfDuplicates[Int](3, 4)) // List(3, 3, 3, 3)println(listOfDuplicates(&quot;La&quot;, 8)) // List(La, La, La, La, La, La, La, La) 方法listOfDuplicates接受一个类型参数A以及值参数x和length。值x是A类型的。如果length &lt; 1我们会返回一个空的列表。否则我们会通过递归调用来将x加到列表副本的前面。（注：::意味着将左边的元素加入到右边列表的前面。） 第一次调用的时候，我们通过写下[Int]从而显式提供了类型参数。因此第一个参数必定为一个Int且返回类型是List[Int]。 第二次调用表明你不必总是显式地提供类型参数。编译器一般可以根据上下文或者值参数的类型来推断出来。这个例子当中，&quot;La&quot;是一个String所以编译器知道A必定为String。]]></content>
      <categories>
        <category>翻译</category>
      </categories>
      <tags>
        <tag>scala</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Scala之旅——多参数列表（柯里化）]]></title>
    <url>%2F2018%2F10%2F28%2Fmultiple-parameter-lists%2F</url>
    <content type="text"><![CDATA[一个方法可以定义多参数列表。当调用一个不全的参数列表的方法时，会产生一个函数并将缺少的参数列表作为参数。这有个正式定义叫柯里化。 下面的例子定义在Scala集合中的Traversable特质当中： 1def foldLeft[B](z: B)(op: (B, A) =&gt; B): B foldLeft按照从左往右的顺序，将二进制运算符op作用于初始值z和这个traversable中的所有元素。下面展示了它的用法。 从一个初始值0开始，foldleft将函数(m, n) =&gt; m + n作用于列表中的每个元素和上一次的累计值。 123val numbers = List(1, 2, 3, 4, 5, 6, 7, 8, 9, 10)val res = numbers.foldLeft(0)((m, n) =&gt; m + n)print(res) // 55 多参数列表具有比较冗长的调用语法，因此要谨慎使用。建议使用的场景包括以下： 单个函数参数在单个函数参数的场景（如上面foldleft中的op）中，多参数列表允许使用简洁的语法将匿名函数传递给方法。如果没有多参数列表，代码将会是这样： 1numbers.foldLeft(0, &#123;(m: Int, n: Int) =&gt; m + n&#125;) 注意这里多参数列表的用法还可以让我们利用Scala类型推断来让代码变得更加简洁，这在不用柯里化来定义的情况下是做不到的。 1numbers.foldLeft(0)(_ + _) 上面的语句numbers.foldLeft(0)(_ + _)允许我们固定参数z，然后传递一个偏函数进行使用，正如： 12345678val numbers = List(1, 2, 3, 4, 5, 6, 7, 8, 9, 10)val numberFunc = numbers.foldLeft(List[Int]())_val squares = numberFunc((xs, x) =&gt; xs:+ x*x)print(squares.toString()) // List(1, 4, 9, 16, 25, 36, 49, 64, 81, 100)val cubes = numberFunc((xs, x) =&gt; xs:+ x*x*x)print(cubes.toString()) // List(1, 8, 27, 64, 125, 216, 343, 512, 729, 1000) 最后说下，foldLeft和foldRight可以使用下面任意一种用法来调用。 12345678910val numbers = List(1, 2, 3, 4, 5, 6, 7, 8, 9, 10)numbers.foldLeft(0)((sum, item) =&gt; sum + item) // Generic Formnumbers.foldRight(0)((sum, item) =&gt; sum + item) // Generic Formnumbers.foldLeft(0)(_+_) // Curried Formnumbers.foldRight(0)(_+_) // Curried Form(0 /: numbers)(_+_) // Used in place of foldLeft(numbers :\ 0)(_+_) // Used in place of foldRight 隐式参数如果要将参数列表中的某些参数指定为implicit，则应该使用多参数列表。如下所示： 1def execute(arg: Int)(implicit ec: ExecutionContext) = ???]]></content>
      <categories>
        <category>翻译</category>
      </categories>
      <tags>
        <tag>scala</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Scala之旅——注解]]></title>
    <url>%2F2018%2F10%2F23%2Fannotations%2F</url>
    <content type="text"><![CDATA[注解将元信息和定义关联起来。例如，注解方法前的@deprecated会使得编译器在该方法被调用时打印一条警告。 123456object DeprecationDemo extends App &#123; @deprecated(&quot;deprecation message&quot;, &quot;release # which deprecates method&quot;) def hello = &quot;hola&quot; hello &#125; 上述代码可以通过编译但是编译器会打印一条警告：“there was one deprecation warning”。 注解子句用于其后的第一个定义或者声明。一个定义或者声明的前面可以出现不止一个注解子句，而它们的顺序并不重要。 确保编码正确的注解某些注解会在条件不满足的情况下导致编译失败。例如，注解@tailrec可以确保一个方法是尾递归。尾递归可以使得内存需求是固定的。下面是该注解在计算阶乘的方法中的使用情况： 12345678910import scala.annotation.tailrecdef factorial(x: Int): Int = &#123; @tailrec def factorialHelper(x: Int, accumulator: Int): Int = &#123; if (x == 1) accumulator else factorialHelper(x - 1, accumulator * x) &#125; factorialHelper(x, 1)&#125; factorialHelper方法拥有注解@tailrec，可以确保该方法的确是尾递归的。如果我们按照下面的方式改变该方法的实现，则会编译失败： 123456789import scala.annotation.tailrecdef factorial(x: Int): Int = &#123; @tailrec def factorialHelper(x: Int): Int = &#123; if (x == 1) 1 else x * factorialHelper(x - 1) &#125; factorialHelper(x)&#125; 我们将得到提示信息“Recursive call not in tail position”。 影响代码生成的注解有些注解（如@inline）会影响代码的生成（即生成的jar文件跟不使用注解相比可能具有不同的字节大小）。内联（inlining）的意思是将方法体中的代码直接插入到调用的位置。这样生成的字节码会更长，但是运行会更快。使用注解@inline无法确保一个方法会变成内联的，当且仅当通过了关于生成代码规模的一些尝试之后，编译器会将该方法变成内联的。 Java注解在写与Java进行互操作的Scala代码时，在注解的语法上有些不同点需要注意。 注：在使用Java注解时必须带上选项-target:jvm-1.8。 Java可以通过注解的形式来拥有用户自定义的元数据。注解的关键特性是依赖于对指定的名-值对进行初始化。例如我们需要一个注解来追踪某些类的来源，可能会这样来定义： 1234@interface Source &#123; public String URL(); public String mail();&#125; 接下来可以这样来使用： 123@Source(URL = &quot;http://coders.com/&quot;, mail = &quot;support@coders.com&quot;)public class MyClass extends HisClass ... 在Scala中使用注解像是在调用构造器，要实例化一个Java注解需要指定参数名： 123@Source(URL = &quot;http://coders.com/&quot;, mail = &quot;support@coders.com&quot;)class MyScalaClass ... 当注解仅有一个元素的时候这种语法便有点繁琐。所以习惯上，如果元素名称被指定为value，那么在Java中可以用类似于构造器的语法： 1234@interface SourceURL &#123; public String value(); public String mail() default &quot;&quot;;&#125; 然后这样使用： 12@SourceURL(&quot;http://coders.com/&quot;)public class MyClass extends HisClass ... 这个例子中，Scala的用法也是类似的： 12@SourceURL(&quot;http://coders.com/&quot;)class MyScalaClass ... 这里mail元素被指定了一个默认值，所以不需要为它显式提供一个值。然而，如果需要给它提供值，在Java中不能混搭这两种形式： 123@SourceURL(value = &quot;http://coders.com/&quot;, mail = &quot;support@coders.com&quot;)public class MyClass extends HisClass ... Scala则在这方面提供了更多的灵活性： 123@SourceURL(&quot;http://coders.com/&quot;, mail = &quot;support@coders.com&quot;) class MyScalaClass ...]]></content>
      <categories>
        <category>翻译</category>
      </categories>
      <tags>
        <tag>scala</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Scala之旅——隐式转换]]></title>
    <url>%2F2018%2F09%2F21%2Fimplicit-conversions%2F</url>
    <content type="text"><![CDATA[从类型S到类型T的隐式转换，由一个拥有函数类型S =&gt; T的隐式值，或者一个可转换为指定类型的隐式方法所定义。 隐式转换适用于以下2中场景： 如果一个表达式e是S类型的，且S类型不能转换成表达式所期望的T类型。 在一个S类型的e的选择器e.m中，如果m不是S的成员。 第一种场景中，会去查找一个适用于e且其返回类型可以转换为T的转换c。 第二种场景中，则会去查找一个适用于e且其返回结果包含了一个名为m的成员的转换c。 如果隐式方法List[A] =&gt; Ordered[List[A]]和Int =&gt; Ordered[Int]都在作用域内，那么对于下面两个List[Int]类型的列表的操作是合法的： 1List(1, 2, 3) &lt;= List(4, 5) 隐式方法Int =&gt; Ordered[Int]由scala.Predef.intWrapper自动提供。下面提供了一个 List[A] =&gt; Ordered[List[A]] 的隐式方法的实现样例： 12345678import scala.language.implicitConversionsimplicit def list2ordered[A](x: List[A]) (implicit elem2ordered: A =&gt; Ordered[A]): Ordered[List[A]] = new Ordered[List[A]] &#123; //replace with a more useful implementation def compare(that: List[A]): Int = 1 &#125; 隐式导入的对象scala.Predef声明了几个预定义的类型（比如Pair）和方法（比如assert），以及一些隐式转换。 例如，在调用一个Java方法且需要一个java.lang.Integer时，你可以传入一个scala.Int来代替。这是因为Predef中包含了以下的隐式转换： 1234import scala.language.implicitConversionsimplicit def int2Integer(x: Int) = java.lang.Integer.valueOf(x) 因为随意使用隐式转换可能出现难以预料的问题，所以在编译隐式转换的定义时编译器会发出警告。 可以通过以下任意一种方法来关闭警告： 导入scala.language.implicitConversions到隐式转换定义的作用域中。 给编译器带上参数-language:implicitConversions 这样在做转换时，编译器将不会发生警告。]]></content>
      <categories>
        <category>翻译</category>
      </categories>
      <tags>
        <tag>scala</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Scala之旅——自身类型]]></title>
    <url>%2F2018%2F09%2F13%2Fself-types%2F</url>
    <content type="text"><![CDATA[自身类型是声明一个特质必须混入另外一种特质的方法，即使它并不继承。这使得不需要引入就可以使用依赖的成员。 自身类型可以缩短this类型或者其他别名为this的标识符。这种语法看起来像是普通的函数语法，但意思是完全不同的。 为了在特质中使用自身类型，需要写一个混入的其他特质的类型的标识符，以及一个=&gt;（例如someIdentifier: SomeOtherTrait =&gt;）。 123456789101112131415trait User &#123; def username: String&#125;trait Tweeter &#123; this: User =&gt; // reassign this def tweet(tweetText: String) = println(s&quot;$username: $tweetText&quot;)&#125;class VerifiedTweeter(val username_ : String) extends Tweeter with User &#123; // We mixin User because Tweeter required it def username = s&quot;real $username_&quot;&#125;val realBeyoncé = new VerifiedTweeter(&quot;Beyoncé&quot;)realBeyoncé.tweet(&quot;Just spilled my glass of lemonade&quot;) // prints &quot;real Beyoncé: Just spilled my glass of lemonade&quot; 当我们在trait Tweeter中写到this: User =&gt;，这时在tweet方法中username变量便处于作用域当中。这也意味着VerifiedTweeter要继承Tweeter的话，还必须要混入User（使用with User）。]]></content>
      <categories>
        <category>翻译</category>
      </categories>
      <tags>
        <tag>scala</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Scala之旅——隐式参数]]></title>
    <url>%2F2018%2F09%2F12%2Fimplicit-parameters%2F</url>
    <content type="text"><![CDATA[一个方法可以拥有隐式参数列表，它由_implicit_关键字在参数列表的开头作为标记。如果这个参数列表的参数没有正常传递的话，Scala会去查找一个正确类型的隐式值，如果找到了，则会自动传递。 Scala查找找些参数的位置分以下2种类型： 在带有隐式参数块的方法被调用时，Scala首先会查找可以直接访问（不需要加前缀）的隐式定义和隐式参数。 然后会查找与隐式候选类型相关联的所有伴生对象中标记为implicit的成员。 关于Scala查找隐式值的位置，在the FAQ有更加详细的讲解。 下面的例子中我们定义了一个方法sum，通过使用Monid的add和unit的操作来计算列表中元素的和。注意下面的隐式值不能在顶层。 12345678910111213141516171819202122232425abstract class Monoid[A] &#123; def add(x: A, y: A): A def unit: A&#125;object ImplicitTest &#123; implicit val stringMonoid: Monoid[String] = new Monoid[String] &#123; def add(x: String, y: String): String = x concat y def unit: String = &quot;&quot; &#125; implicit val intMonoid: Monoid[Int] = new Monoid[Int] &#123; def add(x: Int, y: Int): Int = x + y def unit: Int = 0 &#125; def sum[A](xs: List[A])(implicit m: Monoid[A]): A = if (xs.isEmpty) m.unit else m.add(xs.head, sum(xs.tail)) def main(args: Array[String]): Unit = &#123; println(sum(List(1, 2, 3))) // uses IntMonoid implicitly println(sum(List(&quot;a&quot;, &quot;b&quot;, &quot;c&quot;))) // uses StringMonoid implicitly &#125;&#125; 这里Monid类定义了一个方法add，用来组合一对A类型的值并且返回一个A类型的值，另外定义了一个unit方法用来创建一个具体的A类型的值。 为了展示隐式参数是如何起作用的，我们首先定义了针对字符串和整数的Monoid，分别是StringMonoid和IntMoniod。关键字implicit表明了相关的对象可以被隐式使用。 方法sum接受一个List[A]并且返回一个A，它从unit方法中获取一个A类型的初始值，然后使用add方法，对于列表中的每一个A类型的值进行组合。这里我们让参数m成为隐式的，意味着在调用方法的时候仅需要提供xs参数，其中前提是Scala可以查找到一个隐式的Monoid[A]来用于隐式的m参数。 在main方法中我们调用了sum两次，但是仅仅提供了xs参数。Scala会在上文提到的范围中寻找一个隐式值。第一次调用sum方法传递了一个List[Int]给xs，意味着A是Int。隐式参数列表m被忽略了，所以Scala会去查找一个Monoid[Int]类型的隐式值。首先应用第一条查找规则 在带有隐式参数块的方法被调用时，Scala首先会查找可以直接访问（不需要加前缀）的隐式定义和隐式参数。 intMonoid是一个隐式的定义，且可以在main方法中直接访问，并且是正确的类型，所以会自动地传递给sum方法。 第二次调用sum时传递了一个List[String]，意味着A是String。此时隐式查找的方式会和Int一样，但这次查找到的是stringMonoid，并且自动传递给参数m。 该程序输出如下 126abc]]></content>
      <categories>
        <category>翻译</category>
      </categories>
      <tags>
        <tag>scala</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Scala之旅——复合类型]]></title>
    <url>%2F2018%2F09%2F11%2Fcompound-types%2F</url>
    <content type="text"><![CDATA[有时候需要表达一个对象的类型是多个其他类型的子类型，在Scala中使用复合类型可以做到，这时它是多个类型的交集。 假设已有2个特质Cloneable和Resetable： 12345678trait Cloneable extends java.lang.Cloneable &#123; override def clone(): Cloneable = &#123; super.clone().asInstanceOf[Cloneable] &#125;&#125;trait Resetable &#123; def reset: Unit&#125; 现在如果我们需要写一个函数cloneAndReset，它接受一个对象，克隆并且重置它： 12345def cloneAndReset(obj: ?): Cloneable = &#123; val cloned = obj.clone() obj.reset cloned&#125; 现在问题来了，参数obj到底是什么类型的呢？如果是Cloneable的，那么只能被clone但不能reset；如果是Resetable的，那么却又只能reset但不能进行clone操作。这种情况下，为了避免类型转换，我们可以声明obj的类型既是Cloneable又是Resetable。这种复合类型在Scala中写作：Cloneable with Resetable。 下面是修改后的函数： 123def cloneAndReset(obj: Cloneable with Resetable): Cloneable = &#123; //...&#125; 复合类型可以包含多个对象类型，它有一种改良（refinement）可以用来缩短现有对象成员的签名。 基本形式如下：A with B with C ... { refinement } 关于改良的用法，在抽象类型一节中有案例介绍。]]></content>
      <categories>
        <category>翻译</category>
      </categories>
      <tags>
        <tag>scala</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Scala之旅——抽象类型]]></title>
    <url>%2F2018%2F09%2F10%2Fabstract-types%2F</url>
    <content type="text"><![CDATA[特质和抽象类可以拥有抽象类型的成员。这意味着具体的实现可以定义实际的类型，下面是示例： 1234trait Buffer &#123; type T val element: T&#125; 这里我们定义了一个抽象的type T，用来描述element的类型。我们可以在抽象类中继承该特质，并为T增加了一个类型上界使之更为具体。 12345abstract class SeqBuffer extends Buffer &#123; type U type T &lt;: Seq[U] def length = element.length&#125; 注意我们将如何使用作为类型上界的另一个抽象的type U。class SeqBuffer通过声明一个Seq[U]（这里U是一个新的抽象类型）的子类型T，使得我们在一个Buffer中只能存储序列。 拥有抽象成员的特质和类经常与匿名类的实例化结合使用。为了说明这点，我们来看一段程序，其中涉及到一个指向整数列表的序列缓冲： 12345678910111213abstract class IntSeqBuffer extends SeqBuffer &#123; type U = Int&#125;def newIntSeqBuf(elem1: Int, elem2: Int): IntSeqBuffer = new IntSeqBuffer &#123; type T = List[U] val element = List(elem1, elem2) &#125;val buf = newIntSeqBuf(7, 8)println(&quot;length = &quot; + buf.length)println(&quot;content = &quot; + buf.element) 这里的工厂方法newIntSeqBuf用到了IntSeqBuf的一个匿名实现类（即new IntSeqBuffer），并将type T设置为一个List[Int]。 也可以将抽象类型成员转换为类的类型参数，反之亦然。下面是上述代码的另外一个版本，但仅仅使用了类型参数： 123456789101112131415abstract class Buffer[+T] &#123; val element: T&#125;abstract class SeqBuffer[U, +T &lt;: Seq[U]] extends Buffer[T] &#123; def length = element.length&#125;def newIntSeqBuf(e1: Int, e2: Int): SeqBuffer[Int, Seq[Int]] = new SeqBuffer[Int, List[Int]] &#123; val element = List(e1, e2) &#125;val buf = newIntSeqBuf(7, 8)println(&quot;length = &quot; + buf.length)println(&quot;content = &quot; + buf.element) 为了隐藏方法new IntSeqBuf返回的对象的具体序列实现类型，我们需要用到型变注解(即+T &lt;: Seq[U])。此外，有些场景下是不能用类型参数来替换抽象类型的。]]></content>
      <categories>
        <category>翻译</category>
      </categories>
      <tags>
        <tag>scala</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Scala之旅——内部类]]></title>
    <url>%2F2018%2F09%2F08%2Finner-classes%2F</url>
    <content type="text"><![CDATA[在Scala中，可以在类中拥有别的类作为其成员。与Java语言中内部类是包含它的类的成员相反，Scala中这些内部类是绑定在它的外部对象上的。如果想要在混合属于不同图的节点的时候，编译器能够在编译时阻止我们，那么路径依赖类型（Path-dependent types）提供了一种方案。 为了说明二者的区别，我们快速实现了图类型： 12345678910111213141516class Graph &#123; class Node &#123; var connectedNodes: List[Node] = Nil def connectTo(node: Node) &#123; if (connectedNodes.find(node.equals).isEmpty) &#123; connectedNodes = node :: connectedNodes &#125; &#125; &#125; var nodes: List[Node] = Nil def newNode: Node = &#123; val res = new Node nodes = res :: nodes res &#125;&#125; 该程序表明图是节点的列表（List[Node]）。每个节点拥有一个连接到其他节点（connectedNodes）的列表。class Node由于嵌套在class Graph当中，因而是路径依赖类型。因此，connectedNodes中的所有节点必须由Graph的相同实例来使用newNode进行创建。 123456val graph1: Graph = new Graphval node1: graph1.Node = graph1.newNodeval node2: graph1.Node = graph1.newNodeval node3: graph1.Node = graph1.newNodenode1.connectTo(node2)node3.connectTo(node1) 这里我们显式地声明了node1、node2和node3为graph1.Node，其实编译器也能推断出来。因为我们在调用graph1.newNode时，它调用了new Node，该方法使用的其实是特定实例graph1的node实例。 如果我们有2个图，Scala的类型系统不允许我们把不同图的节点混合在一起，因为不同图的节点的类型是不一样的。 下面是错误示例： 1234567val graph1: Graph = new Graphval node1: graph1.Node = graph1.newNodeval node2: graph1.Node = graph1.newNodenode1.connectTo(node2) // legalval graph2: Graph = new Graphval node3: graph2.Node = graph2.newNodenode1.connectTo(node3) // illegal! graph1.Node与graph2.Node的类型是不同的。而在Java中，上面这段程序的最后一行是正确。对于不同图的节点来说，Java会分配相同的类型Graph.Node（即类Graph是Node的前缀）。在Scala中这种类型可以被写作Graph#Node。如果想要连接不同图的节点，我们需要按照下面的方式改变最开始对于图的实现： 12345678910111213141516class Graph &#123; class Node &#123; var connectedNodes: List[Graph#Node] = Nil def connectTo(node: Graph#Node) &#123; if (connectedNodes.find(node.equals).isEmpty) &#123; connectedNodes = node :: connectedNodes &#125; &#125; &#125; var nodes: List[Node] = Nil def newNode: Node = &#123; val res = new Node nodes = res :: nodes res &#125;&#125;]]></content>
      <categories>
        <category>翻译</category>
      </categories>
      <tags>
        <tag>scala</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Scala之旅——型变]]></title>
    <url>%2F2018%2F09%2F07%2Fvariances%2F</url>
    <content type="text"><![CDATA[型变是复杂类型的子类型关系与它们组件的类型的子类型关系之间的关联性。Scala支持 泛型类的类型参数上的型变注解，可以使得它们是协变的、逆变的或者不变的（如果没有使用注解的话）。型变在类型系统中的使用使得我们在复杂的类型之间建立起了直观的联系，反之如果没有型变则限制了抽象类的重用。 123class Foo[+A] // 协变类class Bar[-A] // 逆变类class Baz[A] // 不变类 协变泛型类的类型参数A可以通过使用注解+A变成协变的。对于某个class List[+A]，让A协变意味着对于类型A和B，如果A是B的子类型，那么List[A]则是List[B]的子类型。这让我们可以使用泛型类来创建非常有用且直观的子类型关系。 现在来看下面这个简单的类结构： 12345abstract class Animal &#123; def name: String&#125;case class Cat(name: String) extends Animalcase class Dog(name: String) extends Animal Cat和Dog都是Animal的子类型。Scala的标准库中有一个常用的不可变类sealed abstract class List[+A] ，它的类型参数A就是协变的。这意味着List[Cat]是一个List[Animal]而 List[Dog]也是一个List[Animal]。从直观上，一个猫的列表和一个狗的列表都是一个动物列表是讲得通的。因而你可以把它们其中任意一个替换为List[Animal]来使用。 下面的例子当中，方法printAnimalNames会接受一个动物列表作为参数，并且依次在新的一行里打印它们的名字。如果List[A]不是协变的，则下面两个方法的调用不会通过编译，这将严重限制了printAnimalNames方法的使用。 123456789101112131415161718object CovarianceTest extends App &#123; def printAnimalNames(animals: List[Animal]): Unit = &#123; animals.foreach &#123; animal =&gt; println(animal.name) &#125; &#125; val cats: List[Cat] = List(Cat(&quot;Whiskers&quot;), Cat(&quot;Tom&quot;)) val dogs: List[Dog] = List(Dog(&quot;Fido&quot;), Dog(&quot;Rex&quot;)) printAnimalNames(cats) // Whiskers // Tom printAnimalNames(dogs) // Fido // Rex&#125; 逆变泛型类的类型参数A可以通过使用注解-A变成逆变的。这使得我们在类和相似的类型参数之间建立起了子类型关系，而结果正好与协变相反。也就是说，对于某个类class Writer[-A]，让A逆变意味着对于类型A和B，如果A是B的子类型，那么Writer[B]则是Writer[A]的子类型。 想想上面定义的类Cat、Dog和Animal，在下面例子中的应用： 123abstract class Printer[-A] &#123; def print(value: A): Unit&#125; 一个Printer[A]是一个简单的类，它知道该如何打印出类型A。下面我们为具体的类型来定义一些子类吧： 123456789class AnimalPrinter extends Printer[Animal] &#123; def print(animal: Animal): Unit = println(&quot;The animal&apos;s name is: &quot; + animal.name)&#125;class CatPrinter extends Printer[Cat] &#123; def print(cat: Cat): Unit = println(&quot;The cat&apos;s name is: &quot; + cat.name)&#125; 如果一个Printer[Cat]知道如何打印Cat到控制台，而一个Printer[Animal]知道如何打印Animal到控制台，那么一个Printer[Animal]从道理上讲也应该知道如何打印Cat。反过来则不适用，因为一个Printer[Cat]不知道如何打印一个Animal到控制台。因此我们应该能够用Printer[Animal]来替换Printer[Cat]，要做到这点的话，需要让Printer[A]成为逆变的。 12345678910111213object ContravarianceTest extends App &#123; val myCat: Cat = Cat(&quot;Boots&quot;) def printMyCat(printer: Printer[Cat]): Unit = &#123; printer.print(myCat) &#125; val catPrinter: Printer[Cat] = new CatPrinter val animalPrinter: Printer[Animal] = new AnimalPrinter printMyCat(catPrinter) printMyCat(animalPrinter)&#125; 该程序的输出如下： 12The cat&apos;s name is: BootsThe animal&apos;s name is: Boots 不变Scala中的泛型类默认是不变的。这意味着它们既不是协变的，也不是逆变的。下面的例子中，Container类是不变的，则Container[Cat]不是Container[Animal]，反过来也不是。 1234567class Container[A](value: A) &#123; private var _value: A = value def getValue: A = _value def setValue(value: A): Unit = &#123; _value = value &#125;&#125; 看起来似乎一个Container[Cat]应该也是一个Container[Animal]，但是允许一个可变的泛型类协变其实是不安全的。这个例子中，Container是不变的，这点很重要。如果Container是协变的，类似于下面的事情可能就会发生： 1234val catContainer: Container[Cat] = new Container(Cat(&quot;Felix&quot;))val animalContainer: Container[Animal] = catContaineranimalContainer.setValue(Dog(&quot;Spot&quot;))val cat: Cat = catContainer.getValue // Oops, we&apos;d end up with a Dog assigned to a Cat 幸运的是，在我们犯错前编译器就会阻止我们。 其他示例另外有一个可以帮助我们理解型变的例子，是源于Scala标准库里的trait Function1[-T, +R]。Function1是带有一个参数的函数，第一个类型参数T表示参数类型，第二个类型参数R表示返回类型。Function1在它的参数类型上是逆变的，在返回类型上是协变的。一般我们会使用字面量A =&gt; B来表示Function1[A, B]。 假如我们已经有了和之前类似的Cat、Dog、Animal继承树，外加下面这些： 12abstract class SmallAnimal extends Animalcase class Mouse(name: String) extends SmallAnimal 假设现在我们有个函数接受动物类型，返回它们吃的食物类型。我们想要的可能是Cat =&gt; SmallAnimal（因为猫会吃小动物），但是如果替换为Animal =&gt; Mouse，我们的程序也可以正常运行。直观上说Animal =&gt; Mouse也可以接受一个Cat作为参数，因为Cat是一个Animal，并且返回一个Mouse，而它也是一个SmallAnimal。我们可以安全且隐形地用后者进行替换，因而我们可以说Animal =&gt; Mouse是Cat =&gt; SmallAnimal的子类型。 和其他语言比较和Scala类似的一些语言对于支持型变的方式是不一样的。例如，Scala中的型变注解其实和C#非常类似，它们都是在抽象类的定义时添加了注解（称为“声明式型变”）。而在Java中，型变注解是在一个抽象类使用时由使用者给定的（称为“使用式型变”）。]]></content>
      <categories>
        <category>翻译</category>
      </categories>
      <tags>
        <tag>scala</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Scala之旅——类型下界]]></title>
    <url>%2F2018%2F09%2F06%2Flower-type-bounds%2F</url>
    <content type="text"><![CDATA[类型上界限制了一个类型是另外一个类型的子类型，而类型下界则声明了一个类型是另外一个类型的父类型。B &gt;: A表明了类型参数B或者抽象类型B是类型A的超类。在大多数场景中，A是作为类的类型参数，而B会作为方法的类型参数。 这里有个十分有用的例子： 12345678910111213trait Node[+B] &#123; def prepend(elem: B): Node[B]&#125;case class ListNode[+B](h: B, t: Node[B]) extends Node[B] &#123; def prepend(elem: B): ListNode[B] = ListNode(elem, this) def head: B = h def tail: Node[B] = t&#125;case class Nil[+B]() extends Node[B] &#123; def prepend(elem: B): ListNode[B] = ListNode(elem, this)&#125; 这个程序实现了一个单向链表。Nil表示一个空的元素（比如一个空的列表）。class ListNode是一个Node，它包含了一个类型B的元素（head）和一个列表中其余元素的引用（tail）。class Node和它的子类型是协变的，因为这里有+B。 然而，这个程序不能通过编译，因为prepend方法中的参数elem是B类型的，且声明了为协变的。这之所以行不通，是在于函数在它们的参数类型上是逆变的，而在它们的返回类型上是协变的。 为了解决这个问题，我们需要转变prepend方法中参数类型的型变。我们可以引用新的类型U，它的类型下界是B，从而实现这一转变。 12345678910111213trait Node[+B] &#123; def prepend[U &gt;: B](elem: U): Node[U]&#125;case class ListNode[+B](h: B, t: Node[B]) extends Node[B] &#123; def prepend[U &gt;: B](elem: U): ListNode[U] = ListNode(elem, this) def head: B = h def tail: Node[B] = t&#125;case class Nil[+B]() extends Node[B] &#123; def prepend[U &gt;: B](elem: U): ListNode[U] = ListNode(elem, this)&#125; 现在我们便可以像下面这样操作了： 12345678trait Birdcase class AfricanSwallow() extends Birdcase class EuropeanSwallow() extends Birdval africanSwallowList= ListNode[AfricanSwallow](AfricanSwallow(), Nil())val birdList: Node[Bird] = africanSwallowListbirdList.prepend(new EuropeanSwallow) Node[Bird]被分配到africanSwallowList，但是仍然可以接受EuropeanSwallow。]]></content>
      <categories>
        <category>翻译</category>
      </categories>
      <tags>
        <tag>scala</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Scala之旅——类型上界]]></title>
    <url>%2F2018%2F09%2F05%2Fupper-type-bounds%2F</url>
    <content type="text"><![CDATA[在Scala中，类型参数和抽象类型可能受到类型边界的约束。这些类型边界限制了具体的类型变量，同时揭示了关于该类型成员更多的信息。一个类型上界T &lt;: A表明了类型变量T是类型A的子类型。 这里有个例子演示了类PetContainer的类型参数的类型上界： 123456789101112131415161718192021222324abstract class Animal &#123; def name: String&#125;abstract class Pet extends Animal &#123;&#125;class Cat extends Pet &#123; override def name: String = &quot;Cat&quot;&#125;class Dog extends Pet &#123; override def name: String = &quot;Dog&quot;&#125;class Lion extends Animal &#123; override def name: String = &quot;Lion&quot;&#125;class PetContainer[P &lt;: Pet](p: P) &#123; def pet: P = p&#125;val dogContainer = new PetContainer[Dog](new Dog)val catContainer = new PetContainer[Cat](new Cat) 1val lionContainer = new PetContainer[Lion](new Lion) // this would not compile class PetContainer接受一个类型参数P，它是Pet的子类型。Dog和Cat是Pet的子类型，因此我们可以创建一个新的PetContainer[Dog]和PetContainer[Cat]。然而，如果我们试图创建一个PetContainer[Lion]，则会得到下面的错误： type arguments [Lion] do not conform to class PetContainer&#39;s type parameter bounds [P &lt;: Pet] 这是因为Lion不是Pet的子类型。]]></content>
      <categories>
        <category>翻译</category>
      </categories>
      <tags>
        <tag>scala</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Scala之旅——for解析式]]></title>
    <url>%2F2018%2F09%2F04%2Ffor-comprehensions%2F</url>
    <content type="text"><![CDATA[Scala为了表达序列解析提供了一种轻量级的符号。解析式的形式如for (enumerators) yield e，其中enumerators是以分号分隔的枚举器列表。一个枚举器要么是产生新变量的生成器，要么是一个过滤器。解析式对于由枚举器生成的每一个绑定的主体e进行赋值，并且返回这些值的一个序列。 下面是示例： 1234567891011case class User(val name: String, val age: Int)val userBase = List(new User(&quot;Travis&quot;, 28), new User(&quot;Kelly&quot;, 33), new User(&quot;Jennifer&quot;, 44), new User(&quot;Dennis&quot;, 23))val twentySomethings = for (user &lt;- userBase if (user.age &gt;=20 &amp;&amp; user.age &lt; 30)) yield user.name // i.e. add this to a listtwentySomethings.foreach(name =&gt; println(name)) // prints Travis Dennis 这里的for循环使用了yield语句会生成一个List。因为这里的yield user.name是一个List[String]。user &lt;- userBase是一个生成器，而if (user.age &gt;=20 &amp;&amp; user.age &lt; 30)是一个守卫，用于过滤出20多岁的用户。 这里有一个更加复杂的例子，使用了2个生成器，用来计算出介于0到n-1之间所有可能的数值对，且它们的和等于给定的值v： 123456789def foo(n: Int, v: Int) = for (i &lt;- 0 until n; j &lt;- i until n if i + j == v) yield (i, j)foo(10, 10) foreach &#123; case (i, j) =&gt; println(s&quot;($i, $j) &quot;) // prints (1, 9) (2, 8) (3, 7) (4, 6) (5, 5)&#125; 在这里n == 10，v == 10。在第一次迭代中，i == 0且j == 0则i + j != v，因而没有值生成。在i递增到1之前，j会递增9次。如果没有守卫条件，则会输出如下： 1(0, 0) (0, 1) (0, 2) (0, 3) (0, 4) (0, 5) (0, 6) (0, 7) (0, 8) (0, 9) (1, 1) ... 注意，解析式并不局限于列表。所有支持withFilter、map和flatMap操作的数据类型都可以用于序列解析。 你可以在解析式中省略yield。那样的话，解析式会返回Unit。这点在你需要执行具有副作用的操作时比较有用。下面是一个和之前完全类似的程序，只不过没有使用yield： 123456def foo(n: Int, v: Int) = for (i &lt;- 0 until n; j &lt;- i until n if i + j == v) println(s&quot;($i, $j)&quot;)foo(10, 10)]]></content>
      <categories>
        <category>翻译</category>
      </categories>
      <tags>
        <tag>scala</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Scala之旅——泛型类]]></title>
    <url>%2F2018%2F09%2F02%2Fgeneric-classes%2F</url>
    <content type="text"><![CDATA[泛型类是接受类型作为参数的类。这对于集合类特别有用。 定义一个泛型类泛型类使用方括号[]接受类型作为参数。尽管可以使用任何参数名，但是一般约定使用字母A来作为类型参数标识符。 12345678910class Stack[A] &#123; private var elements: List[A] = Nil def push(x: A) &#123; elements = x :: elements &#125; def peek: A = elements.head def pop(): A = &#123; val currentTop = peek elements = elements.tail currentTop &#125;&#125; 这里Stack类的实现接受任意类型A作为参数。这意味着下面的列表var elements: List[A] = Nil，只能存储A类型的元素。方法def push仅仅接受类型A的参数（注意： elements = x :: elements 通过将x加到当前这个elements的头部，来将elements重新分配到一个新的列表）。 用法要使用一个泛型类，就将类型替换A放在方括号中。 12345val stack = new Stack[Int]stack.push(1)stack.push(2)println(stack.pop) // prints 2println(stack.pop) // prints 1 上述的stack实例仅接受Int类型。然而，如果类型参数有子类型，下面的做法也能通过： 12345678910class Fruitclass Apple extends Fruitclass Banana extends Fruitval stack = new Stack[Fruit]val apple = new Appleval banana = new Bananastack.push(apple)stack.push(banana) 类Apple和Banana都继承自Fruit，因此我们可以把apple和banana加入到栈Fruit中。 注意：泛型的子类型是不可变的。这意味着如果有个字符类型的栈Stack[Char]，那么它是不能作为一个整数类型的栈Stack[Int]来使用的。这听起来有点不对劲，事实上我们应该能够把纯整数放进一个字符栈中的。总之，只有在B=A的时候，Stack[A]才是Stack[B]的子类型。这个其实是有局限性的，于是Scala提供了一种类型参数的注解机制来控制泛型类型的子类型的行为。]]></content>
      <categories>
        <category>翻译</category>
      </categories>
      <tags>
        <tag>scala</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Scala之旅——提取器对象]]></title>
    <url>%2F2018%2F08%2F31%2Fextractor-objects%2F</url>
    <content type="text"><![CDATA[一个提取器对象会有一个unapply方法。apply方法类似于接受参数并创建对象的构造器，反过来unapply则是接受一个对象并试图返回原来的参数。这一点在模式匹配和偏函数中经常使用。 1234567891011121314151617import scala.util.Randomobject CustomerID &#123; def apply(name: String) = s&quot;$name--$&#123;Random.nextLong&#125;&quot; def unapply(customerID: String): Option[String] = &#123; val stringArray: Array[String] = customerID.split(&quot;--&quot;) if (stringArray.tail.nonEmpty) Some(stringArray.head) else None &#125;&#125;val customer1ID = CustomerID(&quot;Sukyoung&quot;) // Sukyoung--23098234908customer1ID match &#123; case CustomerID(name) =&gt; println(name) // prints Sukyoung case _ =&gt; println(&quot;Could not extract a CustomerID&quot;)&#125; apply方法由一个name创建了一个CustomerID字符串。unapply则反过来获得了name。当我们调用CustomerID(&quot;Sukyoung&quot;)时，其实是CustomerID.apply(&quot;Sukyoung&quot;)的一种简写形式。而当我们调用case CustomerID(name) =&gt; println(name)时，则实际调用的是unapply方法。 另外unapply方法也可以用来分配一个值。 123val customer2ID = CustomerID(&quot;Nico&quot;)val CustomerID(name) = customer2IDprintln(name) // prints Nico 这个其实和val name = CustomerID.unapply(customer2ID).get是等价的。 1val CustomerID(name2) = &quot;--asdfasdfasdf&quot; 如果没有匹配上，则抛出一个scala.MatchError： 1val CustomerID(name3) = &quot;-asdfasdfasdf&quot; 关于unapply的返回类型有以下几种选择： 如果仅仅是一个判断，则返回一个Boolean。例如case even()。 如果要返回T类型的单个子值，则返回一个Option[T]。 如果要返回多个子值如T1,...,Tn，则可以把它们组合起来放在一个可选的元组Option[(T1,...,Tn)]当中。 有时候子值的数量不固定，我们则可以返回一个序列。因此这时候，你就可以通过定义unapplySeq的方式来返回一个Option[Seq[T]]，这种用法常见于case List(x1, ..., xn)模式中。]]></content>
      <categories>
        <category>翻译</category>
      </categories>
      <tags>
        <tag>scala</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Scala之旅——正则表达式模式]]></title>
    <url>%2F2018%2F08%2F30%2Fregular-expression-patterns%2F</url>
    <content type="text"><![CDATA[正则表达式是一个字符串，可以被用来在数据中查找某种模式（或者没有该模式）的数据。任何字符串只要使用了.r方法就可以转化为一个正则表达式。 12345678import scala.util.matching.Regexval numberPattern: Regex = &quot;[0-9]&quot;.rnumberPattern.findFirstMatchIn(&quot;awesomepassword&quot;) match &#123; case Some(_) =&gt; println(&quot;Password OK&quot;) case None =&gt; println(&quot;Password must contain a number&quot;)&#125; 上述例子当中，numberPattern是一个Regex（正则表达式），可以用来确定密码中是否包含数字。你可以使用圆括号来搜索正则表达式组。 12345678910111213141516import scala.util.matching.Regexval keyValPattern: Regex = &quot;([0-9a-zA-Z-#() ]+): ([0-9a-zA-Z-#() ]+)&quot;.rval input: String = &quot;&quot;&quot;background-color: #A03300; |background-image: url(img/header100.png); |background-position: top center; |background-repeat: repeat-x; |background-size: 2160px 108px; |margin: 0; |height: 108px; |width: 100%;&quot;&quot;&quot;.stripMarginfor (patternMatch &lt;- keyValPattern.findAllMatchIn(input)) println(s&quot;key: $&#123;patternMatch.group(1)&#125; value: $&#123;patternMatch.group(2)&#125;&quot;) 这里我们解析出了字符串中的键值对。每个匹配都包含了一组子匹配，下面是输出： 12345678key: background-color value: #A03300key: background-image value: url(imgkey: background-position value: top centerkey: background-repeat value: repeat-xkey: background-size value: 2160px 108pxkey: margin value: 0key: height value: 108pxkey: width value: 100]]></content>
      <categories>
        <category>翻译</category>
      </categories>
      <tags>
        <tag>scala</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Scala之旅——单例对象]]></title>
    <url>%2F2018%2F08%2F30%2Fsingleton-objects%2F</url>
    <content type="text"><![CDATA[对象是只有一个实例的类。当它被引用的时候才会被惰性创建，就像一个惰性的val。 作为顶层值，对象是单例的。 不论作为封闭类成员还是本地值，它表现得完全像一个惰性的val。 定义一个单例对象对象是一个值。对象的定义跟类差不多，只不过使用的关键字是object： 1object Box 下面是带方法的对象的例子： 12345package loggingobject Logger &#123; def info(message: String): Unit = println(s&quot;INFO: $message&quot;)&#125; 方法info可以在程序的任何位置导入使用。创建这样的工具方法是单例对象的常见用法。 让我们看下如何在另外一个包里使用info方法： 123456789import logging.Logger.infoclass Project(name: String, daysToComplete: Int)class Test &#123; val project1 = new Project(&quot;TPS Reports&quot;, 1) val project2 = new Project(&quot;Website redesign&quot;, 5) info(&quot;Created projects&quot;) // Prints &quot;INFO: Created projects&quot;&#125; 因为使用了导入语句import logging.Logger.info，所以info在这里是可见的。 导入语句对于被导入的对象来说需要一个“可靠的路径”，而对象就是一个“可靠的路径”。 注意：如果一个对象不是处于顶层，而是嵌套在其他的类或者对象当中，那么这个对象则与其他成员一样是“路径依赖”的。也就是说，如果给定两种类型的饮料：class Milk和class OrangeJuice，另外有一个类成员object NutritionInfo，它依赖于相对于它封闭的实例——牛奶或者橙汁，这种情况下milk.NutritionInfo和oj.NutritionInfo则是完全不同的东西。 伴生对象与类同名的对象被称为伴生对象。相对地，这个类也是该对象的伴生类。一个伴生类或者对象可以互相访问同伴的私有成员。虽然伴生对象的方法不属于其伴生类的实例，但是我们可以在这个类中使用它们。 1234567891011121314import scala.math._case class Circle(radius: Double) &#123; import Circle._ def area: Double = calculateArea(radius)&#125;object Circle &#123; private def calculateArea(radius: Double): Double = Pi * pow(radius, 2.0)&#125;val circle1 = new Circle(5.0)circle1.area 类class Circle 有一个明确声明的成员area ，它属于该类所有的实例，而单例object Circle有一个方法calculateArea，它对于所有的实例也都是可用的。 每个伴生对象都可以拥有工厂方法： 1234567891011121314151617181920class Email(val username: String, val domainName: String)object Email &#123; def fromString(emailString: String): Option[Email] = &#123; emailString.split(&apos;@&apos;) match &#123; case Array(a, b) =&gt; Some(new Email(a, b)) case _ =&gt; None &#125; &#125;&#125;val scalaCenterEmail = Email.fromString(&quot;scala.center@epfl.ch&quot;)scalaCenterEmail match &#123; case Some(email) =&gt; println( s&quot;&quot;&quot;Registered an email |Username: $&#123;email.username&#125; |Domain name: $&#123;email.domainName&#125; &quot;&quot;&quot;) case None =&gt; println(&quot;Error: could not parse email&quot;)&#125; 对象Email包含了一个工厂方法fromString，它接收一个String来创建一个Email实例。这里返回了Option[Email]以防转换错误。 注意：如果一个类或者对象具有伴生对象或者伴生类，那么必须要定义在同一个文件当中。如果要在交互式解释器（REPL）当中定义伴生类和伴生对象的话，要么把它们定义在同一行，要么进入:paste模式。 Java程序员需要注意Java中的static成员，在Scala中被设计为一个伴生对象的普通成员。如果在Java代码中使用一个伴生对象，会在其伴生类中使用static修饰符来定义成员。这被称为_静态转发_。即使你并没有定义一个伴生类，这也会自动发生。]]></content>
      <categories>
        <category>翻译</category>
      </categories>
      <tags>
        <tag>scala</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Scala之旅——模式匹配]]></title>
    <url>%2F2018%2F08%2F28%2Fpattern-matching%2F</url>
    <content type="text"><![CDATA[模式匹配是检查一个值是否匹配某种模式的机制。一个成功的匹配可以把一个值解析成它的组成部分。它相当于Java中switch的增强版，可以以此来替代一堆的if/else语句。 语法一个match表达式有个待匹配的值、match关键字以及至少一个case从句。 12345678910import scala.util.Randomval x: Int = Random.nextInt(10)x match &#123; case 0 =&gt; &quot;zero&quot; case 1 =&gt; &quot;one&quot; case 2 =&gt; &quot;two&quot; case _ =&gt; &quot;many&quot;&#125; 上面的val x是0到10之间的要给随机整数。x是match操作符的左操作数，右边是4个样例组成的表达式。最后一个样例_匹配了大于2的所有数字。这些样例也被称为_代值_。 match表达式有一个返回值。 1234567def matchTest(x: Int): String = x match &#123; case 1 =&gt; &quot;one&quot; case 2 =&gt; &quot;two&quot; case _ =&gt; &quot;many&quot;&#125;matchTest(3) // manymatchTest(1) // one 这个match表达式返回一个String类型，那是因为所有的case都返回String。所以函数matchTest便返回一个String。 匹配样例类样例类在模式匹配中特别有用。 1234567abstract class Notificationcase class Email(sender: String, title: String, body: String) extends Notificationcase class SMS(caller: String, message: String) extends Notificationcase class VoiceRecording(contactName: String, link: String) extends Notification Notification是一个抽象父类，另外有3个Notification类型的实现，分别是样例类Email、SMS和VoiceRecording。现在我们可以使用这些样例类进行模式匹配。 12345678910111213141516def showNotification(notification: Notification): String = &#123; notification match &#123; case Email(email, title, _) =&gt; s&quot;You got an email from $email with title: $title&quot; case SMS(number, message) =&gt; s&quot;You got an SMS from $number! Message: $message&quot; case VoiceRecording(name, link) =&gt; s&quot;you received a Voice Recording from $name! Click the link to hear it: $link&quot; &#125;&#125;val someSms = SMS(&quot;12345&quot;, &quot;Are you there?&quot;)val someVoiceRecording = VoiceRecording(&quot;Tom&quot;, &quot;voicerecording.org/id/123&quot;)println(showNotification(someSms)) // prints You got an SMS from 12345! Message: Are you there?println(showNotification(someVoiceRecording)) // you received a Voice Recording from Tom! Click the link to hear it: voicerecording.org/id/123 函数showNotification接受一个抽象类型Notification，并且用来匹配Notification类型（它会判断出到底是一个Email、SMS，还是一个VoiceRecording）。在case Email(email, title, _)中email和title用于返回值，而body则因_而被忽略。 模式守卫模式守卫是简单的布尔表达式，使得case子句更具体，要做到这点只需要在模式后添加if &lt;boolean expression&gt;。 12345678910111213141516171819202122def showImportantNotification(notification: Notification, importantPeopleInfo: Seq[String]): String = &#123; notification match &#123; case Email(email, _, _) if importantPeopleInfo.contains(email) =&gt; &quot;You got an email from special someone!&quot; case SMS(number, _) if importantPeopleInfo.contains(number) =&gt; &quot;You got an SMS from special someone!&quot; case other =&gt; showNotification(other) // nothing special, delegate to our original showNotification function &#125;&#125;val importantPeopleInfo = Seq(&quot;867-5309&quot;, &quot;jenny@gmail.com&quot;)val someSms = SMS(&quot;867-5309&quot;, &quot;Are you there?&quot;)val someVoiceRecording = VoiceRecording(&quot;Tom&quot;, &quot;voicerecording.org/id/123&quot;)val importantEmail = Email(&quot;jenny@gmail.com&quot;, &quot;Drinks tonight?&quot;, &quot;I&apos;m free after 5!&quot;)val importantSms = SMS(&quot;867-5309&quot;, &quot;I&apos;m here! Where are you?&quot;)println(showImportantNotification(someSms, importantPeopleInfo))println(showImportantNotification(someVoiceRecording, importantPeopleInfo))println(showImportantNotification(importantEmail, importantPeopleInfo))println(showImportantNotification(importantSms, importantPeopleInfo)) 在case Email(email, _, _) if importantPeopleInfo.contains(email)中，仅当email在重要人士的的列表中，该模式才会匹配上。 类型匹配你可以像下面这样匹配类型： 123456789101112abstract class Devicecase class Phone(model: String) extends Device&#123; def screenOff = &quot;Turning screen off&quot;&#125;case class Computer(model: String) extends Device &#123; def screenSaverOn = &quot;Turning screen saver on...&quot;&#125;def goIdle(device: Device) = device match &#123; case p: Phone =&gt; p.screenOff case c: Computer =&gt; c.screenSaverOn&#125; def goIdle根据Device的类型不同会有不同的行为。当模式中需要调用方法时，这会很有用。一般惯例是使用类型的首字母来作为case标识符（如本例子中的p和c）。 密封类特质和类都可以被标记为sealed ，这个时候也意味着它的所有子类必须在相同的文件中进行声明。这样做可以保证所有的子类型都是已知的。 12345678sealed abstract class Furniturecase class Couch() extends Furniturecase class Chair() extends Furnituredef findPlaceToSit(piece: Furniture): String = piece match &#123; case a: Couch =&gt; &quot;Lie on the couch&quot; case b: Chair =&gt; &quot;Sit on the chair&quot;&#125; 这种做法对于模式匹配来说非常有用，因为我们不再需要一个额外的“case all”子句了。 注意Scala的模式匹配语句对于由样例类表示的代数类型的匹配时很有用。另外Scala也允许通过使用提取器对象的unapply方法，来定义有别于样例类的的模式。]]></content>
      <categories>
        <category>翻译</category>
      </categories>
      <tags>
        <tag>scala</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Scala之旅——样例类]]></title>
    <url>%2F2018%2F08%2F13%2Fcase-classes%2F</url>
    <content type="text"><![CDATA[样例类就像普通类，但是有一些关键的区别，我们后面会提到。样例类很擅长构建不可变数据。接下来，我们会发现它们在模式匹配中很有用。 定义一个样例类一个最简化的样例类需要关键字case class、标识符以及一个参数列表（也有可能是空的）。 123case class Book(isbn: String)val frankenstein = Book(&quot;978-0486282114&quot;) 注意这里实例化样例类Book时并没有使用关键字new。这是因为样例类默认有一个apply方法来构造对象。 当你创建一个带有参数的样例类时，这些参数默认是公有（val）的。 12345case class Message(sender: String, recipient: String, body: String)val message1 = Message(&quot;guillaume@quebec.ca&quot;, &quot;jorge@catalonia.es&quot;, &quot;Ça va ?&quot;)println(message1.sender) // prints guillaume@quebec.camessage1.sender = &quot;travis@washington.us&quot; // this line does not compile 你不能对message1.sender重新赋值，因为它是一个val（即不可变的）。当然，也可以在样例类中使用var，但是不鼓励这样做。 比较样例类比较的是其中的结构而非引用： 12345case class Message(sender: String, recipient: String, body: String)val message2 = Message(&quot;jorge@catalonia.es&quot;, &quot;guillaume@quebec.ca&quot;, &quot;Com va?&quot;)val message3 = Message(&quot;jorge@catalonia.es&quot;, &quot;guillaume@quebec.ca&quot;, &quot;Com va?&quot;)val messagesAreTheSame = message2 == message3 // true 虽然message2和message3 指向不同的对象，但是它们的值是相等的。 复制你可以直接使用copy方法来复制一个样例类的实例，甚至可以改变其构造器的参数。 123456case class Message(sender: String, recipient: String, body: String)val message4 = Message(&quot;julien@bretagne.fr&quot;, &quot;travis@washington.us&quot;, &quot;Me zo o komz gant ma amezeg&quot;)val message5 = message4.copy(sender = message4.recipient, recipient = &quot;claire@bourgogne.fr&quot;)message5.sender // travis@washington.usmessage5.recipient // claire@bourgogne.frmessage5.body // &quot;Me zo o komz gant ma amezeg&quot; message4中的recipient值传给了message5中的sender，而message4中的body被直接复制过去了。]]></content>
      <categories>
        <category>翻译</category>
      </categories>
      <tags>
        <tag>scala</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Scala之旅——嵌套方法]]></title>
    <url>%2F2018%2F08%2F12%2Fnested-method%2F</url>
    <content type="text"><![CDATA[在Scala中，可以定义嵌套方法。下面的例子中，提供了一个方法factorial用于计算给定数字的阶乘： 12345678910def factorial(x: Int): Int = &#123; def fact(x: Int, accumulator: Int): Int = &#123; if (x &lt;= 1) accumulator else fact(x - 1, x * accumulator) &#125; fact(x, 1)&#125;println(&quot;Factorial of 2: &quot; + factorial(2))println(&quot;Factorial of 3: &quot; + factorial(3)) 该程序的输出是： 12Factorial of 2: 2Factorial of 3: 6]]></content>
      <categories>
        <category>翻译</category>
      </categories>
      <tags>
        <tag>scala</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Scala之旅——高阶函数]]></title>
    <url>%2F2018%2F08%2F12%2Fhigher-order-functions%2F</url>
    <content type="text"><![CDATA[高阶函数使用其他函数作为参数，或者返回一个函数。这是可行的，因为在Scala中函数是“头等公民”。关于这点在术语上可能让人有点困惑，我们把那些使用函数作为参数或者返回函数的方法和函数都称为“高阶函数”。 最常见的例子之一是用于Scala中集合的高阶函数map。 123val salaries = Seq(20000, 70000, 40000)val doubleSalary = (x: Int) =&gt; x * 2val newSalaries = salaries.map(doubleSalary) // List(40000, 140000, 80000) doubleSalary是一个接收Int类型的x，返回x*2的函数。箭头=&gt;左侧的元组是一个参数列表，右侧是返回值。第三行，函数doubleSalary 被应用于列表salaries中的每一个元素。 为了简化代码，我们可以使用匿名函数，并且直接将它作为参数传给map： 12val salaries = Seq(20000, 70000, 40000)val newSalaries = salaries.map(x =&gt; x * 2) // List(40000, 140000, 80000) 注意在上面的例子当中x并没有被声明为Int。这是因为编译器可以根据函数map需要的类型来推断出它的类型。这段代码还有一种更惯用的写法是： 12val salaries = Seq(20000, 70000, 40000)val newSalaries = salaries.map(_ * 2) 由于Scala编译器已经知道了参数的类型（一个Int），你仅仅需要提供函数的右侧即可。唯一需注意的是要用_来替代参数名（在前面的例子中是x）。 方法强制转换为函数也可以将方法作为参数传递给高阶函数，因为Scala编译器会将方法强制转换为函数。 123456case class WeeklyWeatherForecast(temperatures: Seq[Double]) &#123; private def convertCtoF(temp: Double) = temp * 1.8 + 32 def forecastInFahrenheit: Seq[Double] = temperatures.map(convertCtoF) // &lt;-- passing the method convertCtoF&#125; 这里的方法convertCtoF被传递给forecastInFahrenheit。这样做是可以的，因为编译器会会将convertCtoF强制转换成函数x =&gt; convertCtoF(x) (注：x是自动生成的，并且在其作用域内保证了唯一性)。 接受函数的函数使用高阶函数的其中一个理由是为了减少冗余代码。假设你想用一些方法来提高某人的工资，并且通过不同的乘法因子。如果不使用高阶函数，那么可能要这样来写： 1234567891011object SalaryRaiser &#123; def smallPromotion(salaries: List[Double]): List[Double] = salaries.map(salary =&gt; salary * 1.1) def greatPromotion(salaries: List[Double]): List[Double] = salaries.map(salary =&gt; salary * math.log(salary)) def hugePromotion(salaries: List[Double]): List[Double] = salaries.map(salary =&gt; salary * salary)&#125; 注意这3个方法唯一的不同在于乘法因子。为了简化代码，你可以将重复的代码提取到高阶函数当中，如下所示： 1234567891011121314object SalaryRaiser &#123; private def promotion(salaries: List[Double], promotionFunction: Double =&gt; Double): List[Double] = salaries.map(promotionFunction) def smallPromotion(salaries: List[Double]): List[Double] = promotion(salaries, salary =&gt; salary * 1.1) def bigPromotion(salaries: List[Double]): List[Double] = promotion(salaries, salary =&gt; salary * math.log(salary)) def hugePromotion(salaries: List[Double]): List[Double] = promotion(salaries, salary =&gt; salary * salary)&#125; 这个新的方法promotion接受一个类型为Double =&gt; Double（即接受一个Double并返回一个Double的函数）的加薪函数作为参数，然后返回乘积。 返回函数的函数有些特定场景下，你可能希望生成一个函数。下面是一个返回函数的方法的例子。 12345678910def urlBuilder(ssl: Boolean, domainName: String): (String, String) =&gt; String = &#123; val schema = if (ssl) &quot;https://&quot; else &quot;http://&quot; (endpoint: String, query: String) =&gt; s&quot;$schema$domainName/$endpoint?$query&quot;&#125;val domainName = &quot;www.example.com&quot;def getURL = urlBuilder(ssl=true, domainName)val endpoint = &quot;users&quot;val query = &quot;id=1&quot;val url = getURL(endpoint, query) // &quot;https://www.example.com/users?id=1&quot;: String 注意urlBuilder的返回类型是(String, String) =&gt; String。这意味着返回的匿名函数接受两个字符串并返回一个字符串。在这个例子中，返回的匿名函数是(endpoint: String, query: String) =&gt; s&quot;https://www.example.com/$endpoint?$query&quot;。]]></content>
      <categories>
        <category>翻译</category>
      </categories>
      <tags>
        <tag>scala</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Scala之旅——混入]]></title>
    <url>%2F2018%2F08%2F12%2Fmixin-class-composition%2F</url>
    <content type="text"><![CDATA[当某个特质被用于组合类时，被称为混入。 1234567891011121314abstract class A &#123; val message: String&#125;class B extends A &#123; val message = &quot;I&apos;m an instance of class B&quot;&#125;trait C extends A &#123; def loudMessage = message.toUpperCase()&#125;class D extends B with Cval d = new Dprintln(d.message) // I&apos;m an instance of class Bprintln(d.loudMessage) // I&apos;M AN INSTANCE OF CLASS B 类D有一个父类B和一个混入C。一个类只能有一个父类但是可以有多个混入（分别使用关键字extend和with）。混入和某个父类可能有相同的父类。 现在，让我们看一个更有趣的例子，其中使用了抽象类： 12345abstract class AbsIterator &#123; type T def hasNext: Boolean def next(): T&#125; 该类中一个抽象的类型T和标准的迭代器方法。 接下来，我们将实现一个具体的类（所有的抽象成员T、hasNext和next都会被实现）： 12345678910class StringIterator(s: String) extends AbsIterator &#123; type T = Char private var i = 0 def hasNext = i &lt; s.length def next() = &#123; val ch = s charAt i i += 1 ch &#125;&#125; StringIterator带有一个String类型参数的构造器，可用于对字符串进行迭代。（例如查看一个字符串是否包含某个字符）： 现在我们创建一个特质，也继承于AbsIterator。 123trait RichIterator extends AbsIterator &#123; def foreach(f: T =&gt; Unit): Unit = while (hasNext) f(next())&#125; 该特质实现了foreach方法——只要还有元素可以迭代（while (hasNext)），就会一直对下个元素(next()) 调用传入的函数f: T =&gt; Unit。因为RichIterator是个特质，可以不必实现AbsIterator中的抽象成员。 下面我们要把StringIterator和RichIterator 中的功能组合成一个类。 12345object StringIteratorTest extends App &#123; class RichStringIter extends StringIterator(&quot;Scala&quot;) with RichIterator val richStringIter = new RichStringIter richStringIter foreach println&#125; 新的类RichStringIter有一个父类StringIterator和一个混入RichIterator。如果是单一继承，我们将不会达到这样的灵活性。]]></content>
      <categories>
        <category>翻译</category>
      </categories>
      <tags>
        <tag>scala</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[不能停更]]></title>
    <url>%2F2018%2F08%2F11%2Fkeep-on-fighting%2F</url>
    <content type="text"><![CDATA[之前说好的每周至少3篇文章，终于食言了，而且要命的是不想再回到博客当中去，不想面对这个现实。而仔细探究其原因好像还真就是因为懒惰，惰于面对自己。另外呢，还有一种十分功利的心态—— 最近在学习Scala，而这个过程并非那么的迅速见效，加上工作上没有机会检验，于是便对当前的翻译工作产生了一点怀疑，怀疑这样做是否耽误了正常的学习时间，这一想还真不得了，不光是不翻译了，却也不学习了。 今天想想，不行，实在不行，学习在开始阶段注定枯燥，但是目前能做的小事——翻译，还是要继续的。对！继续！ Keep on fighting!]]></content>
      <categories>
        <category>技术</category>
      </categories>
      <tags>
        <tag>坚持</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Scala之旅——特质]]></title>
    <url>%2F2018%2F08%2F02%2Ftraits%2F</url>
    <content type="text"><![CDATA[特质用于在类之间共享接口和字段，这点和Java8中的接口很像。类和对象可以继承特质，但是特质不能被实例化，因此没有参数。 定义一个特质最简化的特质就是关键字trait和一个标识符： 1trait HairColor 特质在用于泛型类型和抽象方法时特别有用。 1234trait Iterator[A] &#123; def hasNext: Boolean def next(): A&#125; 继承trait Iterator[A]需要一个类型A，并且实现方法hasNext和next。 使用特质使用extends关键字可以继承一个特质。实现特质中的任何一个抽象方法时使用override关键字： 123456789101112131415161718192021trait Iterator[A] &#123; def hasNext: Boolean def next(): A&#125;class IntIterator(to: Int) extends Iterator[Int] &#123; private var current = 0 override def hasNext: Boolean = current &lt; to override def next(): Int = &#123; if (hasNext) &#123; val t = current current += 1 t &#125; else 0 &#125;&#125;val iterator = new IntIterator(10)iterator.next() // returns 0iterator.next() // returns 1 IntIterator类的参数to用来作为上界。extends Iterator[Int]表示其中的next方法必须返回一个Int值。 子类型化凡是需要特质的地方，都可以由该特质的子类型来替换。 12345678910111213141516import scala.collection.mutable.ArrayBuffertrait Pet &#123; val name: String&#125;class Cat(val name: String) extends Petclass Dog(val name: String) extends Petval dog = new Dog("Harry")val cat = new Cat("Sally")val animals = ArrayBuffer.empty[Pet]animals.append(dog)animals.append(cat)animals.foreach(pet =&gt; println(pet.name)) // Prints Harry Sally 特质Pet有个抽象字段name，分别在Cat和Dog中的构造方法中得到了实现。最后一行，我们调用pet.name必须是在特质pet的任何子类型中得到了实现。]]></content>
      <categories>
        <category>翻译</category>
      </categories>
      <tags>
        <tag>scala</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Scala之旅——类]]></title>
    <url>%2F2018%2F08%2F01%2Fclasses%2F</url>
    <content type="text"><![CDATA[Scala中的类是用于创建对象的蓝图，其中包含了方法、常量、变量、类型、对象、特质、类，这些统称为成员。类型、对象和特质将在后面的文章中介绍。 类定义一个最简的类的定义就是关键字class+标识符，类名必须是大写。 123class Userval user1 = new User 关键字new被用于创建类的实例。User由于没有定义任何构造器，因而只有一个不接受任何参数的默认构造器。然而，你通常需要一个构造器和类体。下面是类定义的一个例子： 1234567891011121314class Point(var x: Int, var y: Int) &#123; def move(dx: Int, dy: Int): Unit = &#123; x = x + dx y = y + dy &#125; override def toString: String = s"($x, $y)"&#125;val point1 = new Point(2, 3)point1.x // 2println(point1) // prints (2, 3) Point类有4个成员：变量x和y，方法move和toString。与许多其他语言不同，主构造方法在类的签名中(var x: Int, var y: Int)。move方法接受2个参数，返回无任何意义的Unit类型值()。这一点与Java这类语言中的void相当。另外，toString方法不接受任何参数但是返回一个String值。因为toString覆盖了AnyRef中的toString方法，所以用了override关键字标记。 构造器构造器可以通过提供一个默认值来拥有可选参数： 12345class Point(var x: Int = 0, var y: Int = 0)val origin = new Point // x and y are both set to 0val point1 = new Point(1)println(point1.x) // prints 1 在这个版本的Point类中，x和y拥有默认值0所以没有必传参数。然而，因为构造器是从左往右读取参数，所以如果仅仅要传个y的值，你需要带名传参。 123class Point(var x: Int = 0, var y: Int = 0)val point2 = new Point(y=2)println(point2.y) // prints 2 这样的做法在实践中有利于使得表达明确无误。 私有成员和Getter/Setter语法成员默认是公有（public）的。使用private访问修饰符可以在函数外部隐藏它们。 123456789101112131415161718192021class Point &#123; private var _x = 0 private var _y = 0 private val bound = 100 def x = _x def x_= (newValue: Int): Unit = &#123; if (newValue &lt; bound) _x = newValue else printWarning &#125; def y = _y def y_= (newValue: Int): Unit = &#123; if (newValue &lt; bound) _y = newValue else printWarning &#125; private def printWarning = println("WARNING: Out of bounds")&#125;val point1 = new Pointpoint1.x = 99point1.y = 101 // prints the warning 在这个版本的Point类中，数据存在私有变量_x和_y中。def x和def y方法用于访问私有数据。def x_=和def y_=是为了验证和给_x和_y赋值。注意下对于setter方法的特殊语法：这个方法在getter方法的后面加上_=，后面跟着参数。 主构造方法中带有val和var的参数时公有的。然而由于val是不可变的，所以不能像下面这样去使用。 123class Point(val x: Int, val y: Int)val point = new Point(1, 2)point.x = 3 // &lt;-- does not compile 不带val或var的参数是私有的，仅在类中可见。 123class Point(x: Int, y: Int)val point = new Point(1, 2)point.x // &lt;-- does not compile]]></content>
      <categories>
        <category>翻译</category>
      </categories>
      <tags>
        <tag>scala</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[第一次被Merged]]></title>
    <url>%2F2018%2F07%2F28%2Ffirst-merged%2F</url>
    <content type="text"><![CDATA[最近一直在学习，同时看到Scala官网的一个Scala学习系列《Tour Of Scala》，感觉质量还不错，挺适合入门，恰好没有中文翻译，于是开始着手翻译。 第一次翻译很小心，加上刚刚学习Scala不久，花了将近一天的时间才翻译好导言，然后在仔细审核后发往Github并提交pull request。结果在第二天就受到了项目成员的翻译修改建议，于是赶紧修改并回复修改完成。之后的几天每天都在不断刷新项目主页，结果一直挂在那里。直到今天，突然想起来，于是看下，发现居然已经被合并了。 此时打开官网，已经可以看到合并后的效果了，更加感到开心。 加油吧，继续翻译，继续在参与开源的道路上走下去~]]></content>
      <categories>
        <category>技术</category>
      </categories>
      <tags>
        <tag>scala</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Scala之旅——统一类型]]></title>
    <url>%2F2018%2F07%2F23%2Funified-types%2F</url>
    <content type="text"><![CDATA[在Scala中，所有的值都有类型，包括数值和函数。下图阐述了类型层次结构的一个子集。 Scala类型层次结构Any是所有类型的超类型，也称为顶级类型。它定义了一些通用的方法如equals、hashCode和toString。Any有两个直接子类：AnyVal和AnyRef。 AnyVal代表值类型。有9个预定义的非空的值类型分别是：Double、Float、Long、Int、Short、Byte、Char、Unit和Boolean。Unit是不带任何意义的值类型，它仅有一个实例可以像这样声明：()。所有的函数必须有返回，所以说有时候Unit也是有用的返回类型。 AnyRef代表引用类型。所有非值类型都被定义为引用类型。在Scala中，每个用户自定义的类型都是AnyRef的子类型。如果Scala被应用在Java的运行环境中，AnyRef相当于java.lang.Object。 这里有一个例子，说明了字符串、整型、布尔值和函数都是对象，这一点和其他对象一样： 123456789val list: List[Any] = List( "a string", 732, // an integer 'c', // a character true, // a boolean value () =&gt; "an anonymous function returning a string")list.foreach(element =&gt; println(element)) 这里定义了一个类型List&lt;Ant&gt;的变量list。这个列表里由多种类型进行初始化，但是它们都是scala.Any的实例，所以可以把它们加入到列表中。 下面是程序的输出： 12345a string732ctrue&lt;function&gt; 类型转换值类型可以按照下面的方向进行转换： 例如： 12345val x: Long = 987654321val y: Float = x // 9.8765434E8 (note that some precision is lost in this case)val face: Char = '☺'val number: Int = face // 9786 转换是单向，且不是编译期的。 123val x: Long = 987654321val y: Float = x // 9.8765434E8val z: Long = y // Does not conform 你可以将一个类型转换为子类型，这点将在后面的文章介绍。 Nothing和NullNothing是所有类型的子类型，也称为底部类型。没有一个值是Nothing类型的。它的用途之一是给出非正常终止的信号，如抛出异常、程序退出或者一个无限循环（可以理解为它是一个不对值进行定义的表达式的类型，或者是一个不能正常返回的方法）。 Null是所有引用类型的子类型（即AnyRef的任意子类型）。它有一个单例值由关键字null所定义。Null主要用于和其他JVM语言的互操作性，但是几乎不应该在Scala代码中使用。我们将在后面的章节中介绍null的替代方案。]]></content>
      <categories>
        <category>翻译</category>
      </categories>
      <tags>
        <tag>scala</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Scala之旅——基础]]></title>
    <url>%2F2018%2F07%2F22%2Fbasics%2F</url>
    <content type="text"><![CDATA[这篇文章涵盖了Scala的基础知识。 在浏览器上尝试Scala你可以在浏览器上使用ScalaFiddle运行Scala。 打开https://scalafiddle.io； 在左侧窗格中粘贴println(&quot;Hello, world!&quot;)； 点击”Run”按钮，输出将展现在右侧窗格中。 这是一种简单的、零设置的方法来实践Scala的代码片段。 这篇文档中的大部分代码示例集成了ScalaFiddle，所以你可以直接点击“Run”按钮来实践。 表达式表达式是可计算的语句。 11 + 1 你可以使用println来输出表达式的结果。 1234println(1) // 1println(1 + 1) // 2println("Hello!") // Hello!println("Hello," + " world!") // Hello, world! 常量你可以使用val关键字来给表达式的结果命名。 12val x = 1 + 1println(x) // 2 对于结果比如这里的x的命名，被称为常量。引用一个常量不会再次计算。 常量不能重新被赋值。 12val x = 1 + 1x = 3 // This does not compile. 常量的类型可以被推断，或者你也可以显示地声明类型，例如： 1val x: Int = 1 + 1 注意下，在标识符x的后面，类型声明Int是怎么出现的。这里你还需要一个:。 变量除了可以重新赋值，变量和常量类似。你可以使用var关键字来定义一个变量。 123var x = 1 + 1x = 3 // This compiles because "x" is declared with the "var" keyword.println(x * x) // 9 和常量一样，你可以显示地声明类型： 1var x: Int = 1 + 1 块（Blocks）你可以组合几个表达式，并且用{}包围起来。我们称之为块（block）。 这个块中最后一个表达式的结果，也正是整个块的结果。 1234println(&#123; val x = 1 + 1 x + 1&#125;) // 3 函数函数是接受参数的表达式。 你可以定义一个匿名函数（即没有名字），来返回一个给定整数加一的结果。 1(x: Int) =&gt; x + 1 =&gt;的左边是参数列表，右边是一个包含参数的表达式。 你也可以给函数命名。 12val addOne = (x: Int) =&gt; x + 1println(addOne(1)) // 2 函数可以接受多个参数。 12val add = (x: Int, y: Int) =&gt; x + yprintln(add(1, 2)) // 3 或者不接受参数。 12val getTheAnswer = () =&gt; 42println(getTheAnswer()) // 42 方法方法的表现和行为和函数非常类似，但是它们之间有一些关键的差别。 方法由def关键字定义。def后面跟着一个名字、参数列表、返回类型和方法体。 12def add(x: Int, y: Int): Int = x + yprintln(add(1, 2)) // 3 注意返回类型是怎么在函数列表和一个冒号: Int之后声明的。 方法可以接受多个参数列表。 12def addThenMultiply(x: Int, y: Int)(multiplier: Int): Int = (x + y) * multiplierprintln(addThenMultiply(1, 2)(3)) // 9 或者没有参数列表。 12def name: String = System.getProperty("user.name")println("Hello, " + name + "!") 还有一些其他的区别，但是现在你可以认为方法就是类似于函数的东西。 方法也可以有多行的表达式。 1234def getSquareString(input: Double): String = &#123; val square = input * input square.toString&#125; 方法体的最后一个表达式就是方法的返回值。（Scala中也有一个return关键字，但是很少使用） 类你可以使用class关键字定义一个类，后面跟着它的名字和构造参数。 1234class Greeter(prefix: String, suffix: String) &#123; def greet(name: String): Unit = println(prefix + name + suffix)&#125; greet方法的返回类型是Unit，表明没有什么有意义的需要返回。它有点像Java和C语言中的void。（不同点在于每个Scala表达式都必须有值，事实上有个Unit类型的单例值，写作()，它不携带任何信息） 你可以使用new关键字创建一个类的实例。 12val greeter = new Greeter("Hello, ", "!")greeter.greet("Scala developer") // Hello, Scala developer! 我们将在后面深入介绍类。 样例类Scala有一种特殊的类叫做样例类（case class）。默认情况下，样例类一般用于不可变对象，并且可作值比较。你可以使用case class关键字来定义样例类。 1case class Point(x: Int, y: Int) 你可以不用new关键字来实例化样例类。 123val point = Point(1, 2)val anotherPoint = Point(1, 2)val yetAnotherPoint = Point(2, 2) 并且它们可以进行值比较。 12345678910111213if (point == anotherPoint) &#123; println(point + " and " + anotherPoint + " are the same.")&#125; else &#123; println(point + " and " + anotherPoint + " are different.")&#125;// Point(1,2) and Point(1,2) are the same.if (point == yetAnotherPoint) &#123; println(point + " and " + yetAnotherPoint + " are the same.")&#125; else &#123; println(point + " and " + yetAnotherPoint + " are different.")&#125;// Point(1,2) and Point(2,2) are different. 关于样例类，还有不少内容我们乐于介绍，并且我们确信你会爱上它们。我们会在后面深入介绍它们。 对象对象是它们自己定义的单实例，你可以把它看作它自己的类的单例。 你可以使用object关键字定义对象。 1234567object IdFactory &#123; private var counter = 0 def create(): Int = &#123; counter += 1 counter &#125;&#125; 你可以通过引用它的名字来访问一个对象。 1234val newId: Int = IdFactory.create()println(newId) // 1val newerId: Int = IdFactory.create()println(newerId) // 2 我们会在后面深入介绍它们。 特质特质是包含某些字段和方法的类型。可以组合多个特质。 你可以使用trait关键字定义特质。 123trait Greeter &#123; def greet(name: String): Unit&#125; 特质也可以有默认的实现。 1234trait Greeter &#123; def greet(name: String): Unit = println("Hello, " + name + "!")&#125; 你可以使用extends关键字来继承特质，使用override关键字来覆盖默认的实现。 12345678910111213class DefaultGreeter extends Greeterclass CustomizableGreeter(prefix: String, postfix: String) extends Greeter &#123; override def greet(name: String): Unit = &#123; println(prefix + name + postfix) &#125;&#125;val greeter = new DefaultGreeter()greeter.greet("Scala developer") // Hello, Scala developer!val customGreeter = new CustomizableGreeter("How are you, ", "?")customGreeter.greet("Scala developer") // How are you, Scala developer? 这里，DefaultGreeter仅仅继承了一个特质，它还可以继承多个特质。 我们会在后面深入介绍特质。 主方法主方法是一个程序的入口点。JVM要求一个名为main的主方法，接受一个字符串数组的参数。 通过使用对象，你可以如下所示来定义一个主方法。 1234object Main &#123; def main(args: Array[String]): Unit = println("Hello, Scala developer!")&#125;]]></content>
      <categories>
        <category>翻译</category>
      </categories>
      <tags>
        <tag>scala</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Scala之旅——导言]]></title>
    <url>%2F2018%2F07%2F21%2Ftour-of-scala%2F</url>
    <content type="text"><![CDATA[欢迎来到Scala之旅本次之旅包含了对于大多数Scala特性的简单介绍，主要针对的是这门语言的初学者。 这是个简化的教程，如果希望得到完整的话，可以考虑购买书籍或者参考其他资源。 Scala是什么？Scala是一门现代的多范式语言，志在以简洁、优雅及类型安全的方式来表达常用的编程模型。它平滑地集成了面向对象和函数式语言的特性。 Scala是面向对象的鉴于一切值都是对象，可以说Scala是一门纯面向对象的语言。对象的类型和行为是由类和特质来描述的。类可以由子类化和一种灵活的、基于mixin的组合机制（它可作为多重继承的简单替代方案）来扩展。 Scala是函数式的鉴于一切函数都是值，又可以说Scala是一门函数式语言。Scala为定义匿名函数提供了轻量级的语法，支持高阶函数，允许函数嵌套及柯里化。Scala的样例类和内置支持的模式匹配代数模型在许多函数式编程语言中都被使用。对于那些并非类的成员函数，单例对象提供了便捷的方式去组织它们。 此外，通过对提取器的一般扩展，Scala的模式匹配概念使用了right-ignoring序列模式，自然地延伸到XML数据的处理。其中，for表达式对于构建查询很有用。这些特性使得Scala成为开发web服务等程序的理想选择。 Scala是静态类型的Scala配备了一个拥有强大表达能力的类型系统，它可以静态地强制以安全、一致的方式使用抽象。典型来说，这个类型系统支持： 泛型类 型变注解 上、下 类型边界 作为对象成员的内部类和抽象类型 复合类型 显式类型的自我引用 隐式参数和隐式转化 多态方法 类型推断让用户不需要标明额外的类型信息。这些特性结合起来为安全可重用的编程抽象以及类型安全的扩展提供了强大的基础。 Scala是可扩展的在实践中，特定领域应用的发展往往需要特定领域的语言扩展。Scala提供了一种语言机制的独特组合方式，使得可以方便地以库的形式添加新的语言结构。 很多场景下，这些扩展可以不通过类似宏（macros）的元编程工具完成。例如： 隐式类允许给已有的类型添加扩展方法。 字符串插值可以让用户使用自定义的插值器进行扩展。 Scala的交互通过使用流行的Java运行环境（JRE），Scala设计了很好的交互。特别是与主流的面向对象的Java编程语言的交互尽可能的平滑。Java的最新特性如函数接口（SAMs）、lambda表达式、注解及泛型类 在Scala中都有类似的实现。 另外有些Java中并没有的特性，如缺省参数值和带名字的参数等，也是尽可能地向Java靠拢。Scala拥有类似Java的编译模型（独立编译、动态类加载），且允许使用已有的成千上万的高质量类库。 尽享学习之乐请点击菜单上的下一页继续阅读。]]></content>
      <categories>
        <category>翻译</category>
      </categories>
      <tags>
        <tag>scala</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[决定翻译Scala-docs]]></title>
    <url>%2F2018%2F07%2F18%2Ftrans-scala-docs%2F</url>
    <content type="text"><![CDATA[最近一直在学习Scala，对此最大的感触是Scala站在Java这个巨人的肩膀上，不仅做了不少取舍，还增加了很多优秀的特性。这些特性允许使用者做很多的选择，所以Scala是比较考验程序员的能力的。 这段时间，学习很开心，在这个过程当中，不仅仅是多掌握了一门语言，更是对已有的问题有了新的理解。另外，想着Scala的应用者如Spark、Kafka等等，更是增强了学习这门语言的决心。 作为一个程序员，在追求高工资的同时，更加需要的是认可度，对于技术的认可。目前这个圈子里以参与著名开源项目、贡献代码为荣，甚至成了求职的重要砝码。本人作为编程低能儿，所到之处仅限于提提issues，还没有到贡献代码的地步，当然这也归结于自身在公司的项目之余，没有花费大量的心思在开源项目上。 但是从现在开始，从学习Scala开始，开始越来越觉得参与开源项目的重要性，不光是提高个人能力，更是打造个人品牌。因此决定，从现在开始，从简单的开始，在学习Scala的同时，翻译Scala官网的英文文档《Tour of Scala》。 立下字据，以此为证。]]></content>
      <categories>
        <category>技术</category>
      </categories>
      <tags>
        <tag>scala</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[继承关系]]></title>
    <url>%2F2018%2F07%2F16%2Finheritance%2F</url>
    <content type="text"><![CDATA[继承关系图 每个类都继承自Any类，它有两个子类AnyVal和AnyRef,AnyVal是所有值类的父类，AnyRef是所有引用类的父类。 底类型（botton types）在上图中类继承关系的底部，有两个特殊的类Null和Nothing，它们用于处理一些特殊情况。 Null类是null引用的类型。 Nothing类主要用途是给出非正常终止的信号，例如Scala中内置的error方法： 1def error(message: String): Nothing = throw new RuntimeException(message) 由于Nothing是所有其他类型的子类型，那么该方法可以用来： 123def divide(x: Int, y: Int): Int = if (y != 0) x / y else sys.error("cannot divided by zero")]]></content>
      <categories>
        <category>技术</category>
      </categories>
      <tags>
        <tag>scala</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[面向对象基础]]></title>
    <url>%2F2018%2F07%2F14%2Foop-basic%2F</url>
    <content type="text"><![CDATA[类定义我们知道所有的有理数，都可以表示为一个分数，形如n/d，下面就要构造一个有理数类。 class Rational(n: Int, d: Int) 简单的一行代码，即定义了类以及构造方法。但是需要注意这里的n和d是类参数，而非成员变量，因此如下调用会报错： 12scala&gt; a.d&lt;console&gt;:13: error: value d is not a member of Rational 当然，如果想变成成员变量很简单，在前面加个变量声明的符号val或者var即可： class Rational(var n: Int, val d: Int) 接下来可以直接对成员进行赋值和使用： 1234scala&gt; a.n = 10a.n: Int = 10scala&gt; a.nres7: Int = 10 getter和setter方法可以利用注解简单地生成getter和setter方法： 12import scala.beans.BeanPropertyclass Rational(@BeanProperty var n: Int, var d: Int) 实际开发中，可能遇到setter方法中有逻辑判断的，那么这种方法就不能采用。而且如果不是为了兼容Java的写法的话，建议单独使用Scala中方式如下： 123456class Person (private var _name: String) &#123; def name = _name def name_= (newName: String) = &#123; _name = newName &#125;&#125; 注意这里的 name_=是一个整体，是方法名，会被编译为 name_$eq ，因为JVM不允许方法名中出现“=”符号。 下面总结出2点： 使用private var关键字修饰构造方法参数，一般在参数名前加上下划线“_”。 定义getter和setter方法：getter方法使用“参数名”命名；setter方法使用“参数名_=”来命名，“=”之前不能有空格。 辅助构造方法即为类定义多个构造方法，类似于Java中的构造方法重构： 1234567891011class Person (private var _name: String) &#123; def name = _name def name_=(newName: String) = &#123; _name = newName &#125; def this() &#123; this("default") println("new default") &#125;&#125; 这里需要注意的是辅助构造方法，必须首先调用同一个类的另一个构造方法。]]></content>
      <categories>
        <category>技术</category>
      </categories>
      <tags>
        <tag>scala</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[操作符]]></title>
    <url>%2F2018%2F07%2F11%2Foperator%2F</url>
    <content type="text"><![CDATA[操作符即方法例如1 + 2实际上执行的是1.+(2)： 12scala&gt; val sum = 1 + 2sum: Int = 3 为了证明这点，可以： 12scala&gt; val sum = 1.+(2)sum: Int = 3 事实上，Int包含了多个重载的+方法，分别接受不同的参数类型，比如 12scala&gt; val longSum = 1 + 2LlongSum: Long = 3 以冒号结尾的如果操作符以冒号（:）结尾，则该方法的调用发生在右操作元（right operand）上。例如1 :: Nil表示的是Nil.::(1) 上面是中缀操作符，另外还有两种：前缀操作符和后缀操作符，区别在于接收的操作元是一元的（unary）。 前缀操作符唯一能被用作前缀操作符的是+、-、!和~。 例如Int中的前缀操作符： 12scala&gt; -2 // 实际上调用的 2.unary_-res1: Int = -2 后缀操作符一般对于无参的方法，可以选择去掉.的方式，使用后缀表达式： 12scala&gt; "aBc" toLowerCaseres2: String = abc ==操作符：对象相等性==在Scala中与Java不同的在于引用类型的比较上，Java比较的是指向同一个对象，而Scala比较的是equals方法的执行结果。常用的是List的比较： 12scala&gt; List(1, 2) == List(1, 2)res3: Boolean = true 另外Scala也提供了比较引用相同的机制，即名为eq的方法。]]></content>
      <categories>
        <category>技术</category>
      </categories>
      <tags>
        <tag>scala</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[枚举]]></title>
    <url>%2F2018%2F07%2F11%2Fenum%2F</url>
    <content type="text"><![CDATA[Scala中没有提供一个枚举类型，但是标准库中提供了一个Enumeration的抽象类，通过继承实现一个枚举。 例: 1234object Color extends Enumeration &#123; type Color = Value // 2 val RED,BLUE,GREEN = Value // 1&#125; Value是Enumeration的内部类，调用它们可以返回一个对应的新实例，因此枚举的类型实际上为Color.Value; 这里增加一个别名，因而枚举的类型实际上变成了Color.Color 这样的话，就可以如下方式使用： 12import Color.Colordef isRed(color: Color) = color == Color.RED 此外，Value支持ID、名称，或者两个参数都传: 123val RED = Value(1, "RED")val BLUE = Value(2)val GREEN = Value("GREEN") 最后，可以通过ID或者名称来进行枚举类型的查找： 12Color(1)Color.withName("RED")]]></content>
      <categories>
        <category>技术</category>
      </categories>
      <tags>
        <tag>scala</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[类和对象]]></title>
    <url>%2F2018%2F07%2F11%2Fclass-object%2F</url>
    <content type="text"><![CDATA[类、成员、方法1234567class MyFirstClass &#123; var x = 0 // 可变成员变量 val v = 1 // 不可变成员变量 def addNum(num: Int): Unit = &#123; x += num &#125;&#125; 这样就可以创建对象：val m = new MyFirstClass 这里没有指定访问修饰符，表示默认public的。 注意：Scala方法参数的一个重要特征是它们都是val而非var的，这点其实很重要，可以不用考虑是否被重新赋值过。 单例对象Scala比Java更面向对象的一点是Scala不允许有静态成员。针对这样的场景，Scala的解决方案是提供了单例对象（object）。 object和class同名时，互相称为伴生对象和伴生类。而这两者必须定义在同一个源码文件中，且他们之间可以访问互相的私有成员。 Scala为每个源码文件，都隐式地引入了java.lang和scala包的成员，以及名为Predef的单例对象中的所有成员，建议读者可以大致阅读下Predef中内容。]]></content>
      <categories>
        <category>技术</category>
      </categories>
      <tags>
        <tag>scala</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Scala基础]]></title>
    <url>%2F2018%2F07%2F10%2Fscala-basic%2F</url>
    <content type="text"><![CDATA[声明变量主要有两种方式：val和varval x = 2 * 4 + 1val命名的变量不可修改，否则会报错。 Scala鼓励开发者使用val，而事实也发现大多数程序并不需要太多的可修改变量var。同时，也可以指定类型：val x: String = &quot;Hello, Scala&quot;这里可以看出Scala提供了两种方式供开发选择，在实际使用中，建议在简单的程序中为了代码的简介可以考虑去掉类型，而在相对复杂的大型工程中，建议在某些地方加上类型，提高可读性。 操作符由于scala中一切操作都是方法调用，当一个方法调用以操作符的形式出现的时候，比如:a * b表示的其实是a.*(b)，即方法的调用默认发生在左操作元（left operand）上。但是，如果操作符以冒号（:）结尾，则该方法的调用发生在右操作元（right operand）上。例如1 :: Nil表示的是Nil.::(1) 另外，Scala并未提供++和--操作符，因为Int类是不可变的，很难不通过重新赋值（=），而实现++去改变整形的值。 apply方法在Scala中，有种类似函数的调用方式，如&quot;abc&quot;(2) // 得到C。这个背后的实现原理是调用了apply方法，这里调用的是StringOps中的：override def apply(index: Int): Char = repr charAt index]]></content>
      <categories>
        <category>技术</category>
      </categories>
      <tags>
        <tag>scala</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[7月立志]]></title>
    <url>%2F2018%2F07%2F09%2Fmake-flag%2F</url>
    <content type="text"><![CDATA[说说最近坚持在做的几件事情——一是学习Scala与Spark，虽然Spark在之前有学习但是基本没有使用，目前在工作上其实也用不到但是说起来是做大数据的，不会Spark说不过去，况且Spark综合了即时查询、流处理、批处理、机器学习，这么强的一个可插拔式的计算框架，不学习没有道理啊。而Scala呢，正因为Spark的大热而火起来，其实学习Spark可以不用了解Scala。但是作为一个程序员，怎么能局限于应用上呢？掌握它的核心对于个人能力纵向的提升还是很有必要的嘛。 二是坚持在公众号写文章，而且争取是高质量的文章，不是随便写写的，而是有提炼、有体会的文字。其实这个之前早有尝试，但是一直处于坚持与放弃之间。但是想到每每写完发布后再阅读的成就感，就知道自己是喜欢的。对于这样一件自己确实喜欢，但是不能坚持的事情，想到对于个人能力的提升是有帮助的，在这个不进则退的社会，我想还是要重拾这个习惯。 虽说这两件事最近一直在做，可是仔细回过头来看看最近的一两个月，发现其实产出不高。那么呢，接下来需要给自己定目标了，立下flag，即使打脸也要说出来。最起码在接下来的一段时间，是有效的，否则恐怕一直很难进入状态。 目标： 深入学习Scala，从基础打起，每周至少3篇技术文章写入个人博客。 公众号文章，每周至少一篇，因为毕竟意志力是有限的。]]></content>
      <categories>
        <category>杂说</category>
      </categories>
      <tags>
        <tag>决定</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[我的2017]]></title>
    <url>%2F2018%2F01%2F03%2Fwork-in-2017%2F</url>
    <content type="text"><![CDATA[一度专心（其实谈不上）于技术的我，从没想过外面的世界与我的关系，这个快速发展的互联网对于我意味着什么，我该怎么在其中生存？这些问题好像与我无关，而我脑海中只有java、python、hadoop这些东东，技术充斥了我生活之外的所有时间，我无暇思考这些宏观问题。因而当工作中的琐碎问题加之技术上的障碍以及前途的不明所以叠加而来的时候，我迷失了，这TMD是个什么世界。回顾2017，我因虚度年华而悔恨，也因碌碌无为而羞愧。 在这迷失之际，我不甘堕落，却也愈加迷失。类似的一次迷失是在3年前的这个时候，那一次我选择了行万里路，也验证了高晓松的那句开场白“世界不是苟且，世界是远方，行万里路才能回到内心深处”。自此认清自己，明白了心中真正所求也无非一凡夫俗子宁静祥和的生活，而非那个校园时期初读社会、想象自己无限可能、追求不知所谓的理想的那个人了。那么这一次呢？我为什么又迷失了？ 在上次的旅行中三大终极问题有了内心的答案后，这次的问题显然不算什么，回想最近一年来所作所为、所思所想，便很容易得出结论了吧。 这一年来，我作为一枚小小的程序员，紧跟产品的步伐，心中所想便是好好地做好当前手里的活，而从未真正从一个产品的角度去思考，也未对一个产品的未来甚至短期内的变化与产品人员进行沟通。这样带来的结果很明显——开发的结果与产品不一致，频繁修改。同时从未想过的问题——“产品是有局限的”摆在了我的面前，开发出的产品很可能不适应用户的需求，而这个在之前的相关开发工作中是没有预料到的。因为之前的所有有限的经历都是围绕着需求-产品-开发-需求-产品-…的方式进行，没有所谓的白白开发的经历，也没有想到这会给产品的末端（其实不是，只是当时自己的理解偏差）——开发人员带来什么样的后果。可是当这些真的来临的时候，却直接是劈头盖脸地打来，我却还在低头看着手里的键盘与鼠标，甚至还在窃喜“嘿嘿，这里写得妙”。 现在想起来，貌似我已经能够适应开发的工作了，而且基本都能准时完成工作，自我感觉和他人评价也都完成还不错，可是这远非一个作为互联网公司的员工的工作标准，因为这样的态度只会让我原地踏步，我还是不够了解互联网，枉我还是在一个互联网公司上班！不过幸运的是我已经认识到自身这个严重的问题了。 到后来产品的离职，产品的推倒重构，产品的紧急上线，这些变化让我应接不暇，可是我仍然没能意识到这到底发生了什么，这是什么鬼？我还在埋头守着自己的一亩三分地，努力地耕耘。 然后接下来的部门结构的调整、工作内容的调整，这些东西就发生在我身边，我还是视而不见，默默地接受。因为我还是没能够意识到这些变化对我会产生什么影响，我只要把自己的活干好就可以了呀。可是慢慢的，工作看上去经历一番波澜后照旧往前行驶着，我也义无反顾地往前迈步着。可是后来慢慢地，感觉不对了，什么地方不对了。我开始对周日后第一天感到非常的不堪接受，对周五的到来总是感觉时不我待，工作一再地拖到周末完成，久而久之周末不远程下公司的电脑甚至有点不习惯。可是这时候，突然在某些停下脚步的瞬间反问自己“这样的工作是自己想要的吗”“这样的工作有意义吗”“为什么感觉没有工作的激情了”“为什么好像看不到未来的希望了”种种问题。在思考这些问题的时候，我好像有了一丝答案。我要重新梳理下目前的工作，可是看上去已经让我负重难行，想来想去不如换个环境重新开始，虽然未必见得多好，但是就其本身这个挑战我也是愿意应对的。毕竟在长久面朝黄土背朝天之后，看到了碧蓝的天空，才更有了继续耕作的勇气。 现在回头看自己，眼光那么的狭隘，只看到身边的几个同事与所做的项目，除此之外的东西—比如部门的价值所在、公司的立足之本等等，却曾未沾边，我让自己成了井底之蛙，而这口井还是自己挖的。 由此，我也开始认识到了自己的劣势与长处，不擅长对快速变化的事物做出及时的应对，但是工于用心去思考所意识到的问题，可我的意识总是慢现实一拍。劣势难以弥补，不如在长处下点功夫。目前看来最有成效的是，重新了解下目前所处的互联网的发展史，仔细阅读下几个互联网公司的发展过程，研究所处公司的行业境况，与同事、领导保持定期的交流，积极记录自己的所思所想所学。相信这样做的结果是能够提高自己在工作中认识自己所处的行业发展、公司的发展，以及自我的发展，如果能够让三者保持一致，那产出必然是可观的。 2018已然拉开帷幕，2017纵然感到不少的遗憾，但是终究还是要迈过去的。记得大学时候的老师曾说过毕业5年左右不少人都会遇到或多或少的困惑，或许这个时候才是真正告别纯真理想、扎根现实的节点。苦难崇拜并非完全虚妄，而是让人刻骨般认识一些个简单的道理并加之运用。 最后还是不免想说说新的一年里的愿景吧，希望在2018能够找到自己的节奏，稳扎稳打、步步为营，不求快速进步，但愿不走弯路，一切的努力都为未来铺路。]]></content>
      <categories>
        <category>杂说</category>
      </categories>
      <tags>
        <tag>回忆</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Hive简介]]></title>
    <url>%2F2017%2F05%2F05%2Fhive_introduce%2F</url>
    <content type="text"><![CDATA[为什么是HiveHive由Facebook实现并开源，是建立在Hadoop之上的数据仓库解决方案。 学习门槛低：会sql即可 可扩展性好：可自由扩展集群规模，且支持UDF 容错性不错：一个节点出问题，继续执行。 虽然Impala、Spark SQL、Drill、Hawq 和Presto 一直在运行性能、并发量和吞吐量上击败Hive，但是Hive 仍然是最流行的（至少根据DB-Engines 的标准）。原因有3个： Hive 是Hadoop 的默认SQL 选项，每个版本都支持。而其他的要求特定的供应商和合适的用户； Hive 已经在减少和其他引擎的性能差距。大多数Hive 的替代者在2012年推出，分析师等待Hive 查询的完成等到要自杀。然而当Impala、Spark、Drill 等大步发展的时候，Hive只是一直跟着，慢慢改进。现在，虽然Hive 不是最快的选择，但是它比五年前要好得多； 虽然前沿的速度很酷，但是大多数机构都知道世界并没有尽头。 关键是稳定和容错（继承了mapreduce）。 Hive与关系型数据库的对比: Hive架构 Hive数据模型 内部表与传统数据中的表类似，在Hive中每一个Table都有对应的目录存取其数据。当删除表时，其元数据和表中的数据都会被删除。例句：create table test_inner_table (key string) 外部表与内部表不同，外部表只是与外部数据建立一个链接。删除外部表时，只会删除该外部表的元数据，外部数据不会删除。例句：create external table test_external_table (key string) 分区表在Hive中表的一个Partition对应表下的一个子目录，所有Partition的数据都存储在对应子目录中。例句： create table test_partition_table (key string) partitioned by (ds string) 分桶表选择表的某列通过Hash算法将表横向切分成不同的文件存储。例句： create table test_bucket_table (key string) clustered by (key) into 20 buckets 视图与传统数据库视图类似，只读，基于基本表创建。例句：create view test_view as select * from test_inner_table 存储格式 存储格式 存储方式 优缺点 实际应用推荐 Textfile 行存储 加载速度最快，但占磁盘，压缩后不支持并行 底层数据 sequencefile 行存储 压缩率低，查询速度一般。 中间层数据 rcfile 按行分块，每块按列存储 压缩率最高，查询速度最快，数据加载最慢。 冷数据 orcfile 按行分块，每块按列存储 rcfile的改良版本 冷数据]]></content>
      <categories>
        <category>技术</category>
      </categories>
      <tags>
        <tag>hive</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[大数据之OLAP系列一——介绍篇]]></title>
    <url>%2F2017%2F04%2F30%2Folap%2F</url>
    <content type="text"><![CDATA[历史其实OLAP的历史很早，只不过在今天的大数据时代，有了更加高级的工具，赋予了这个老的概念以更新的活力。据说最早的OLAP产品出现在1970年，叫做Express，但是“OLAP”这个名词直到1993年才被关系数据库之父Edgar F. Codd提出，在90年代的后期OLAP的市场经历了更好的发展，也出现了不少的产品。1998年微软推出了Microsoft Analysis Services，推动了广泛采用OLAP技术。 定义之所以有OLAP的提出，在于当时的OLTP技术不能满足用户对于数据库查询分析的要求，用户的决策需要对关系数据库进行大量计算才能得到结果，而查询的结果并不能满足决策者提出的需求。因此，Codd提出了多维数据库和多维分析的概念，即OLAP。OLAP委员会对联机分析处理的定义为：从原始数据中转化出来的、能够真正为用户所理解的、并真实反映企业多维特性的数据称为信息数据，使分析人员、管理人员或执行人员能够从多种角度对信息数据进行快速、一致、交互地存取，从而获得对数据的更深入了解的一类软件技术。OLAP的目标是满足决策支持或多维环境特定的查询和报表需求，它的技术核心是“维”这个概念，因此OLAP也可以说是多维数据分析工具的集合。简单从我的理解来说就是，OLAP帮助我们更好的从多个角度去理解现有的数据。 分类 MOLAPMultidimensional OLAP：多维联机分析处理 ROLAPRelational OLAP：关系型联机分析处理 HOLAPHybrid OLAP：混合型OLAP WOLAPWeb-based OLAP DOLAPDesktop OLAP ROLAPReal-Time OLAP MOLAP这是一种传统的OLAP形式，它将数据存储在优化后的多维数组存储引擎中，形成数据立方体，即所谓的“cube”，基本原理就是将多维的数据预先填好。这种形式的最大优点是查询快，缺点是计算过程长，可能遇到维度爆炸。大部分商业的OLAP产品也是采用这种形式，如Cognos Powerplay, Oracle Database OLAP Option, MicroStrategy, Microsoft Analysis Services, Essbase, TM1, Jedox, 和icCube等等。 ROLAP将分析用的多维数据存储在关系数据库中并根据应用的需要有选择的定义一批实视图作为表也存储在关系数据库中。与MOLAP的主要区别是，它不会把所有维度的数据结果计算好，而是需要查询时进行计算。优点和缺点几乎就是MOLAP的对立面，优点在于计算快，维护简单，缺点在于查询慢。 HOLAP混合型的OLAP其实只是一种策略，它结合了上述了两种方式的优缺点，提供用户在不同适宜场景下的方案选择，以期望达到更快的查询且不错的稳定性。像Microsoft Analysis Services, Oracle Database OLAP Option, MicroStrategy and SAP AG BI Accelerator都用到HOLAP的技术策略。 WOLAP,DOLAP,ROLAP资料太少，以后查到的话再补上。 比较ROLAP实现较容易，但是对于存储的优化、索引、查询性能的提升有很高的要求，而MOLAP主要的挑战在于多维数组的存储，需要维护复杂的结构，而且要注意维度爆炸。而HOLAP就是一种随机应变的策略。 相关概念数据仓库数据仓库的概念提出于20世纪80年代中期，20世纪90年代，数据仓库已从早期的探索阶段走向实用阶段。业界公认的数据仓库概念创始人W.H.Inmon在《BuildingtheDataWarehouse》一书中对数据仓库的定义是：“数据仓库是支持管理决策过程的、面向主题的、集成的、随时间变化的持久的数据集合”。构建数据仓库的过程就是根据预先设计好的逻辑模式从分布在企业内部各处的OLTP数据库中提取数据并对经过必要的变换最终形成全企业统一模式数据的过程。 Hivehive是基于Hadoop的一个数据仓库工具，可以将结构化的数据文件映射为一张数据库表，并提供简单的sql查询功能，可以将sql语句转换为MapReduce任务进行运行。 小结数据仓库是存储数据的仓库，要构建这个仓库需要一些工具，Hive便是大数据下的一种选择，而OALP是这个仓库的具体应用，主要用来分析数据，支撑决策。 参考资料 维基百科-Online analytical processing]]></content>
      <categories>
        <category>技术</category>
      </categories>
      <tags>
        <tag>OLAP</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[从自我营销谈到IP以及个人尝试]]></title>
    <url>%2F2017%2F04%2F10%2Fmarketing_yourself%2F</url>
    <content type="text"><![CDATA[自我营销之前偶然看到朋友圈有人推荐一本书《软技能——代码之外的生存之道》，于是马上从亚马逊下单购买。阅读之后受益匪浅，特别是其中“自我营销”的篇章。主要介绍了“自我营销”的意义和方法，总结起来大致如下： 解释自我营销的本质在于把希望得到你提供的产品或服务的人和你自己连接起来，本质上说是为他人提供价值。 策略让你的目标受众感受你无处不在。你可能出现在他们的社交平台上，他们可能在观看你的文章、音频、视频，甚至是你的书籍，或者被他人提起。 方法 博客建立个人的技术文章集合，展示你自己的专业技能。 音频或者视频在视频网站上，传播自己对某一个专业技术的积累和理解。 投稿往自己专业领域的权威杂志或者网站发表自己的文章（具备一定水准的）。 会议或者培训每个公司内部都会有培训、分享之类的，积极总结自己的工作内容，提炼观点、技术，加工、分享。 参与开源项目从自身的需要出发了解项目、应用项目、进而改进项目，将自己的成果共享出来。 出书籍写作专业书籍并出版。 IP下面的内容都是从《每个人都是 IP：如何规划和经营自己》这本电子书总结而来，建议花一个小时通读下这本书。 定义 英语“intellectual property”的缩写，直译为“知识产权”。 形式可以多种多样，一个完整的故事，一个概念、一个形象甚至一句话。 在互联网世界里，可以理解为占有你的心智——I Park In Your Mind。 分类 内容型IP 知识IP 技能IP 人格化IP 特点 在自身领域足够优秀，有两把刷子。 在某个领域率先出头，快速为人所识。 既有大众认同的共同价值观，又有自己的个性。 个人尝试上面的“自我营销”和“IP”讲的其实都是同样一个东西，就是如何提升自我，将自己打造成一个品牌。 品牌建立统一LOGO对于各种发布平台，尽量使用相同的个人头像、昵称来强调个人身份，如github、个人博客、域名、知乎专栏、开发者头条、简书，甚至个人公众号。 技术文章 保证文章的更新频率，一是为了维护已有的粉丝关注，二是保证自己的写作连贯性。提出下一步的写作计划，公布借以外力约束自己。 维护文章的质量，计划好自己的写作，最好集中某个主题进行系列文章的撰写，打造自己在此领域的专业性，提升个人的专属品牌。 技术培训提升个人技能的同时，注意总结和提炼，以便教授他人。平时注意思考比较适合分享的点，主动与同事提出分享。 分享成果参与开源项目，或者将自己的项目开源出去，但是前提是要找到一个自己感兴趣、有研究的项目，最好从实际使用出发。鉴于这么多的发布平台，有必要开发一个统一的发布工具来简化发布过程，可以尝试开发下。 学习思路 学习不断学习新知识，或者深度研究现有的知识，加深专业领域内的积累。 实践将学习到的知识，进行及时地实践，检验自己的结论和猜想。 总结通过理论与实践的两部分工作，将这两个阶段的结果进行比较，汇总，撰写文章加以记录。 教人将自己的总结结果，很好地讲给他人听，加强互相学习、互相进步。]]></content>
      <categories>
        <category>技术</category>
      </categories>
      <tags>
        <tag>IP</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[实时错误日志收集平台sentry安装]]></title>
    <url>%2F2017%2F03%2F30%2Fsentry_install%2F</url>
    <content type="text"><![CDATA[什么是sentry这里说的不是Apache Sentry，而是一个实时的事件日志和聚合平台，基于 Django 构建。Sentry 可以帮助你将程序的所有exception自动记录下来，然后在一个好用的 UI 上呈现和搜索。处理exception是每个程序的必要部分，所以 Sentry 也几乎可以说是所有项目的必备组件。最早仅仅支持python的exception，而今已经支持市面上常见的各种开发语言，具体请参照官网。下面是安装步骤，当时安装的版本为8.14.1，要想安装最新版本最好还是参照官网。先抢先看下结果画面—— 安装环境 CentOS release 6.5 postgres 9.4 这个安装可以参照postgresql安装、非root用户配置、登录 redis 2.6.10 Python 2.7.13 pip 8.1 安装这里推荐本地用户安装：pip install --user sentry如果安装较慢建议使用豆瓣源，最方便的设置如下： 1234[sentry@my_centos ~]$cat .pip/pip.conf [global]index-url = http://pypi.douban.com/simple/trusted-host = pypi.douban.com 初始化设置配置文件路径123mkdir $HOME/sentry/echo &quot;export SENTRY_CONF=$HOME/sentry/&quot; &gt;&gt; ~/.bash_profilesource ~/.bash_profile 初始化sentry init $SENTRY_CONF完了会生成两个文件：sentry.conf.py和config.yml 修改配置文件主要是配置pg, redis, emailvi $SENTRY_CONF/sentry.conf.py 123456789101112DATABASES = &#123; &apos;default&apos;: &#123; &apos;ENGINE&apos;: &apos;sentry.db.postgres&apos;, &apos;NAME&apos;: &apos;sentry&apos;, &apos;USER&apos;: &apos;postgres&apos;, &apos;PASSWORD&apos;: &apos;&apos;, &apos;HOST&apos;: &apos;&apos;, &apos;PORT&apos;: &apos;&apos;, &#125;&#125;BROKER_URL = &apos;redis://:password@redis_host:6379/1&apos; vi config.yml 12345678910111213141516mail.backend: &apos;smtp&apos; # Use dummy if you want to disable email entirelymail.host: mail.port: 25mail.username: mail.password:mail.use-tls: false# The email address to send on behalf ofmail.from: redis.clusters: default: hosts: 0: host: redis_host port: 6379 password: &quot;password&quot; 在pg中创建数据库，用于存放sentry数据pgsql/bin/createdb -E utf-8 sentry 初始化数据库脚步sentry upgrade 创建sentry用户（如果上一步没有创建的话）sentry createuser 启动服务启动Web Service（用于登录账户）sentry run web 启动后台workers进程（用来发邮件等）sentry run worker 启动定时脚步（猜测是用于发周报）sentry run cron 实际生产考虑到服务比较多，为了便于管理，采用supervisord，管理这3个进程。 生成配置文件echo_supervisord_conf &gt; supervisord.conf 加入以下配置1234567891011121314151617181920212223[program:sentry-web]command=sentry startautostart=trueautorestart=trueredirect_stderr=truestdout_logfile=syslogstderr_logfile=syslog[program:sentry-worker]command=sentry run workerautostart=trueautorestart=trueredirect_stderr=truestdout_logfile=syslogstderr_logfile=syslog[program:sentry-cron]command=sentry run cronautostart=trueautorestart=trueredirect_stderr=truestdout_logfile=syslogstderr_logfile=syslog 更改配置(取消注释即可)：123[inet_http_server] ; inet (TCP) server disabled by defaultport=127.0.0.1:9001 ; (ip_address:port specifier, *:port for all iface)username=user ; (default is no username (open server))password=123 ; (default is no password (open server)) 启动supervisord -c supervisord.conf 停止supervisorctl -c supervisord.conf shutdown 查看日志浏览器打开 http://ip:9001 登录使用浏览器键入 ip:9000，如果看到如下界面，恭喜成功了！]]></content>
      <categories>
        <category>技术</category>
      </categories>
      <tags>
        <tag>sentry</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[此后一个月的文章发布计划]]></title>
    <url>%2F2017%2F03%2F22%2Fnew_day%2F</url>
    <content type="text"><![CDATA[回忆说起来，真的已经好久没有静下心来写一篇文章了，甚至此时下手都有点羞涩的感觉。这人嘛，还是得勤快点，懒了就习惯了，甚至都想不通以前的我怎么那么勤快。 计划sentry系列前面已经写了一篇安装sentry所必须的pg数据库的安装，后面继续介绍安装及使用，日后准备研究实现原理甚至源码。 sentry安装文档其实sentry的安装文档在官网也是有的，可是实际安装的话，还是会出现一些小问题，准备记录大致流程加上问题解决，算是个回顾。 sentry的各个客户端的接入 OLAP系列自称做了这么久的大数据，却很少写这样的文章，真是汗颜哪，后续准备将这两年的工作上的东西搬出来整理一番，做个归档。这个想法是源自上次公司内容准备PPT时发现要讲解一个东西，自己还欠缺好多东西，需要进一步的学习。所以这里是为了找出自己的不足，而前提是要看清自己，那么还不赶紧行动起来？ OLAP与OLTP hive 行动暂且就这两个计划，不要太多，更新频率暂且定为一周两篇，多了也没时间整，少了就容易懈怠荒废。加油吧！]]></content>
      <categories>
        <category>技术</category>
      </categories>
      <tags>
        <tag>hive</tag>
        <tag>sentry</tag>
        <tag>OLAP</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[postgresql安装、非root用户配置、登录]]></title>
    <url>%2F2017%2F03%2F19%2Finstall_postgresql%2F</url>
    <content type="text"><![CDATA[简介(来自百度百科) PostgresQL是以加州大学伯克利分校计算机系开发的 POSTGRES，现在已经更名为PostgreSQL，版本 4.2为基础的对象关系型数据库管理系统（ORDBMS）。PostgreSQL支持大部分 SQL标准并且提供了许多其他现代特性：复杂查询、外键、触发器、视图、事务完整性、MVCC。同样，PostgreSQL 可以用许多方法扩展，比如， 通过增加新的数据类型、函数、操作符、聚集函数、索引。免费使用、修改、和分发 PostgreSQL，不管是私用、商用、还是学术研究使用。 安装此文介绍linux下安装，所以想到的必然有三种方式：yum、rpm包（本文不介绍）、二进制文件（通常以tar.gz打包压缩）如果是非root用户的话，直接跳到二进制文件安装 yum安装默认安装版本 Distribution Version RHEL/CentOS/SL/OL 7 9.2(also supplies package rh-postgresql95 and rh-postgresql94 via SCL) RHEL/CentOS/SL/OL 6 8.4(also supplies package postgresql92) RHEL/CentOS/SL/OL 5 8.1 (also supplies package postgresql84) Fedora 24 9.5 Fedora 23 9.4 安装指定版本的yum源再安装 选择合适的yum源打开官方网站，找到合适的版本，然后执行yum install命令，例如：yum install https://download.postgresql.org/pub/repos/yum/9.4/redhat/rhel-6-x86_64/pgdg-centos94-9.4-3.noarch.rpm 安装postgresqlyum install postgresql94-server postgresql94-contrib 初始化service postgresql-9.4 initdb 启动服务service postgresql-9.4 start 连接psql -d postgres 可能的问题Error: Cannot retrieve repository metadata (repomd.xml) for repository: pgdg94. Please verify its path and try again 解决：a. vi /etc/yum.repos.d/pgdg-94-centos.repo，设置enabled=0b. yum install ca-certificatesc. vi /etc/yum.repos.d/pgdg-94-centos.repo，设置enabled=1 二进制文件安装 下载地址https://www.enterprisedb.com/download-postgresql-binaries 检查有无安装，有则卸载 12rpm -qa|grep postgresqlyum remove postgresql* 安装前准备（非root用户跳过）如果拥有root用户权限，建议新增一个psotgres用户，建议不要起别的名字，因为这是pg默认的超级管理员用户useradd postgres 解压并创建pg的数据存储目录 12tar xzf postgresql-9.4.9-1-linux-x64-binaries.tar.gz makedir data 初始化pgsql/bin/initdb -E utf8 -D data 启动pgsql/bin/pg_ctl -D data -l logfile start 连接pgsql/bin/psql -d postgres]]></content>
      <categories>
        <category>技术</category>
      </categories>
      <tags>
        <tag>sentry</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[毕业这三年……]]></title>
    <url>%2F2016%2F07%2F25%2Fthis_three_years%2F</url>
    <content type="text"><![CDATA[一晃就是半年过去了，这次真的是隔了好久没有写博客了。还记得刚开始建博客和写前几篇博文的那份冲动，那时候真的是废寝忘食了几乎，想想去年测试刚认证后的公众号的API的时候也是那般的投入，如今碰上个有意义的东西的话，我也依然那般的充满激情，不由得感叹年轻有太多可为。 那时候，我孤单一人，出身理科，自以为看了几本闲书就拥有了周围人所不及的判断力，不断地买来一本本与工作无干却相信能丰富自我、提升自我的所谓进步书籍，这也成为我博客文章的一大来源，这种边吃边吐的好处明显——可以总结自己的所见且温故了。可为了保证每日一篇的量也不乏凑数烂作，但却可以补充当时空洞的内心。这便是一个自诩文艺实则对现实自我尚未明确认知和定位这一现象的自知自明后的借以精神上的所谓寻求高层次的修养和改造来完成自我解脱的一种做法吧。所以这般看似丰富的内心文艺气息，其实充斥着不少自我与现实世界的抵抗。 但是崇尚技巧性的我，还是找到了合理自处的佳地。由于自身的学识视野狭窄，同时困惑于这个整日喧嚣而忙碌的社会以及混沌般的网络世界，终于在书中寻觅到百思不得其解的答案，豁然开朗之时如沐春风，却也痛快之至。这样的好处在于发现了一个完全自助的精神境地。即使同时有“不要迷信书本，也不要盲目追求新的信息，否则你将会成为一个沉迷于自我帮助的人”这样的警句在提醒着自己，可是仍然难以让自己离开那片熟悉的温床。后来也有学习积极心理学的视频课程，知道了这也是很多人的习惯做法——大多数人总是倾向于处在自己的舒适区里。这种人类基于倾向安全的本能实际上在现代社会中阻碍了人的更多社会性尝试和挑战。可是即使有了这样的认知，要想真正的改变，却并非说到做到的啊！ 当前途迷茫，自知不足却不明路在何方的时候，幸好我有一个不算糟糕的兴趣——读书，幸好我还喜欢时不时地记录一下，且经几番修改后自认为拿得出手，于是借着自建博客网站的那股子新鲜劲给自己下了个狠招——坚持每天写一篇博文，同时坚持着记日记，虽然很多都是一两句话带过。这些举措充实了那段内心空虚的日子，这个最明显的好处是有助于现在的我可以看清自己的过往的一步步脚印。就比如后来的辞职之旅，在日记里就记载了直接源于喜马拉雅电台的一个节目，主题是关于“理想请晚点实现”，于是我重新找出了这个节目，本以为能够找出那个触发我有此想法的那个点，结果反而觉得这个节目内容冗长、拖沓，要不是为了寻觅那份初心当真是听不下去的。于是便明白了我的真正想法的根源并非于此，而是因为在工作、生活的百般沉闷之际选择了日复一日的记录之后更加着眼于当下的自己，于是当听到“辞职旅行”这样的字眼的时候心中便激发出无边的热情，而这热情注定是要被转化成行动的。因为它理解了当下的迷惑，以及给出了可能的方向。又幸好我孤身一人，父母身体健朗，心无牵挂，亦无负担，这才能让我轻松上路、义无反顾。因而当提出辞职申请时候给出的唯一理由便是“想出去逛逛、看看”，想来当时要是也发个微博的话，估计哥们我早火了~ 旅途中，遇见了不少人，有分离不久的大学同学，也有青旅认识伴我走过一程的各种驴友。没指望能对工作、生活有更深入的认识和理解，只想着放空自己，却牵进了自己纷杂的情绪——有激动也有压抑，有兴奋也有失落，有自豪亦有羞愧，有期望还有失望。旅途中的人和风景在后来看都是美好的，可在当时那就是活生生的事实，那才是活在当下的感觉。这些复杂多变的情绪并非让我对旅途本来期望的一成不变的快乐而产生了落差，反而是重新激发了生活的热情，敢于直面现实和人生。不是不再害怕，而是害怕就害怕，我就是这么胆小啊，多练几次不就ok了！不是每天会一直保持快乐，而是不开心那就不开心好了，我就不开心怎么了，过一会儿我想通了或者了做好了不就行了么！生活本应如此，而我却在离开了正常的生活空间后才发现并理解了这个道理，不由得对自己说——这场旅途，值了！ 旅途归来，在深刻认识到本打算去的北京的自然环境之难以忍受和离家近方便以后照顾父母的缘故而选择了继续留在上海这个渐已熟悉的城市。面试的顺利让人倍感轻松、幸运，生活又回到了以往的节奏，可是心态不同了。想着心中尚未完全放下的人和事，加上有助于回忆和纪念甚至炫耀，便决定将之记录成册，打印成本。起初以为很简单，可是真正开始动手后才发现要想最终的作品拿得出手真是得下一番功夫的。于是花费了我近4个月的周末时间，几易其稿才成了最终的模样，虽然仍有不少毛病可挑，但是对自己来说，看得过去了。这段时间里，我又回到了那个熟悉的宅男生活——看书、写字，只不过这次看书完全是为了参考人家的排版。熬出自己的一个作品是一个既难受又快乐的事情，老是觉得不好，但过程中一点点地显现出最后的样子又让人激动不已，有时甚至为了自己的一个小创意而夸自己好几天呢！ 最终的作品让身边的人惊讶同时有赞美之词，我也收获了不少的虚荣心与自信心，但代价就是失去了很多时间与他人交流的机会，而沉浸在了个人世界里，这起码是不利于找女朋友的！国庆的时候参加了一个同学的婚礼，寡言的我在众人齐嗨的场面显得有些不适。正好该做的事已经做完，该放心的东西也已经放下，我可以重新开始一段人生旅途了。之后我便在周末的时候积极地去参加一些同城的户外活动，这里不得不提“空心户外俱乐部”了。开始参加这个俱乐部的时候它也没有成立多久，主要组织的多是上海市内的25公里左右的免费徒步活动。但是这样一个不够成熟的俱乐部却吸引了我的加入，每个周末不辞辛劳坐近2个小时的地铁去暴走，为的是打开自我，宣传自我。让自己在陌生的环境重新塑造一个我，一个不同于往日那般沉闷的我，而最大的信心武器便是那份作品了，也确实因此收获不浅。但同时，我知道这不是一蹴而就的转变，而需要不断地刺激来达成最终性格和思维上的惯性。于是在部落里做一些尝试却乐此不疲，渐渐地发现自己身上几乎看不到往日书呆子的影子了，又同时释放了那个内心的另一个自我，才开始感觉发现了一片更加广阔的天地。而后来的某一次户外活动中，我认识了她，她也认识了我，可是擦肩而过，但却在下次的活动中再次相遇之时才发现——噢，上次见过，于是一起走到了今天。不得不说，我在自我状态最佳的时候遇到了合适的人，莫不是最大的一份幸运了！如今的相处依然轻松，就像刚刚认识之时一样，不会因为沉默而尴尬，而是静静携手相伴。 毕业后的三年时光已然逝去，却始终清晰地记得刚从学校来到上海之时的那份落寞、空虚，可一路走来越来越坚信了一直鼓舞自己的那句话——“相信爱情，其实就是相信自己”，而这份爱情的含义囊括了所有我认为美好的事物。]]></content>
      <categories>
        <category>随笔</category>
      </categories>
      <tags>
        <tag>回忆</tag>
        <tag>毕业</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[大地方，小地方]]></title>
    <url>%2F2016%2F02%2F13%2Fhere_or_there%2F</url>
    <content type="text"><![CDATA[不知不觉在上海工作生活已有三年了，作为一个从小地方成长最后通过高考进入大学再毕业后进入大城市工作的大军中的一员，也曾常思考大地方和小地方在我眼中的种种区别——大城市机会多、视野开阔等，而小城市则相反。而本人就自己从事于IT行业的特殊性，从未考虑过就业选择几乎为零的家乡小城，也就未对此问题有过比较深入的想法。然而就在前几天从朋友圈里看到来自知乎的一则问题讨论——你是什么时候发誓自己再也不要回到家乡小城市、农村的？上千计的评论让我看了大半天也没有看完。正是由于问题的特殊性，这其中充斥着的多是对家乡的数落，比如穷山恶水处亲友的刻薄，教育资源的落后稀缺，重男轻女、只着眼传宗接代等等的落后的宗族家庭观念，闭塞不便的交通环境，以麻将为主的单一枯燥的文化休闲方式，难以满足的薪资水平，限制多多的职业发展道路，对于个人、独立性、隐私的忽视，概括起来就是如今的个性及取向与家乡已格格不入，而大城市却提供了实现这些的可能。 在知乎回复中有人纠结于对于三四线城市的定义划分，甚至有人为此拿出了仲量联行根据经济指数和房地产指数而计算出来的一个中国城市的60强排名—— 超一线城市：上海、北京一线城市：广州、深圳1.5线城市：成都、重庆、杭州、南京、沈阳、苏州、天津、武汉、西安二线城市：长沙、大连、济南、宁波、青岛、无锡、厦门、郑州三线城市——增长型：长春、常州、哈尔滨、福州、昆明、合肥、东莞、石家庄、呼和浩特、南昌、温州、佛山、贵阳、南宁三线城市——新兴型：海口、湖州、唐山、临沂、嘉兴、绍兴、南通、徐州、泉州、太原、烟台、乌鲁木齐、潍坊、珠海、洛阳、中山、兰州、金华三线城市——起步型：淮安、吉林、威海、淄博、银川、扬州、芜湖、盐城、宜昌、西宁、襄阳、绵阳 其实想想，我们或许不必纠结于几线城市的定义，这里探讨的是多年生长的小地方与成年工作后的大地方的对比，这种小与大可以是农村与城市，也可以是小城市与大城市，甚至可以是国内与国外，总结起来就是在经济、文化有较大差异的两个地方的一个人生抉择，只不过一个是生你养你或离家较近的小地方，另一个是上大学或打工而去的经济发展层次更高的大地方。 而之所以还有这样的探讨，那么一定是因为小地方还有我们难以斩断的羁绊，否则肯定一心扑向大地方了。细想之下，这些东西无非是家人的亲近、稳定安逸的工作节奏、熟悉乡音萦绕的工作环境。如果在大地方你也能够找到这些东西的对应位置，如把家人接到自己生活的城市（这里往深了说就涉及到家人对于离开生活几十年的地方去到新城市所带来的新问题了，暂且不议），找到自己适合且有兴趣最后慢慢有能力掌控好并按自己可以接受的节奏进行的工作，普通话交谈的习惯的养成，对于这个城市的文化、生活习惯的了解以至逐渐适应最后产生对于这份熟悉的眷恋。 在大地方，往往人情关系淡薄，而恰好给现代社会人们强调的个人独立、身心自由、隐私提供了极大实现，这应该是人们获取了基本物质后最大的需求，因而对他们来说，大地方让他们舒适、放松。另外大地方真的可以很大，大到能够包容所有人的缺点，甚至你的过去。但真正可怕的是，你难以接受自己的过去，并对人情疏远的社会没有找到一个处理起来顺当的人际关系应对手段，所以如果要真想待在大地方，那么就要学习着去融入它并做好为此付出学习成本的准备。 而在小地方，亲友关系大部分于此枝叶繁茂，你可以因此找到依托。同时由于从小适应了此处的饮食、口音、生活等文化氛围，工作于此莫不是件轻松惬意的事情，同时离父母亲较近，方便互相照顾，收入不高，但消费亦是不高，稳定的收入为未来几十年已经铺好了坚实的路基。当然有不少人在老家没有什么所谓的关系网，他们仅生计这一条便不会留在家乡，这里不对这种人群分析考虑，而针对较多的是有渠道留在家乡小城谋到一份满足小康生活的人群，也只有他们才最受大地方还是小地方这种抉择的煎熬。像这样的人要努力的在我看来应该是往生活深处里钻，在充分享受小地方轻松节奏的同时，找到自己于此间生活的极大乐趣，尽可能地通过自己的双眼和心来发现身边的美，而无闲暇去羡慕外面的花花世界。不过个人感觉这可能是个更加艰难的过程，网络的方便带给我们的是各种新奇生活和体验的刺激。也许只有在大地方经历几年的生活最后决定回到小地方的人，才比较能够守住身边触手可及的繁华吧。 因此，我挺喜欢一种说法——继续在大城市打拼或者选择回到家乡小城市，同样需要一份勇气。我仅从自身之前辞职旅行的经历便容易理解出去见识过更大的世界更能清晰地看到自己真实的内心。所以对这两种人我都会从内心生出一种敬意，欣慰他们找到了一种更适合自己的生活方式，也许还是不够好，但是至少下定决心并逐渐适应最后必然享受其中了。 但是对这句话，同时也是充满着恨意，恨我们的社会问题太多，地域发展差异太大，社会习惯不同带来的理解偏差，不同文化人群间包容的缺失，体制对于社会发展的限制，文化中和合性对于个性独立自主发展的压抑，以至于我们不能纯粹按照个人兴趣来选择自己的未来，更可悲的恐怕在于很多人尚未发现自己的个人兴趣。可是问题归问题，具体到某个人身上，我始终坚信是有他自身可取的选择范围的，哪怕这个范围很窄。 这种大地方和小地方的抉择多归因于纠结的我们正处在中国发展的特殊时期，城市化的进程在人的生活方式和思维转变的层面上讲才刚刚开始，在可以看得见的未来几十年里，我们还会遇到更多的问题。如果此时看看发达国家和地区的社会议题和政府决议，那都是针对极少部分人群的区区小钱，放在中国没人会在意。所以，我们有时应该为生于这样的一个社会而激动，有那么多的可为，又有那么多的限制，那么究竟何去何从呢？ 处在一个问题众多的社会是我们的无奈，却也是属于我们的一份幸运。也许某一天，社会发展渐渐平稳。到那时，这样类似的大问题可能不会再有，人群也可能细分再细分，再也难有同时几亿人关注的事情了，那时的我们到底会感到一种欣慰还是一种失落呢？]]></content>
      <categories>
        <category>杂说</category>
      </categories>
      <tags>
        <tag>家</tag>
        <tag>城市</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[在上海]]></title>
    <url>%2F2016%2F01%2F17%2Flive_in_shanghai%2F</url>
    <content type="text"><![CDATA[转眼间，在上海待了近3年了。可要说起对这座城市的感觉嘛，在辞职旅行之前自己就是这里的一个过客，只不过停留的时间略长些。直到旅行归来从上海的火车站出来的那一刻，看到那些熟悉的场景，还真是恍如故乡的感觉。再到后来工作落定，计划着未来较长一段时间都会在此度过，才开始思考这个城市以及它与我之间的关系。 之前每天上下班，走在街道上，乘坐着公交或者地铁，随着节奏的固定与熟悉，渐渐便忘了所处的这座城市。只有当以前的老朋友、老同学问起的时候才意识到自己身在上海，其他时间好像游离于其中，从来没有过与之对话。仔细想一想这应该不是一个正常的状态，是的，我需要去了解它。那么最直接的方式莫如出去走一走，去看一看工作圈子之外的城市风貌。正好在豆瓣上找到这么一个户外徒步的兴趣部落，在上海的郊区走着、聊着才发现——“噢，原来还有这么些个地方，哇，好多跟上海有关的东西都不知道呢！”我像是一个初到上海的孩子，重新对眼前的一切充满了一些好奇与认识的渴望。 自此以后，我坚持每个周末都跟着那个部落和一群原本陌生但渐渐熟悉的小伙伴们一起徒步，在健身的同时收获了不少行业之余、生活空间之外的知识与乐趣。就这样，越发觉得这个城市还有太多太多我所不知道的东西。于是决定再多一些努力，想着了解一个城市应该从她的历史入手吧。可好像上海在历史上为更多人所知的、记录较多的在我印象之中应该是清末以来的吧，而那个时候的上海最繁华、也最为后人道的应属租界了。这时候便看起了高晓松在《晓说》节目里提到的《上海大班》，讲的是一穷困犹太人来开埠不久的上海滩淘金终于成为房地产第一大户、远东富豪的真实故事。里面涉及到的一些对后来上海有影响的文化是最让我感兴趣的。比如现在所谓的弄堂文化就是起源于租界里外国商人（当时称“大班”）为赚取躲避战乱而逃往租界的老百姓的钱，按照伦敦工业区的工人住宅的样子建的一系列房子。还有现在仍然能够看到的建筑，比如中山东一路上那些个高楼几乎都是那个时候的大洋行，其中涉及的历史渊源都是很有意思的。 看完这本书后，便上网再找找有没有别的有关上海的书，最好是近些年写的书。于是找到了目前快看完的《上海的风花雪月》，乍一看书名还以为讲述的是上海的风流韵事呢。其实不然，作者是一位在上海生长的女作家，这本书主要写的是上海的咖啡馆、房屋、街道以及城市人物等。其中文字的细腻优美、情感丰富，从序言中作者对于城市的理解便可得见—— 城市是个生命体，它是一个人，而不是一个物。在我的故事里，街道与建筑都是城市这个人物形象的相貌，居民的故事都是这个人物形象的细节，城市历史都是城市这个人物形象的内心世界。 另外关于此书的一个很有意思的地方是这本书第一次出版于1998年，10年后第二次出版，再过8年第三次出版，而每一次再版都会在之前一版的基础上加一篇年记，年记中经常能看见的是提到以前的某某已不复存在或易主或尚且保存着。因此，单从这一本小书便可窥见上海最近几十年的历史变迁。 受书中描述的影响，我也决定走一走书中作者带她一个台湾朋友逛原来法国城的路线。在淮海中路和复兴中路的交叉口，进入申申面包房买几块面包，可是没买到书中说的法式小羊角面包，接着走后面的武康路等，这里的房子几乎后来都重新粉刷过，少了那份陈旧，至于新乐路和襄阳南路交叉处的圣母大堂则大门紧闭，经过上海音乐学院还特意进去逛了下，也没有听到所谓的“一路都是弦歌声”。看那些西班牙式的小房，由于没去过西班牙同时对这类建筑的特点又不知晓，看上去感觉也就和现在农村的小洋房差不多。 同样的街道，不一样的人走着看着，看不出那份韵味的人如我般，多是对这儿的生活习惯不了解，对这儿的城市变迁不曾历经，对这儿的建筑人文不够熟悉的吧。面对这样的认知尴尬，解决的路径只有一条——再学习+再经历+再认识。总之，对于这座城市，关乎她的历史、小说、电影、人物、建筑等等等等，都有太多值得去学习，然后重新审视周围的一切，这应该是一个值得去尝试的过程。]]></content>
      <categories>
        <category>随笔</category>
      </categories>
      <tags>
        <tag>生活</tag>
        <tag>城市</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[从房子被砸说起……]]></title>
    <url>%2F2015%2F11%2F25%2Ffrom_house_crash%2F</url>
    <content type="text"><![CDATA[上海最近的连绵小雨已经让人不记得始于哪一天了，直到房子被砸后接到房东的通知，然后火急火燎地临时搬家、找房、正式搬家，才意识到这“屋漏偏逢连夜雨”的困境引发的恨恨之意。 说起这场被砸的事故（之所以称不上事件，是因为身处上海的群租房，被整治清理，应该是件寻常的事情），我要稍微吐槽一番了—— 房子被砸之前有过一次小小的惊险——城管砸了同楼的三层、五层，而终于放过了我这一户所在的六层。本以为就此躲过一劫便算是过了，可是不曾料到这次的群租整治是大力度的，且有回查，貌似有不放过一条漏网之鱼的行动倾向。这样强有力的手腕固然值得敬畏，可是却让人对处理的过程难以接受，不说二房东违规隔间城管便直接强拆是否合乎法规，起码能做到的应该是提前通知到租客吧，否则只通知到房东/二房东级别的话便给了他们昧心扣押房租及押金的机会，况且这般的驱逐租客只不过是把这些人暂时地逼到另一个暂未形成广泛群租气候的小区。而标榜这些功绩的数字却与此相关，所以也不能说是无用之举吧，至少账面上好看了。 吐槽罢了，心中畅快不少，话说这心中郁结还是要有疏散之处。冷静观之，群租的危害人人知晓，可生存的压力逼迫这些上海的蚁族们不由得从降低生活成本的角度出发而承担一定风险。可一旦这样类似杂乱但是不小的需求市场的形成必然引得市场经济下趋利的导向，这本就无可厚非，可是一加上今天社会的金钱本位的价值观，却使得其中的景观难以直视。可要想靠一个微小的政府机构来制度规范，无疑是一个漫长的反复治理的过程。当然，有人说中国政府的力量之强世界上无语伦比，可是那也只是体现在从小政治课本里说的社会主义的优越性——集中力量办大事。而一旦遇上租房这般关乎民生细节的小事，政府要想办得井井有条，尤其是那么一个审批繁琐、制度纷杂、人员冗余等等等等的机构，真是比那算“三五”还难吧。 怎么越说越到了更高甚至抽象的层面了呢？索性就多说一些吧。在中国发展渐缓的今天，政府提出的“新常态”一词既有对忧虑中的人民来一颗定心丸的意思，也有对这一发展阶段的理性定义。在目前能够看到的未来一段时期，中国还是在靠政府在引导前进，虽说网络打开了舆论的一扇小窗，但是又有多少能够真正积极影响决策呢？恐怕是少之又少吧，否则那些个网络上的公共事件又怎能成为新闻呢？而与此同时，政府也意识到了自身能力的薄弱及有限，在一个现代社会最有力的武器应该还是法治，因而才重提早已写在宪法里却被人所忽视的“依法治国”四个大字。从近两年来的司法改革（如巡回法庭制度）及立法层面的进步（如劳教的立法废止）便可以看出国家层面的努力。当然，即使如此，老百姓最为关心的各种民生问题还是很多悬而未决的，可是在大层面看的话至少有这么一个方向和希望。这样的思考角度显然是仰视，可是在NGO如此不成气候的天国，要想指望人民的自觉，那对于心急的中国人来说这辈子是无缘得见那样一个美国式的民主了。 说着说着，又跑远了。在中国这样一个特色社会，拿不到一个现成的例子直接参考，那么我们还就只能指望当前政治的生存环境了。可是我想强调的是，在大环境无法撼动的背景下，小人物还是有他们可以抉择的空间的，虽然那个空间可能会很小。]]></content>
      <categories>
        <category>杂说</category>
      </categories>
      <tags>
        <tag>中国</tag>
        <tag>政府</tag>
        <tag>社会</tag>
        <tag>改革</tag>
        <tag>生活</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[还是要改改吧]]></title>
    <url>%2F2015%2F10%2F28%2Fthe_first_changeit%2F</url>
    <content type="text"><![CDATA[前几天，一朋友对我的旅行手册提出了很多的建议，其中提到的关于内容叙述比较流水的说法正是我在整理成书时最为纠结的一点。 这样流水式的写法，是小学时候语文老师常教导我要避免的。而此次之所以这样写，是因为好多文字是在旅行归来之后才动笔的。为了帮助回忆，我便采用了各种带有时间点的物件（如车票、门票、照片等）来辅助回忆，在脑海中重新如流水般过一遍，从而把当时的那些见闻按照时间轴给找补回来，不过实际上后来成书的那些文字已经是原文经过一些筛选之后的（见于前面几篇博文），可是效果不佳。 当后来下决心考虑成书之时，已经意识到这样的文字主要呈现出两个问题——一是文字过于流水式了；二是文字常用“美丽”“不遗憾”等十分主观的词语来总结一段旅程，心中充满着无限的感动，但由于措辞的贫乏，读者丝毫不能获知这些个体验的实质，也没法真正受其感染。不客气的说，这种纯粹个人化的陶醉，给读者带来的反而是疑问甚至厌恶。事实上一般我们说一篇游记有趣或者可读，应该是笔者将难以表达甚至不可表达的事物清晰、明确地展现在众人面前，而在游记中反复强调的无以言表式的自我陶醉，只是经过伪装的苍白和无思想状态——这些正是我要在写作中竭力去摆脱的！ 在意识到这些之后，我便下决心要改写一番，于是终于花了一个周末的时间重写了前四篇，发现这样的效率实在低下。也许是拖了太久急于看到成书而带来的不耐烦让我放弃了继续改动的念头，并换了一种角度思考来安慰自己——这些个文字便是你最为真实的旅行经历，无须躲避，而且你的书的主要受众应该定位为熟悉你的亲朋好友，他们对于这些文字的理解是基于对我认识的基础上的，因而不会苛求于文字的。终于我保留了那些未改动的文字编入书中。 可是当一个新朋友重新提及已经被我忽略了的问题的时候，我又重新陷入思考，便又从头完整地重读了自己的文字，结果为这些文字的苍白和弱弱的可读性感到一丝羞愧，思索再三后决定试着从第五篇开始重写或改写。希望这次改动能够解决好第一个问题，同时尽量避免第二个问题。]]></content>
      <categories>
        <category>旅游</category>
      </categories>
  </entry>
  <entry>
    <title><![CDATA[陌生的乡音]]></title>
    <url>%2F2015%2F08%2F10%2Fnever_for_hometown%2F</url>
    <content type="text"><![CDATA[之前有一次和老乡在微信中语音聊天时，聊着聊着忽然对方说到——明明是老乡,为什么操着一口的普通话，我这才反应过来。是啊，可以说家乡话的啊，平时打电话给父母时不是这样啊。这真是个值得想想的问题。 也许是出来太久了，已经丢失了家乡的语境氛围，以至于有一次极其偶然的机会在街头遇见了初中同学，可是互相说的却是普通话，更加诡异的是直到分开后身边的同事对我们的用普通话交流比较纳闷，我才意识到——是啊，为什么呢？ 事后想想，如今的乡音的使用场景仅限于每周一次和父母的通电话以及过年回家的寥寥数日。长期的出门在外，我们在逐渐融入另一所城市的话语体系之时也与家乡在言语上渐行渐远。以至于每次回家从坐着县城开往老家小镇的中巴的时候，便开始经历这么一番历程——听着车上的乘客说着各村的方言，原先小时候还能辨别出其中的差异，而今只能静静地听着。慢慢地，找回了乡音在我内心深处的影子便经常体现在我忽然听懂了一位老太太以纯正口音和旁人聊着家长里短。这时候，我在心底游过了一丝微笑。就这样，一小时的车程伴着已陌生但又渐渐忆起的乡音，我回到了那个生我养我的地方，可是几天后，我又将坐着同样一辆车离开这个小镇，在离开这个县城。 虽说如此，但也无需感伤。当你选择了另一座城市之时，便已注定你与原先的城市在感情上的一些断裂。当你熟悉了现在所处城市的节奏，这儿的人和事，渐渐地你有点依赖这座城市了。但可能连你自己还没有意识到这点，我也是在旅行到雁荡山那偏僻、交通不便（虽然后来发现这里的交通还算相对不错的）的山野的时候，那种很大程度上的不适应才让我真正明白，我是真的离开了家乡，离开了农村，而且很难再回去了，因为无法想象回去后一天天的生活。难怪有人说——去大城市打拼需要一份勇气，而重新回到老家同样需要一份勇气。我先前为自己有前者的勇气而自豪不已，殊不知两种情况同样需要挑战与面对，关键在于接下去如何走好。 家乡话，我们在慢慢地对此陌生，可是俗话说“乡音难改”，特别是在这所城市遇到一个老乡时，还是能相互猜到，这种深存内心的乡音总能让我感动不已！]]></content>
      <categories>
        <category>杂说</category>
      </categories>
  </entry>
  <entry>
    <title><![CDATA[第一次一个人出门远行（写在后面）]]></title>
    <url>%2F2015%2F07%2F05%2Fthe_first_epilogue%2F</url>
    <content type="text"><![CDATA[从北京走后，回了一趟大学，见了几个老同学，相聚甚欢。罢了去往杭州，还了从亲戚那借来的相机，最终回到上海。从上海的火车站出来的时候，看着涌动的人群，突然有一丝感动和温暖从心底流过，不禁让我想起了李健的《异乡人》中的歌词—— 当你迷失在路上能够看见那灯光不知不觉把他乡当作了故乡 写到此处，大把的码字工程终于要告一段落了，让人顿感轻松不少。 出门在外42天，可是从第一篇（5月17日）到现在已经过了49天，才写到结尾，原来这回忆和梳理居然是比实际旅行更加消耗时光和精力的。 在回忆和梳理那些旅行的日子的时候，有些感受还是很有意思的—— 当记忆与车票对不上的时候，可又往往十分确认记忆无误的情况下，最终根据各种车票、门票等有时间标记的提示梳理出了当时的行程，才发现记忆真的是会出错的，特别是对于时间长短的感知是与当时所处的状态极大相关的。另外一个很有意思的是，当你重新梳理过去的一段经历，重新在脑海中再走一遍的时候，偶尔会看到当时看到但却忽略了的景象，然后会代入当时的自己的心境，这时候仿佛重新又走了一番，甚至有种弥补了什么的感觉。说起来好像是穿越，其实想想不过是让那些有印象的岁月的碎片重新整理、组织成了一幅幅连续的动画整齐地叠放在了大脑中，好像是对过去的岁月给自己一个交代，因而之后甚至有点如释重负的感觉。 写着这里，我发现不知该如何收尾了，也许是不想结束。不过想来这段旅行虽然结束了，但是作为人生——这个大的旅行才刚开始那么一小节，后面的路更长，也相信会有更多的风景等我去感受。 走吧，永不止步……]]></content>
      <categories>
        <category>旅游</category>
      </categories>
  </entry>
  <entry>
    <title><![CDATA[第一次一个人出门远行（北京篇）]]></title>
    <url>%2F2015%2F07%2F02%2Fthe_first_beijing%2F</url>
    <content type="text"><![CDATA[本来计划中的最后一站是北京，然后在北京找工作，听起来过于美好。然而走着走着，等我快到北京的时候，才发现自己根本没有做好来北京工作的准备。也许只是在上海待得有些闷了，出去了这么久，要说散心也散够了，还是回去吧。况且，北京的环境不太好，刚来这里就被“漫天白雪”给震惊了，原来是杨絮柳絮。此外，我慢慢觉得离家近些会更好些，也许是为了回家的方便，也许是心中还有一个隐隐的乡土的根。 要说起当初想来北京的缘由在于这里有丰富悠久的文化底蕴，有太多的文化活动可以去想象着自己去参加。而来北京的第一天，就开始想我为什么要来北京呢，就是所谓的IT公司比上海更多吗？还是这儿又可以体验另一番生活？想来想去，好像都不是，我只是想换个地方待一待。而如今我已经换了n个地方，是时候回去了，我也终究不是个真正乐于走天下的浪子。 既然如此，来了，还是该好好转一转的，毕竟这也是属于你旅途中的一部分。 来北京的第二天正好是周日，约上这儿的几个大学同学相聚一餐。在饭桌上当然是有说有笑，大家都很开心。可是吃完散桌了，大家基本上有各自的事情，只能一一告别。我这才想到他们不像我是专程来旅游的，有大把的时间可以浪费。虽说心里已经明白这不再是大学时那样大家都很悠闲的，可是看着好多人陆续离去，还是有点伤感的。好在有两个同学没什么要紧事，带着我去他们的住处，再聊上一个下午。 然后随同学走在北大的校园里，也去了未名湖，不知地为什么没有特别的激动的心情。这可是一座百年学府，中国的最高教育摇篮哇！也许是自知早已和这座学校无缘，也许是明白了这也不过是一所学校罢了，是一座让你好好学习的地方，可是离开了学校你仍然要学更多的东西。 第三天，去了趟圆明园，才知道这儿是很大的，不光是断壁残垣，那不过是西洋楼旧址，这里请原谅我的对于历史的无知，也许真的“绝知此事要躬行”吧。 第四天，想来自己充个好汉，便去了下长城。这处于八达岭北段的部分，确实有其雄壮之处，行到险处可以比之华山，不由地让人惊叹。 第五天，去了恭王府，我想看看这个和珅住过的地方，还能留下多少奢华的痕迹。下午去了故宫博物院，偌大的紫禁城如今成了寻常百姓的游玩景点，想到《末代皇帝》末尾处中溥仪进故宫居然要买票，不由地飘过一丝难言的感慨。 就这样走着，走着，感觉有些倦了，是时候结束这趟旅行啦。]]></content>
      <categories>
        <category>旅游</category>
      </categories>
  </entry>
  <entry>
    <title><![CDATA[第一次一个人出门远行（华山篇）]]></title>
    <url>%2F2015%2F07%2F01%2Fthe_first_huashan%2F</url>
    <content type="text"><![CDATA[到了华山脚下的青旅，约么下午3点钟，闲来无事，在看完了小说版的《平凡的世界》又看起了电视剧版的。虽然刚开始对那许多的旁白感到烦人，但是本着对小说的喜爱，爱屋及乌，还是看起来了，而且觉得其中少安的扮演者王雷的表演还是十分符合小说中的描述的，因而还是可以看看的。不过有一点，就是对于电视剧将小说中金波和润生的形象融合到一个人“润生”身上，而且把润生退伍回家的理由解释为战场上负伤，让我难以接受。而小说中对金波当兵中途回家则描绘了一段浪漫且悲伤的爱情故事—— 金波所在部队的驻地在青海，一天他从远方归牧的马群中听到一个女孩子的歌声，那是用藏语在歌唱西部歌王洛宾的《在那遥远的地方》，那歌声吸引了他每天傍晚都去马群听那迷人的歌声。由于部队的纪律让他难以与她见面，于是他想出了一种“接近”那位姑娘的方法。每天当她在远方唱完这首歌时，他便站在营房后的高处用汉语唱一遍这首歌。就这样，她唱完，他唱，每天如此。而有一次她唱完一段后便不唱了，而之前她从来都是不间断的啊。他心中纳闷：难道她是在等待他唱下一段吗？于是他就尝试了唱着第二段，唱完之后，那姑娘便接着唱第三段，然后他再唱第四段。从那天以后他们便用着歌声“交往”起来，而他几乎每天都是流着泪和那个未曾谋面的藏族姑娘“对歌”。这样一来他每天吃不进饭睡不着觉，终于实在忍受不了在一天马群进场之前冒着风险偷溜出了营房，他见到了那位藏族姑娘。和他想象的完全一样，红红的脸庞，黑黑的发辫，一双眼睛像黑葡萄似的扑闪着，露出一排白牙齿憨憨地对着他笑。他们立在军马场的草地上，相对而视。他不由地哭了，她用厚墩墩的手掌为他揩着脸上的泪水，激动地说着什么。但是一个藏语、一个汉语，互相急得用手乱比划。可是两个人都又知道对方在说什么。她扑在了他的怀里，他也紧紧的地抱住了她。他觉得那时候世界上一切都不存在了。但实际上什么都存在着，这时军马场的政委出现在了他们的面前。于是，一切都结束了……因为违纪使他复员，而在走得那一天，没什么顾忌了便去军马场找她，不想她被调到别的马场了。她将一只公家发的白搪瓷留给了这里的一位同伴，让她转交给他，而他也留下了他那支最心爱的竹笛。就这样，他结束了这场爱情，而自始至终他连她的名字也不知道。 在看完了几集后，天有些黑了。回到大厅里，遇到了一位驴友，于是说好了第二天一同爬山，毕竟有个伴总会让旅途多一份快乐与回忆。 第二天，我们6点钟不到就出发，到达华山之后用几块饼干对付着便开始了这一天的攀爬。 到达第一个地图上有标识的点是“五里关”， 因距离大门5华里左右而得名。再走一点到了“石门”，此处若有战事，一夫当关易守难攻，故华阴旧志称其为华山天险第二关。杨嗣昌《太华记》中说，两石如千斛钟，色黑如铁，中通行径，为华山铁门。![][1][1]: http://7xawfy.com1.z0.glb.clouddn.com/xhs/xhs%20(32).JPG?imageView2/2/h/800下面这块石头显得如此突兀，怎么看，怎么不舒服。我在想这个“战胜华山，一生平安”的标语是在鼓励我们一直努力向上，还是建议购买上面的平安丝带呢？![][2][2]: http://7xawfy.com1.z0.glb.clouddn.com/xhs/xhs%20(34).JPG?imageView2/2/h/800 然后一路上经过响水石、云门、通仙关，开始慢慢体会到一点—— 华山石刻以摩崖石刻为主，是一个书法艺术宝库，被誉为镌刻在崖石上的书法博物馆。石上书法，行、草、隶、篆琳琅满目，各具特色。 ![][3]![][4]![][5]![][6][3]: http://7xawfy.com1.z0.glb.clouddn.com/xhs/xhs%20(36).JPG?imageView2/2/h/800[4]: http://7xawfy.com1.z0.glb.clouddn.com/xhs/xhs%20(38).JPG?imageView2/2/h/800[5]: http://7xawfy.com1.z0.glb.clouddn.com/xhs/xhs%20(40).JPG?imageView2/2/h/800[6]: http://7xawfy.com1.z0.glb.clouddn.com/xhs/xhs%20(44).JPG?imageView2/2/h/800 到了回心石，这儿有传说云—— 说的是元朝道士贺志真带领2个徒弟在华山开道凿洞，每凿一洞，就让给别人，这样天长日久，两徒弟就有些不高兴，认为，本想跟上师傅学点东西，现在不但没学到什么东西，而且天天吃苦凿洞，这什么时候是个头啊？这天，师徒三人在南天门外悬空造洞时，两徒弟心怀叵测，砍断绳索，眼看师傅坠入深渊。两徒弟随即下山，当走到“回心石”处与师傅相遇，因此已知道师傅已经成仙，不是凡人了，于是悔恨不已，决心回心转意，又随师傅上山修炼。 ![][7][7]: http://7xawfy.com1.z0.glb.clouddn.com/xhs/xhs%20(50).JPG?imageView2/2/h/800 这儿一过，便是千尺幢，是为登华山的第一处险境，石阶顶端有如井口，倘若把“井口”用铁盖盖住，通往华山的道路便被堵塞，所以称之为“太华咽喉”。![][8][8]: http://7xawfy.com1.z0.glb.clouddn.com/xhs/xhs%20(51).JPG?imageView2/2/h/800![][9][9]: http://7xawfy.com1.z0.glb.clouddn.com/xhs/xhs%20(52).JPG?imageView2/2/h/800![][10][10]: http://7xawfy.com1.z0.glb.clouddn.com/xhs/xhs%20(53).JPG?imageView2/2/h/800 好不容易爬完千尺幢，到达一平台，可以看到民国时题刻的“太华咽”三个字，旁边的“光绪辛丑重九临清徐坊徐埴三登太华遍游玩诸峰”则是有这么一段背景—— 光绪辛丑重九，即1901年农历9月初9日。徐坊，清代官员，字士言，号醒生。今临清人。曾为宣统皇帝之师。出身官宦世家，捐为户部主事。光绪二十六年（1900）八国联军侵入北京，两宫西逃，徐坊追随而去。光绪二十七年（1901）以尚书荣庆荐，越级擢升为国子丞。后为宣统皇帝之师。卒后为正一品封典，晋赠太子少保衔，谥“忠勤”，国史馆为其立传。徐埴，山东临清人，晚清贡生，民国京城名士。其父徐延旭曾为广西巡抚，其兄徐坊为国子监祭酒，溥仪皇帝的老师，京师图书馆副监督。1928年清东陵被反动军阀孙殿英盗掘后，末代皇帝溥仪派耆寿民、宝瑞臣、陈诒重、徐埴等前往东陵勘察护陵，并办理一切善后事宜。徐埴食宿在东陵现场三十多天，真实详细的记录了东陵残毁的情形，记载了捡拾赎回散落珍宝和护陵的经过，回天津向溥仪皇帝禀报后，徐埴得到溥仪皇帝赏赐。此后，徐埴将于东陵所见编成《东陵于役日记》一书。华山南峰有另一幅题刻，“辛丑八月晓日，李经野莘夫，徐坊士言，（徐）埴士范重游”，时间在八月。也就是说，这一年里，陪着慈禧避难西安的徐坊、徐埴兄弟抽空至少爬了三回华山。 ![][11][11]: http://7xawfy.com1.z0.glb.clouddn.com/xhs/xhs%20(54).JPG?imageView2/2/h/800 紧接着便是百尺峡，虽没有千尺幢那么长，仅46米，石阶91级，但仍是华山天险之一。这里势危坡陡，石壁峭立，通道狭窄，且有悬石，摇摇欲坠。游人至此都心惊胆颤。明顾端木有诗状其险曰：“幢去峡复来，天险不可瞬。虽云百尺峡，一尺一千仞。”千尺幢、百尺峡的台阶都是从明末清初开始凿的，民国时几经加固，解放后又多次修整。一九八五年又凿为复道，游人上下各行其道。 ![][111][111]: http://7xawfy.com1.z0.glb.clouddn.com/xhs/xhs%20(55).JPG?imageView2/2/h/800 此处的天仙洞，据说住的是吕洞宾，而之后的二仙桥的来由就是何仙姑在那碰见了吕洞宾，受他点化而成仙的地方。![][12][12]: http://7xawfy.com1.z0.glb.clouddn.com/xhs/xhs%20(57).JPG?imageView2/2/h/800 再往前走，两侧崖壁狭窄，被飞来的两块石头从中撑开，石隙只能容一人通过。人从石下钻过，生怕石块从两壁间掉下来，故称此石为“惊心石”。通过悬石后，心总算放下来了，回头再看，原来此处卡着的两块石头，是上大下小，故能安然无恙，后边的这颗石头则被称为“平心石”。韩愈诗中有“鄂然神功就，杀气见棱角”的描写。明杨嗣昌《太华山记》对惊心石有生动记述：“峡中乃有大石，不知何自飞来，如欲堕涧而为两崖所挟迫不能下。又若惧两崖其灵异，斯为足惜…… ![][13]![][14][13]: http://7xawfy.com1.z0.glb.clouddn.com/xhs/xhs%20(59).JPG?imageView2/2/h/800[14]: http://7xawfy.com1.z0.glb.clouddn.com/xhs/xhs%20(60).JPG?imageView2/2/h/800 穿过百尺峡，行不多远，本已到了绝境，前无去路，幸得一小桥——二仙桥飞架凌空，联系二山，这才又于崖壁上凿出一小径上山。 ![][15][15]: http://7xawfy.com1.z0.glb.clouddn.com/xhs/xhs%20(62).JPG?imageView2/2/h/800 前面又是一段险路“老君犁沟”，传说是太上老君牵来自己的青牛，在这个陡壁处犁出的一条小路。 ![][16][16]: http://7xawfy.com1.z0.glb.clouddn.com/xhs/xhs%20(65).JPG?imageView2/2/h/800 走完这段有500多个石级的“老君犁沟”，就登上了海拔1500多米的北峰。这里四面悬崖绝壁，恰如一座平台，因而又叫云台峰。 ![][17][17]: http://7xawfy.com1.z0.glb.clouddn.com/xhs/xhs%20(70).JPG?imageView2/2/h/800 到了北峰顶，放眼望去，方得以俯览华山之险。往南走，最近的即是擦耳崖，要往其它峰去，必须打此经过。擦耳崖本来也是比较险的，意味着要擦着耳朵才能过去，现在路越来越宽，外侧还加了护栏,安全了不少，但是味道也就少了。 ![][18][18]: http://7xawfy.com1.z0.glb.clouddn.com/xhs/xhs%20(72).JPG?imageView2/2/h/800 再往前走，是苍龙岭了。此处因岭呈苍黑色，势若游龙而得名。 ![][19][19]: http://7xawfy.com1.z0.glb.clouddn.com/xhs/xhs%20(86).JPG?imageView2/2/h/800 下面刻着“韓退之投書處”是为韩愈，字退之，相传韩愈登华山览胜，游罢三峰下至苍龙岭时见苍龙岭道路如履薄刃，两边绝壑千尺，不由得两腿发软，寸步难移，坐在岭上大哭，给家里人写信诀别并投书求救。华阴县令闻讯便派人把韩愈抬下山。 ![][20][20]: http://7xawfy.com1.z0.glb.clouddn.com/xhs/xhs%20(90).JPG?imageView2/2/h/800 在苍龙岭上方平台边崖上刻有“云海”二字，落款就是四个圆。有人说是“昌”“明”二字，有人说是陕西关中方言“jiao”（意思就是太阳光很火辣），更有甚者认为四个圆意为“二月二日”。俗有二月二龙抬头之说，寓意希望苍龙永远行云布雨。 ![][21][21]: http://7xawfy.com1.z0.glb.clouddn.com/xhs/xhs%20(91).JPG?imageView2/2/h/800 再往前走着，在这崇山峻岭之中，居然能够见到盛开的桃花，也实属不多见，估计是后来有人栽种的吧。![][22][22]: http://7xawfy.com1.z0.glb.clouddn.com/xhs/xhs%20(96).JPG?imageView2/2/h/800 过一会儿便到了金锁关。这是建在三峰口的一座城楼般石拱门，是经五云峰通往东西南峰的咽喉要道，锁关后则无路可通。杜甫在其《望岳》的第二首关于华山的歌咏中“箭栝通天有一门”便是指的这里。 西岳崚嶒竦处尊，诸峰罗立似儿孙。安得仙人九节杖，拄到玉女洗头盆。车箱入谷无归路，箭栝通天有一门。稍待秋风凉冷后，高寻白帝问真源。 ![][23][23]: http://7xawfy.com1.z0.glb.clouddn.com/xhs/xhs%20(100).JPG?imageView2/2/h/800 再走几步，便到了玉女峰。 ![][24][24]: http://7xawfy.com1.z0.glb.clouddn.com/xhs/xhs%20(102).JPG?imageView2/2/h/800 接下来是云梯，短短十来米的高度，不过却是极险的，可供放脚的地方十分狭小，几乎全靠手臂的力量把自己拽上去。 ![][25][25]: http://7xawfy.com1.z0.glb.clouddn.com/yunti.JPG?imageView2/2/h/800 此处上罢，即到杨公塔，也是东峰之顶，这里视野极好。 ![][26]![][27][26]: http://7xawfy.com1.z0.glb.clouddn.com/xhs/xhs%20(104).JPG?imageView2/2/h/800[27]: http://7xawfy.com1.z0.glb.clouddn.com/xhs/xhs%20(110).JPG?imageView2/2/h/800 此处即通往华山最险处——长空栈道，此前还有一处也是危险，叫做“鹞子翻身”。我们怕时间不够，而长空栈道往返便需要40多分钟，于是放弃了鹞子翻身，结果没想到到了长空栈道这儿，却被告知在检修，真是遗憾。华山第一险就这么错过了，而第二险却被我们放弃了，这是逼要我下次再去的节奏吗？ 不过虽然没去，我不甘心，所以借一借网上的图片给大家展示一下，如果你是图片的主人，请在下方留言，我会立即删除。 ![][28][28]: http://m1.img.srcdd.com/farm2/d/2011/1109/03/84D994BE7F600C8BCB33C04DCF1B6AE2_B1280_1280_768_1024.JPEG 不一会儿，即到了南峰之顶，这是华山的最高峰，即为华山之巅。![][29][29]: http://7xawfy.com1.z0.glb.clouddn.com/xhs/xhs%20(118).JPG?imageView2/2/h/1080 从此往后便是西峰了，算是开始下山了。 ![][30][30]: http://7xawfy.com1.z0.glb.clouddn.com/xhs/xhs%20(123).JPG?imageView2/2/h/800 西峰无多事，此时已是下午4点钟了，于是坐缆车下山。 ![][31][31]: http://7xawfy.com1.z0.glb.clouddn.com/xhs/xhs%20(129).JPG?imageView2/2/h/800 坐完缆车，再转一趟大巴，方得下山。至此，整个华山之旅便宣告结束了。 有驴友相伴的时光是短暂的，我匆匆坐上了往东去洛阳的火车，她坐上了往西去西安的火车，留下的只是一些照片与回忆。]]></content>
      <categories>
        <category>旅游</category>
      </categories>
  </entry>
  <entry>
    <title><![CDATA[第一次一个人出门远行（西安篇）]]></title>
    <url>%2F2015%2F06%2F29%2Fthe_first_xian%2F</url>
    <content type="text"><![CDATA[刚到西安的那天，走在古城墙外，用相机攫取这座城市和这儿的人的一些瞬间。原来，我又来到另一座城市了。我将在这儿度过同样不过几天的时光便又要径自离去。 西安，这座位于中国西北部的城市，不光吸引了陕南和陕北的人，更有不少宁夏甘肃的人来此谋生。如果不是中心的古城墙在时刻提醒着你的话，这样一座现代化的城市，怎么也让人难以想象居然承载了那么多代帝国君王的故事。看到兵马俑的一号坑，那最早只在历史教材上见过的景象摆在了面前，仍然不由地惊叹如此浩大的工程。在现场可以看到几个工作人员在慢条条地进行着清理拼接那残缺的兵马俑的身躯的工作，由于技术保护的难度，还有好些没有挖掘出来。当徘徊在陕西历史博物馆内，就那样慢慢地走着，小心翼翼地防止与密集人群的接触。想给自己留一点空间，试图让这些个经历周、秦、汉、唐等朝代的各种文物将自己代入那古老的封建文明的中国，却显得那么吃力。我于是放弃了，匆匆过眼，正如浩瀚历史中这些也只是短短的几页。 ![][1][1]: http://7xawfy.com1.z0.glb.clouddn.com/xhs/xhs%20(18).JPG?imageView2/2/h/800 从南门上古城墙之前，是要经过护城河的，这在古代是唯一的入口。作为一座久经战火洗礼的城市，古城墙也在各朝各代经过了不停的修缮，建国后在1983年开始进行了一次大规模修复，墙体维修加固工程按照“修旧如旧”“不改变文物原状”的原则，按照清乾隆年间的墙体结构规格修复，到1990年底基本完工。由于城墙的厚重坚固，使得如今成了旅游甚至跑步健身的一个极佳的场地，我有幸在西安的最后一天参加了由伊利举办、打名“奔跑吧兄弟”的5公里跑步比赛。从南门跑到西门，再跑回南门，那天下着蒙蒙的细雨，在路上还遇到别的公司同样为宣传自家产品而搞出的类似的奔跑活动。汗水、雨水浸透了我的T恤，然后又湿了套在外面的活动服。跑着跑着，我仿佛回到了在上海时公园里跑步的时光，可是想想此刻突然觉得很是不可思议——我居然在异土他乡与一群不认识的人一同跑步，终点还有同行的驴友在帮我拿着行李，给我计时等着我回来。这一切的一切，怎么想，怎么觉得不真实，也许是在跑步过程中释放出多巴胺的促进下更让人觉得此刻的虚假。可是如果这是假的，那么还有什么是真实的呢？ 除了体会这座城市的古老韵味，我把不少的精力放在了这里的美食。那几天的早上，一定是找最近的biangbiang面的分店吃上一碗。西安的面食应该是最好的，在这里吃的臊子面、羊肉泡馍等等都是极其入味的，就连那平日里难以下咽的馒头在这里也是那么的可口，而且管饱哇。特别是在回民街——这个全由回民经营、具有浓郁清真特色的美食小吃街，你可以做个幸福的吃货，不过要小心身上的手机、钱包等财物。 这座城市除却带给我的陌生与新鲜之外，还有与熟悉的大学同学的短短相聚，说笑着以前大学的时光。 在乘坐飞机经过城市的夜空之际，贴着窗户能够看到远方的灯火，似乎能看出哪儿是我住过的青旅的方向，而与此同时我与这座城市的缘分也就在此刻作罢，正如之前走过的那么多的城市一样——你与她才刚刚认识，还未来得及熟悉彼此，却就要在下一刻告别。]]></content>
      <categories>
        <category>旅游</category>
      </categories>
  </entry>
  <entry>
    <title><![CDATA[第一次一个人出门远行（成都篇）]]></title>
    <url>%2F2015%2F06%2F19%2Fthe_first_chengdu%2F</url>
    <content type="text"><![CDATA[在成都同学家里住的那些日子过的很是舒服与安逸，每天睡到自然醒还要再自然睡着，然后再眯一会，实在睡不着了才起身，然后叫醒我那更能睡的同学出门寻吃的。那些天我几乎没带相机，留下的照片不过十几张，拍的也就是在大熊猫基地的，想看可以戳此处。 在成都的三天多的时间里，除了睡觉之外就是吃了，对于景点的光顾在这里提不起大的兴趣，也懒得走动，除非是寻个好的吃处。这么说我好像是个高级的吃货，那倒不是，只不过想入乡随俗罢了，成都不是传说中吃货的天堂嘛，权当体验一番。第一天的中午，我们去的一家店，叫“龙抄手”。直接就来个48元的套餐，上来的是十几个别致的碗碟，盛装的是各种当地的名小吃，由于花样较多，只记得有钟水饺、担担面、红油抄手、赖汤圆、鸡丝凉面、蛋烘糕、夫妻肺片、鸡汤抄手、银耳羹、凉粉、红汤抄手、烧卖、原汤抄手、酸辣抄手、凉面 、海鲜面、三合泥、甜水面、牛肉面、叶儿粑、海味抄手、渣渣面。我只负责吃，说不出所以然来，总之是赞不绝口一点不假。后来吃的一家“蹄花”的，也是不错，刚开始看着就以为是普通的炖猪蹄，可是炖的很酥很烂，和我们平时吃的猪蹄汤差不多，可是蘸着麻辣的酱料感觉就非常不同，很是过瘾。可要说吃的最嗨的当然是最后一天晚上了，我们另叫上了两个成都的熟人，开吃——先是从下午6点到10点的火锅，然后换了一家店吃个甜品，然后11点多钟到凌晨一点多钟吃的烧烤，还好当晚的肠胃比较给力的。这才算是真正见识了成都人的“安逸”。 说到吃，你可以看到成都人在这方面确实下了功夫的，因为你爱吃的前提是会做吃的呀。这里的小吃不光是你说出来的那些，还有好些个当地人都不知道叫啥，甚至听同学说隔会儿时间便有新的发明（当然，还是吃的），一旦听说哪儿有好吃的店，必定是门庭若市的。而且他们对于吃还是极具耐心的，我们知道成都最红火的当属火锅店，而这里所有的火锅店都是不给预定的，要想吃就得排队。我们那天晚上去的早，看着后来的人们排着长长的队伍，还是有说有笑。照我往常的理解这是为了好吃而必须付出的代价，可是在这里从他们眼里丝毫看不出“代价”的痕迹，看来他们已经习惯了。 而除了吃呢，成都人好的也就估计是麻将了。同学说的有意思——成都人挪个地方，不是找吃的，就是去打麻将。麻将是他们最大的休闲方式，他们甚至会选择在周末的时候叫上几个老友去郊外搓一顿再吃个火锅。如此悠闲的民间生活方式，不得不叫人羡慕。 当然，我在成都也不光是吃了，还是去了几个景点的，比如有武侯祠（虽然小时候爱看《三国演义》，但是对于同学关于武侯祠里为什么会有刘备墓的疑惑我也是不明所以），大熊猫基地的。另外什么锦里、宽窄巷子啦，说白了就是稍微有些文化气息的吃处。 就整个旅途而言，成都无疑是最为放松的一站，除了吃就是睡，走几步路好像都感觉挺累的，除非是找吃的，都有点赖着不想走了。 转眼间，就又写了一个城市了。其实虽然这么说，但是当时的感觉是很慢很慢的。而今回忆的时候，在即将完成对整个旅途的记忆的梳理之时，却突然想慢下来，好像之前的那些城市与我之间真的就是渐行渐远了。也许是在梳理的过程中，将之下意识地在记忆中封存了。虽然“封存”这个词用得有些过了，但确实感到那些日子离得远了，那种自由散漫同时对生活对人生充满疑惑，想试图寻找什么却又不知到底要寻找什么的不知所措也离得远了，不过倒也格外珍惜那段只属于自己一个人的时光。]]></content>
      <categories>
        <category>旅游</category>
      </categories>
  </entry>
  <entry>
    <title><![CDATA[第一次一个人出门远行（云南篇）]]></title>
    <url>%2F2015%2F06%2F14%2Fthe_first_yunnan%2F</url>
    <content type="text"><![CDATA[在云南的旅游路线是昆明——大理——丽江——香格里拉，然后在香格里拉乘坐提前一个月买好的打折机票飞去成都。 昆明从桂林到昆明需要20个小时的火车车程，幸好买到一张下铺的车票，另外我在广州同学那拷来的kindle版的《平凡的世界》让我轻松地消磨了时光。有人喜欢在旅途中就看旅行小说，可是我觉得那好没意思，这种书应该是在出门之前看的，一旦出了门你所有的见闻都应该来自你自身而非书中的引导。而《平凡的世界》则不同，他所描绘的是另外一个世界，是一个对当下我这般的年轻人很陌生的世界，他讲述了一个家庭的生存发展的故事，这与我在路上不断前行的事实貌似有那么一丝相通之处——无论好坏，都在往前走，有遗憾和茫然，但不止步。 这样的书在路上看起来我相信与在平时生活中看起来定会有大不相同的感受。 终于在第二天（3月30日）的中午12点左右抵达昆明，为了方便定的青旅（君安宾馆青旅部）就在火车站旁边，很容易就找到了。这儿的老板是一对青年情侣，记得好像是本地人，也许不是，反正挺是热情，水果饮料自取。当和几个室友及老板他们坐在沙发上看电影和闲聊时，感觉十分的温暖与自在，也由此我开始向出门独自旅行的朋友们建议找这般的家庭式的青旅，它会带给你家的感觉。 吃过饭，和同住这儿的驴友悠悠一同游玩滇池和西山。这个滇池的水很是浑浊，倒是与大多数城市公园里的湖水一般，可是却很反感，特别是一阵夹杂着腥味的风迎面吹来，不禁心中作呕，想必是桂林的山水惯坏了我的呼吸道。不过呢，这儿有不少人工饲养的海鸥，当有人喂食的时候，引得一群海鸥展翅飞翔从你沿跟前掠过，也算是一幅挺美的画面。 ![][1][1]: http://7xawfy.com1.z0.glb.clouddn.com/yunnan/yunnan%20(5).JPG?imageView2/2/h/800 随后沿着滇池的岸边走着，不一会儿看到有缆车通往西山，于是买了票上了西山。 这是一座很小的山，也无太多可开发的景点，因而就连路上的指示牌都是不多，不过我们七拐八绕还是到了山顶，有个观景亭，这儿能够俯视山下滇池附近的城市风貌，沐浴着春风和微暖的阳光，显然空气还不够干净，有些尘雾，否则应该看得更远些。 ![][2][2]: http://7xawfy.com1.z0.glb.clouddn.com/yunnan/yunnan%20(47).JPG?imageView2/2/h/800 在下西山的过程中结识了一位新的小伙伴，那是一位在北京打拼的内蒙古人，叫“凌峰”，他在昆明已经玩了近一周了。他提到还有个叫“西游洞”的地方据说还不错，正好明天可以一起过去，结果…… 第二天，我们住的青旅又来了两个小伙伴，于是相约第二天一行5个人去西游洞，去了才发现是个坑人的景点。这是一个打着“西游记拍摄地点”的幌子，稍微加工了一下不大的“溶洞”，便开始收起了门票。最坑人的莫过于开始进洞的时候，会有和尚递给你三根免费香，等你拜完就让你往功德箱里投钱，然后把你引到旁边坐着的和尚面前，他会在给你随意的看相和算命后把一个所谓“功德簿”翻到写着不低的捐钱金额的一页，让你多少意思下。有两位驴友猝不及防就中枪了，花了几十的冤枉钱。好在我们都未放在心上，其后在这儿的游玩的心情倒是没有受其影响，不过也没啥说的。 此处罢了已是中午时分，在吃过饭后，在我的建议下去了“西南联大旧址”。因为一直对这个民国时期由于战乱而使得三所名校——北大、清华、南开合并的学校心向往之，当时这所学校汇集了不少的学者、专家、教授。而我此行的最低目的就是拍摄那个后来复制的刻着“国立西南联合大学”八个字的校门。 ![][9][9]: http://7xawfy.com1.z0.glb.clouddn.com/yunnan/yunnan%20(79).JPG?imageView2/2/h/800 在这儿，我看到了给闻一多教授立的墓前摆放了新的花篮，让我想起了中山大学陈寅恪的塑像前同样有人赠送的鲜花，不禁心中掠过一丝感动。 ![][3][3]: http://7xawfy.com1.z0.glb.clouddn.com/yunnan/yunnan%20(81).JPG?imageView2/2/h/800 一位大学教授在去世几十年后所谓“道德沦丧”“礼崩乐坏”“不尊重知识分子”的今天，依然有人在默默地悼念着他，真是一份难得的人文情怀。可是想到我对于这么不起眼的小事都能称得上是一种感动，是不是又算是一种很大的悲哀呢？对此，悲观者和乐观者有不同的解释方向，没有对与错，只要是为了这个社会多添一点尊崇文化人的氛围都是好的。可是在网上，众网民干的好多是摧毁一切的事情，那里我们看不到任何的信任，也没有任何人和事情让我们敢于让我们相信。不过我们在说道网络的种种不好的时候，其实是在对此注入了更多的希望，希望是一个安静文明的地方。而事实上在现实社会仍然有诸多限制的今天，网络无疑成为了人们发泄和解闷的重要领地，那么由此我们期待它成为一个和谐的虚拟世界必然是徒劳的。其实这个世界应该容许有灰色甚至黑色的地带的存在，因为人性中本来就有正与邪，且一方不能完全战胜另一方。因而在容许灰暗地带存在的同时，更应该加大工作力度的是应该在国家层面对此进行立法监督，从而在制度上限制住，而不是一时一阵的活动小组式的打击行动。 想的有些远了，回到昆明吧。 晚上我们回到青旅，同凌峰、悠悠约好一起去大理。 大理我们在愚人节那天的早上7点钟到达大理站，在火车上睡过的一夜本该是疲劳的。可是此刻——开始精神上有点恍惚，作为一个宅男今天居然来到了郝云在“去大理”唱的地方。那种难以抑制的兴奋让我精神抖擞，即便在接下来的一个多小时里背着两个大包挤在公交里也是很快乐的。 还记得刚下公交，刚进古城的一刻，抬头看到前面不远的山上笼罩着雪白的云彩，简直美呆了。其实后来发现这样的蓝天白云在这儿再常见不过了，可是让我一直记忆犹新的就是那一瞬间的所见。 ![][4][4]: http://7xawfy.com1.z0.glb.clouddn.com/yunnan/yunnan%20(84).JPG?imageView2/2/h/800 在找到定下的青旅之后，在大理古城中优哉游哉，从这儿开始听到丽江小倩的《一瞬间》。好多卖手鼓的店里的老板都选择这首歌同时拍打着手鼓，看着他们悠闲自得的样子不像是在推销，可是后来发现他们是在单曲循环之后我就不得不佩服其敬业精神了。这首歌的名字我是回到上海百度后才知道的，原来这首歌在几年前就已经红遍丽江、大理了。不过一首歌这么一遍又一遍地听着不得不产生厌烦，而在我码这些文字的时候又单曲循环了这首歌，试图找回当时的感觉。 随后，我们出了古城去到附近的三塔寺，不用说，这儿的风景也是极美的。 ![][5][5]: http://7xawfy.com1.z0.glb.clouddn.com/yunnan/yunnan%20(102).JPG?imageView2/2/h/800 下午我们一同去了苍山，这个便是我刚来时抬头看见的山。而我们来的有些晚了，于是在山上走得比较匆忙，结果没想到山里的天气变化莫测，居然还下了十来分钟的冰雹，我也是醉了。随后我们更是加快步伐，虽然说走得很急，但是在上面可以看尽大理古城的风貌，甚至可以远眺洱海，也不算是枉来一趟了。 ![][6][6]: http://7xawfy.com1.z0.glb.clouddn.com/yunnan/yunnan%20(128).JPG?imageView2/2/h/800 随后的日子有些不太如意，因为在这天的晚上吃完饭后回到青旅，肚子不舒服，怎么也睡不着，最后弄得是上吐下泻。于是在早上起来后便没有和他们一起骑行洱海了，不过好像一个人的时候变得更加安静些了。 这是在大理的第二天，我于是待在青旅里，看看《平凡的世界》，和老板聊聊天，或是在古城里任性地走一走，其实也是挺美好的，还不用到处折腾。我开始有点理解了在昆明青旅中遇见的那个女生说她在丽江待了一周都没去什么景点，就在古城里转悠。在大理这家旅社同住的还有几个年轻人，不好好像大我几岁。看着他们在大厅里编织着一些小的工艺品，然后会拿出去在游客多的地方卖掉。听老板说他们已经来此一个多月了，不过不要小看他们那些工艺品，就算是摆地摊也能维持他们不错的生活。而在此之前有个小伙更是厉害，来到大理打了一个月工，便赚了两万，于是买了一辆摩托车骑行去了，这让我感觉有点“驾鹤西去”的意思。 这听起来不正是很多人所梦想和崇拜的生活方式吗？不过老板提及这些人的谋生能力都是很强的，能很快适应各种环境，不少人还是难以做到的。 以前看网上有这样的人存在时，更多想说的是：“我要是能像他们那样该多好，我也应该成为他们。”而在这里亲自听人说起真实的事情，我便会考虑将自己代入的可能性。首先你会想想自己有没有这样的谋生能力和勇气，而我认为能力是排在勇气前面的，光凭着一股之气可能会撞得头破血流，到头来还可能难以获取所希望的生活。不过要是你愿意承担这样的后果也不是不可以，只是我知道现在的自己是难以扛住这般的风险的。 另外还有个关键的问题——你是否真的就是喜欢这样的生活方式，如果不是那么就没有之前那么些个探讨了，可是要搞清这个问题，就得问问自己的内心了，而这也不是那么容易的事。 这时我不得不说自己是个lucky鹏了，我在从桂林去往昆明的火车上开始读《平凡的世界》，而这书中写得也正是平凡人的平凡生活，但是同样有不少精彩可以数点，而这平凡的生活貌似也正是符合我个人的性格特征的。无需大风大浪，即便是简单的柴米油盐，只要有颗热情不惜的心，照样能收获属于自己内心的那份精彩。关键是不用再去羡慕他人的生活方式，你要去努力的只是往自己希望的生活方式去经营好这便够了。 到这里，我终于发掘出了旅行与我的最大意义——给自己一个空白期，来弄清自己的内心真正的渴求，但无需苦苦的思索且这样也是徒劳的。有时候就是需要一个契机，让你醍醐灌顶、豁然开朗、如沐清风。 在身体不适的时候，内心却得到了一种极大的解脱和放松，不得不说也是很幸运的。 在晚上凌峰和悠悠回来后，我便一起买了去丽江的车票并且订了那边青旅的床位。就这样，再一起去丽江。 丽江到达丽江时是4月3日的中午12点左右，再转了两趟公交花了2个多小时之后终于找到了小良推荐的挺偏僻的背包十年青年客栈。 下午下着一点小雨，我们便只是在束河古镇里转悠，虽然说起来只是个古镇，但却感觉比大理古城要大很多，也许是更加精致的缘故吧，这里可以待得更久些。然后又听到了那熟悉的《一瞬间》的旋律，真是让人快受不了了。 这里值得一提的是这家青年旅社，是畅销书《背包十年》的作者小鹏创建的，详情请狂点此处。 在这里不出门就可以很舒服地度过一天，另外这儿比之北京时间有一个多小时的时差，所以早上10点起床也都不算很晚，这儿好多人都是这个点起来，然后慵懒地度过一天。我在这儿由于身体还没完全恢复，加上不想出去走动，于是就对凌峰和悠悠说：“你们去玩吧，我还不太舒服，就在这青旅里看看书算了。” 于是就这样，再次打开我的kindle，有看起了《平凡的世界》。我在咖啡厅寻了个靠窗户的座椅，刚好阳光能够晒进来一点，暖洋洋的，甚是惬意。这种感觉不禁让我怀念起了大三的时候，有那么两个多月时间就一个人带着一本书、一根笔、一个本子、一个茶杯坐在人少的西教学楼的教室里，一待就是一整天。在这里，我找回了全身心看书的感觉，于是看到动人处，居然哭了，不过至今也记不起是什么样的情节让我如此动容。好在当时身边没有什么人，否则真是尴尬哪。到此时，我毅然决定旅途结束后一定要买回纸质的书再看一遍。当然，现在我已经买回了，在看了。不过呢，貌似没有在路上看的时候那么带劲。也许是那种“读万卷书”和“行万里路”在同时穿插着进行的时候，才会有当时那特殊的情感迸发吧。 晚上，这儿搞起了露天烧烤，可惜肠胃不给力便放弃了，果断还是安静地看书吧。直到有些饿了才下楼出门买点零食回来享用，回来时看到一个胖子相拥着几个小伙伴，他们站在露天的平台上，拿着话筒说起了这几天认识的几位身边的好友却要在明天一早分离，讲了一番让人动容的告别之说，随后又合唱了《朋友》。此番情景，让人感动，我不禁想起了那句话—— 我们一直在努力地证明着自己可以独立，然后最终发现这路上也需要彼此依偎。 晚上，凌峰和悠悠告诉我，他们在明天一早即将离开这儿，而我后天将会一个人去往香格里拉。虽然之前便已知晓，可是在那一刻即将到来的时候还是挺难受的。说起来我们几个人在昆明认识，一起到大理，又来到丽江，也是挺难得的。此时要离去，虽然没有像台上那位胖子那般将情感流露出来，而是放在了心里。 原本是准备在明天一早去香格里拉的，可是昨天看天气预报的时候发现香格里拉的温度在10度以下，而且还有雨夹雪，而我在福州就将秋衣秋裤给丢了，正好这儿待着挺是舒服，于是又续了一晚。白天去市区里买了套廉价的保暖内衣，顺便看下古镇之外的丽江风光。 ![][7][7]: http://7xawfy.com1.z0.glb.clouddn.com/yunnan/yunnan%20(143).JPG?imageView2/2/h/800 如此这般，丽江中慵懒悠哉的三天的生活就要说再见了，不过我一定还会回来的，下一站——香格里拉。 香格里拉从丽江到香格里拉坐的是汽车，因为根本没有火车。我很纳闷，可是当我坐上了车子且以40km/h的均速在一边是山壁另一边则是山谷的山路上缓缓行进的时候才算明白，这样的路修起铁路无疑是困难重重。 大概花了4个小时的时间，在4月6日的下午4点多钟才终于到达迪庆的香格里拉市。这儿的人很少，气氛很是冷清。 第二天早上起床后在旅馆吃个早点便乘坐公交去附近的松赞林寺，这里人称“小布达拉宫”，是藏传佛教的圣地。在这儿，风景也是极美的。 ![][8][8]: http://7xawfy.com1.z0.glb.clouddn.com/yunnan/yunnan%20(166).JPG?imageView2/2/h/800 而对于此处的佛教的文化让我难忘的应该是一名当地的佛教徒作为一个旅游团的向导对他们解释松赞林寺相关的历史时的几句关于佛教的说法。他提到佛教其实就是一种生活方式，它要求我们要修身行善，多积功德，就是要关心他人、帮助他人。比如说在公交上主动给需要的人让座等等。这种对于佛教的定义让我对佛教有了更加直观的认识。而且他作为信徒还说到不管是否信教，只要心中存有助人之心，便无任何区别。这种包容的见识，让我对这位年轻的小伙刮目相看。 离开此地，便在独克宗古城里转了转，不过没什么看的，因为几年前的一场大火即使吞噬了这儿，大部分所见的房屋都是重新修建的。 就这样，香格里拉之旅就这样草草了事，虽然好多著名景点也没去到，倒是没有什么特别的遗憾。 告别云南云南之行，说起来不是太顺畅，中间还闹得肠胃感冒，不过心灵上好像跑到了更多的景点，得到了极大的放松。特别是在丽江，每天睡个懒觉，看看书，聊聊天，时光就那样悄悄溜走，太悠闲了。晚上就要乘坐飞机去成都了，那儿也有好久未见的同学，也是挺期待的。 拜拜了，云南，我一定会回来的！]]></content>
      <categories>
        <category>旅游</category>
      </categories>
  </entry>
  <entry>
    <title><![CDATA[第一次一个人出门远行（桂林篇）]]></title>
    <url>%2F2015%2F06%2F14%2Fthe_first_guilin%2F</url>
    <content type="text"><![CDATA[在写这些文章的时候我都是先在本子上随意写写，然后择取部分放在网上，而每次写到一个地方的时候，我总会在开头贴上去到这个地方的车票。这样的做法，让我每次都有一种重新走过的感觉，仿佛我就是从上一站来到了这一站。 抵达桂林是3月27号的凌晨4点钟左右，在车站看到老同学的那一刻，就是“他乡遇故知”的那份感觉。也不用操心这里行程的事了，只需用心地玩好这个地方就好，这份放松让人很是舒心。 来到桂林才惊异地发现，漓江是穿过桂林市区的，而且与桃花江、木龙湖（含铁佛塘）、桂湖、榕湖、杉湖共同构成了“两江四湖”的城市风景名片，走在这样的市区里，你会觉得这简直就是一个大的公园。而且由于这些水流都是互通的，这为泛舟其上带来了极大的乐趣，如果是在晚上的话，船只行进的路线上有刻意在迂回处建立的舞台，上面有当地风情的演出让人赏心悦目。 ![][1][1]: http://7xawfy.com1.z0.glb.clouddn.com/guilin/guilin%20(8).JPG?imageView2/2/h/800 不过我的行程安排就三天不到，于是就是上午围绕着两江四湖转转，在吃完了一份桂林米粉后便坐上汽车去往阳朔。听同学说在“桂林山水甲天下”的后面现代人附加了一句“阳朔山水甲桂林”，原因在于阳朔是桂林的一个县，其风光又是桂林之最。于是我们把重点放在阳朔。 到了阳朔，发现这儿比到桂林的人密集多了，才想起正好赶上了周五，人更加多些。 这里插一句题外话——在回忆这段旅程的时候，思绪发生了混乱，我记不清有些景点到底是在哪一天去的，最后有两种可能性在我脑海里进行取舍，可是都有可能属实，最后根据车票加携程上的青旅的订单详情才确定下来。所以赶紧码字吧，记忆会选择你认为最重要的进行深刻，而其他的则将淡去…… 下午到了阳朔之后，我在之前把青旅选在了西街，这是一条阳朔县城最为热闹的一条街道 房屋建筑古色古香，地方特色浓厚。荟萃各种旅游纪念品、小吃。其充满了异国情调的夜景更是风情万种，风俗浓郁。 阳朔西街又被戏称洋人街，已有1400多年的历史。西街至今仍是小家碧玉型的南方村镇建筑规模，但却显现着国际情调的人文景观。这里的酒吧、饭店、网吧、工艺品书画店等装修风格大多中西合璧，有外语招牌，给西街染上了一笔异域色彩。 阳朔西街是外国人在中国最密集的一条街，其涉外婚姻比例之高为全中国之最。旅游界专家称之为“中国旅游业中的阳朔现象。 在西街的每一个角落，会经常看到三五成群不同肤色的旅游者临街围坐在一起喝啤酒、品咖啡、嬉戏聊天，还有那不受当地计划生育限制的中国母亲和西欧国家的父亲，领着混血儿在街上玩耍。 西街是一条散发着浓郁的历史文化气息的古街。这里曾是孙中山先生演讲的地方，这里曾居住过艺术大师徐悲鸿先生，这里曾是一百五十多个国家，成百上千的总统、总理、首相、部长流连的地方，克林顿、尼克松、基辛格、撒切尔夫人、胡志明、西哈努克等等，不一而足。 游览西街完全是一种体验——浓浓的乡村氛围中流淌着纯正的小资情调，朴素的民风里包容着令人惊讶的国际元素，阳朔人爱吃的糍粑与米粉、正宗的意大利咖啡与西餐、古老的中国画、最前卫的休闲风尚、国语、英文、法语、意大利语乃至西班牙语……种种看似不可能的，全部糅合在长度不足1000米的岭南小街里。 中外游人川流不息，或购物，或观赏。街边餐馆的菜谱既有中式，也有西式。许多外国人围坐在此喝啤酒，品佳肴，兴致来时还要亲自下厨掌勺。这使西街成了名副其实的洋人街，它给阳朔小城增添了一道亮丽的风景。游人在这里可以尽情享受到小镇幽静的环境和独具情韵的休闲时光，体会浪漫的情调和异国的风情。 晚上同学他建议在漓江上乘坐竹筏游玩，不过由于较远交通不便于是选择了报团，在西街里就有各种旅行社承接这样的业务，很方便就定下了。早上我们到指定地点等车去往兴坪镇，那儿可以看到20元人民币的背景图。 不过我们乘坐的竹筏并非真正的竹筏，因为根本不是竹制的，而且动力是柴油机，“轰轰轰”的现代声音显得与所处的优美的山水画面格格不入。那天下了一点小雨，喀斯特地貌带来的最美的峰林在这儿被云雾环绕，更是有种置身仙境的感觉。途中，有些浅滩可以停驻，精明的商业人在这儿驯养了几匹马专供游客骑行拍照。不过我倒是没有太介意这个，因为踩在这鹅卵石上，随意地记录周围的风景，足矣让人心情愉悦。 ![][2]![][3][2]: http://7xawfy.com1.z0.glb.clouddn.com/guilin/guilin%20(33).JPG?imageView2/2/h/800[3]: http://7xawfy.com1.z0.glb.clouddn.com/guilin/guilin%20(47).JPG?imageView2/2/h/800 这里游罢，我们便回到阳朔县城，在青旅租了两辆自行车，开始骑行十里画廊。这一路上会经过很多的景点，有图腾古道、观音山、蝴蝶泉、鉴山寺、聚龙潭、金水岩、月亮山等。每到一个景点，将车子停下，可以选择买票游玩，然后继续骑行。月亮山算是骑行的最远之处，然后以沿另一条路返回，其中经过古老的村落，这里的环境格外安静，人也少了很多。在前面看到有一对老外，分别骑着双人自行车带着两个儿女，一路欢笑，让人感觉这家人的美好。再往前骑，经过了遇龙河，看到理想中的漂流的情景——有船夫撑着长杆，在安静的水面上缓慢地前行，加之两岸的风景在雨后的洗礼下显得格外明澈与动人，在这样的风景中不禁让人陶醉。我很后悔当初应该乘坐这种竹筏的，可是时间上已经来不及了。我只能说：“这又给了我再来的理由，下次一定要体验下这个‘遇龙河休闲漂流’。” 整个骑行差不多有五个小时吧，我们才回到阳朔县城，此间的逍遥让人流连其中，可是不得不说再见了。 桂林山水果然名不虚传，特别是那干净清澈的河水好像在脑海中只有小时候的家乡的小河才有的，可是这儿却随处可见，自然环境的保护在这儿做得非常不错。要是有机会的话，一定要再次来过。]]></content>
      <categories>
        <category>旅游</category>
      </categories>
  </entry>
  <entry>
    <title><![CDATA[第一次一个人出门远行（衡山篇）]]></title>
    <url>%2F2015%2F06%2F11%2Fthe_first_hengshan%2F</url>
    <content type="text"><![CDATA[不例外，到衡山住的也是一家青旅，叫OP国际青年旅社。对于动漫门外汉的我百度了下才知道“OP”原来是“海贼王”的意思，这儿的装饰也是以“海贼王”为主题，因为老板就是动漫爱好者。这儿的布置让我第一次感受到原来青年旅社可以这么温馨和舒适，除了廉价之外还能认识些驴友，否则一个人爬山真是件无聊的事情。 在这儿认识了三个小伙伴——一个人称“笑总”，是一个在河南读大学的湖北女孩，来湖南衡山的这家青旅做兼职一个月，赚个生活费，期间可以旅游一下，真是两全其美呢，这样的做法值得人羡慕，而我上大学的时候根本就没有想到；第二个是从佛山工作修了三天假来此旅游的小伙——奕迅，老是在旅行中摆出自鸣得意的pose，佩服他的自信；第三个就是和我一样情况（辞职旅游）的大哥——人称“小明”，看上去就知道去过不少地方了，后来去了尼泊尔还赶上了今年4·25地震，幸好最后安全回家。而我呢，由于在爬山的路上的时候就我一人带着单反（那位小明嫌下雨带着麻烦就没带了），因而被称为“单反哥”，也许是反讽了，不过还算中听。 我们在早上匆匆吃完早点后便进山了，一进山的感觉很清爽，雨后的空气没有了灰尘的阻碍，花草的味道径入肺中都怅然无阻，这儿是个天然的氧吧。一路上游客少得可怜，正好可以感受那份清静。 ![][1][1]: http://7xawfy.com1.z0.glb.clouddn.com/hengshan/hengshan%20(21).JPG?imageView2/2/h/800 和小伙伴们同行的时候时间总在不知不觉中溜走，忽然间，眼前小道的两旁都是花丛，可惜我都是叫不出名字的，让我们眼前一亮。对了，这是“花径”，之前有看过介绍，到此处我才算是感受到一点衡山的秀美之气。 ![][2][2]: http://7xawfy.com1.z0.glb.clouddn.com/hengshan/hengshan%20(28).JPG?imageView2/2/h/800 再往前走便下起雨来了，在山里本来就有些雾气，加上下着中雨，能见度不足10米，另外步行登山的指示牌不够明显，我们摸索着上山的道路。在前面我们遇见了两个湖南的姑娘，看着她们在左右张望，估计也是不确定上山的路径，看着我们一行人走来，貌似有些犹豫的神色变得放松，于是在逸迅的邀请下加入我们的队伍。她们其中一人原来已经来过几次了，只不过都没上最高峰，跟着我们这才上了祝融峰。 本来想着在峰顶能够俯视周边的风光，无奈下雨又起雾，我们像是被一团棉花云给包围住了，此时的能见度不超过3米，除了你附近的人啥也看不见，我们也就在匆匆留影后便下了山。 ![][3][3]: http://7xawfy.com1.z0.glb.clouddn.com/hengshan/hengshan%20(7).JPG?imageView2/2/h/800 一路上，幸好有各位驴友的相伴，否则这真是一场泡汤之旅。第一次和这些个不认识的朋友从初步接触到相约爬山在以前觉得是一件不易的事，可是在青年旅社却很稀松平常，在这里可以很轻松地和任何人交流，这时候人与人的距离好像很短。在后来的路上，我慢慢地明白——人在自我放松的时候心情会自然很好，这时候对于自己和他人的态度都是最好的。不用说很少有小矛盾，即使有人需要帮助，都愿意主动去帮助。由此可见一个放松的氛围对于人的影响之大，其实我们之间就差那一点的调剂，而这最好莫过于彼此之间源于放松的信任。回想起那种感觉就连此刻的我都会小感动一下。 有聚即有散，一天的衡山之旅拉近了陌生人之间的距离，转眼间便要各自离去，没有遗憾，前方依旧会有美丽的风景，那儿也值得你去感受。]]></content>
      <categories>
        <category>旅游</category>
      </categories>
  </entry>
  <entry>
    <title><![CDATA[第一次一个人出门远行（广州篇）]]></title>
    <url>%2F2015%2F06%2F10%2Fthe_first_guangzhou%2F</url>
    <content type="text"><![CDATA[中午和大学同学吃过饭后，他们就给我送上公交车，我开始踏上去往广州之路。每次看到这样的同学的告别，总有一种不舍，可是又为自己接下来的旅程感到激动，可是又想到后来还会有更多的告别，心情真是复杂。所以别小看那么一刻的挥手，它会在你心中升起一种仪式感——嗯，我要走了，以后呢？不知道，但我会记住这一刻的。 当我重新翻出这段车票的时候，算下日子，其实我在广州就待了两天不到，可是为什么我印象中在广州的同学宿舍起码住了三个晚上呢？这真是奇怪的感觉，可是车票不容置疑，只能是记忆出错了。不过仔细回忆下那两天的事情，好像真是就是两天而已，对，我记起来了。 到了广州，然后做地铁去找同学——华南农业大学，这是一所大且美的校园（细心的读者可能会发现，怎么哪里都有同学，是啊，我的同学分布比较广，后面还有很多哩,到哪儿都可以蹭吃蹭喝O(∩_∩)O）。 ![][1][1]: http://7xawfy.com1.z0.glb.clouddn.com/guangzhou/guangzhou%20(10).JPG?imageView2/2/h/800 在校园里走着，看着周围经过的同学，再看看自己，好像没啥区别，貌似找回了一点学生时代的感觉。可又在那一瞬间，又好像意识到自己已经不属于校园了。有时批评中国大学与社会的不接轨，但是真正到了社会又会怀念大学那美好的时光，更多的反而是对有这么一个阶段而无比怀念和珍惜。 晚上和老同学吃过饭后，去到小蛮腰（广州塔）附近以及欣赏珠江的风光。同样光鲜亮丽的高楼大厦，同时有水流从中间穿过，这格局和上海的黄浦江岸和香港的维多利亚湾附近如出一辙，但是各自又有自己的一些独特，都是现代城市的华丽风景线，无需过多阐述。 第二天，同学有事，我便自行百度广州的景点，然后手机地图指引交通路线前往，这也是我去到任何一个陌生城市的方案。我没有具体考虑丢失手机后该怎么办，因而我把手机看得很严实（此处没有转折，手机一路上都没有丢）。现在想来，也许我真的应该尝试下在某个地方不用手机的旅行，可是那真的是不方便，不过，不过我也不知道会有什么“不过”了。 我先去的沙面—— 沙面，曾称拾翠洲，因为是珠江冲积而成的沙洲，故名沙面。 沙面位于广东省广州市市区西南部，南濒珠江白鹅潭，北隔沙基涌，与六二三路相望的一个小岛，有大小街巷八条，面积0.3平方公里。 沙面在宋、元、明、清时期为中国国内外通商要津和游览地。鸦片战争后，在清咸丰十一年（1861年）后沦为英、法租界。 沙面是广州重要商埠，已被开发成国家5A级景区，是广州著名的旅游区、风景区和休闲胜地。 这儿数目茂密，诸多的欧式建筑保存得比较好且没有太多商业的影子。不过面积不大，一不小心就能走出去，可是走出去了你还想走回来，后来走得倦了，才离去。 ![][2][2]: http://7xawfy.com1.z0.glb.clouddn.com/guangzhou/guangzhou%20(15).JPG?imageView2/2/h/800 完了去到陈家祠，不想到了地图显示的位置却怎么也找不见，只看见一个被临时的墙体围起来的施工场所。难道是被拆了，我百度了下，居然真的是被拆了，可为啥百度旅游不更新呢，不过让人感慨的是如此的大建大拆真的也是“中国特色”吗。 话虽如此，我还是用手机继续看推荐的景点，这次我看中了“红专厂”，这是个文艺摄影爱好者必去的地方，想着自己好歹也带着单反，虽然用的是傻瓜模式，但也可以装装小文艺了吧，我也乐意其中的氛围且自我陶醉。 在这儿，我转悠了很久，拍了不少的照片，自我感觉挺不错，绝对是个练习摄影的好地方，关键是无需门票的，可以任性地拍你想拍的。看着那么多的摄影爱好者，有的人拍风景，有的人被拍成了风景，还有的人拍别人的风景被捕捉成了另一幅风景，而我，也成为了他们中的一员。 我只是加了一个滤镜就有如此的效果，不得不佩服自己的本事，其实还是选景不错啦。 晚上回我同学学校宿舍的时候很有意思，由于有点晚了，宿舍的大门关了，于是同学拿出早已准备好的软梯从二楼抛下，于是我就顺着爬上去了，三四米的高度也让我捏了一把汗，算是个有趣的经历吧。好好睡上一觉，明天就要一个人踏上去湖南衡山的征途，心中便充满复杂的感情——一如既往的对一下站的期待和离开此站的不舍，不过依然更多的是期待。 走起吧，少年！]]></content>
      <categories>
        <category>旅游</category>
      </categories>
  </entry>
  <entry>
    <title><![CDATA[第一次一个人出门远行（香港澳门篇）]]></title>
    <url>%2F2015%2F06%2F02%2Fthe_first_gangao%2F</url>
    <content type="text"><![CDATA[我是从厦门坐的动车到深圳，然后准备第二天和这儿的初中同学小良一起去香港。来到这才知道他也没有做攻略，于是我们在出发的前一天晚上才开始规划路线、订青旅、弄团签表送关。不过一切都是挺顺利，一家在尖沙咀附近的青旅还剩下最后两个床位被我们给订上了，团签送关也联系好了，剩下的就是好好休息，明天出境。 抵达香港后我购买了“一日通”的地铁卡，然后便搭乘着地铁去往尖沙咀，路上经过北区、大浦区、沙田区，这其中好多是农村的样子，经过一个多小时才到尖沙咀站。好不容易通过离线地图+指南针才找到青旅，后来发现绕了远路，放下行李后，我们去往小良提议的黄大仙庙。 ![][1][1]: http://7xawfy.com1.z0.glb.clouddn.com/gangao/gangao%20(5).JPG?imageView2/2/h/800 这儿的香火很是兴旺，我注意到一点很有意思——黄大仙庙说起来应该道教的地盘，但是却供奉着各路神仙，有药王、月老、观音、关帝等等。寸土寸金的香港就连神仙也是如此境遇，如果有灵的话他们作何感想呢？ 此处罢了，便搭着地铁去往紫荆广场，这儿有庆祝香港回归的纪念碑。可以看到维多利亚湾的风光以及对面的九龙岛，让我有种回到上海黄浦江岸的赶脚，然后搭乘只需几块港币的天星小轮去往九龙，在船上也同样是欣赏两岸的城市夜景。 ![][2][2]: http://7xawfy.com1.z0.glb.clouddn.com/gangao/gangao%20(42).JPG?imageView2/2/h/800 抵达九龙后，我们恰逢对岸进行的灯光秀，不过不算震撼。此外碰上了个阿卡贝拉音乐会，刚好有点儿累了，坐下来听着纯人声音乐还是挺舒心的。接着便沿着星光大道，看着一个个明星手印，想起这些名字背后的电影与音乐以及他们的故事。不禁让人感叹那（香港的七八十年代）究竟是一个什么样的时期，怎么会有那么多璀璨的明星以及相伴的影视剧、音乐等，我想找寻点什么，不过貌似没有什么收获。 如此这般便已接近晚上十点，便回去休息，第二天乘船从香港的港澳码头到澳门的外港码头。刚到这儿就伙同从珠海赶来的同学一起逛逛澳门，我们去了大三巴牌坊，这是澳门最大的商业区了。 ![][3][3]: http://7xawfy.com1.z0.glb.clouddn.com/gangao/gangao%20(69).JPG?imageView2/2/h/800 然后就去了澳门最大的赌场——葡京娱乐场，里面确实是豪华奢侈，兜里只揣着几百港元的我们没有好意思来换上筹码体验一番，就看着别人乐乐。由于时间较紧，便放弃了威尼斯人。想着虽然是遗憾，不过也有了下次再去的理由，这种感觉在后面的旅行的路上还有，而且有些可以算上是美丽的遗憾。 傍晚时分，我们从澳门的拱北口岸出关回到珠海，看着拥挤的公交、喧闹的人群，突然有一种很放松的感觉，也许是在境外还是有些神经紧张的，不过当时没有注意。珠海这个城市不大，经济上也只是个三线城市，不过临近海边，是个适宜居住的地方，当时大学就业之际就想来此地，可惜面试未通过。 晚上和这儿的另外两个同学（咱班上的一对）吃个饭，看个电影，相聚甚欢。在这里，看着他们要商量着买房、结婚等等以后的事情，我除了从心里祝福他们之外，貌似也理解了一点自己的内心。我一直在提的“旅行的意义”，其实不正是为了找寻适合自己的生活方式嘛。而照我以前徒加给自己的放荡不羁的内心特质，会将这种平稳得看到未来几十年的生活不屑一顾，可是此刻我犹豫了。因为当你真正面对着你所熟悉的人处于其中，凑近了距离看，会突然发现这也是一种美，而且美得很安静。 我对自己的顿悟颇感意外，难道我所向往的也就是如此平静的安乐日子？好像心中又有那么一丝不甘心，对！不甘心。不过没关系，我的旅程还很长，这才是出门的第9天（虽然感觉已经过了很久）呢。不甘心就继续前行吧，或许走着走着又遇上让你思考的事情，结果就想得更加明白，谁知道呢？]]></content>
      <categories>
        <category>旅游</category>
      </categories>
  </entry>
  <entry>
    <title><![CDATA[第一次一个人出门远行（厦门篇）]]></title>
    <url>%2F2015%2F05%2F31%2Fthe_first_xiamen%2F</url>
    <content type="text"><![CDATA[这几天写的有些密集，因为心中有些害怕，我怕时间再过得久些，我就忘得越多了，我怕太多美好的东西无法全部都沉淀下来。突然这么害怕也是让我自己感到意外，这也是患得患失还是不过为了让心有个安放之地，飘忽了那么久，或许是想有个停歇的地方吧。 其实我是对于文字的书写，比较擅长的恐怕还是议论、分析型的题材，这些题材只要你认真想过就会有东西可写。而对于这种生活记录型的文字，写着写着总有种记流水账的趋势，我没有华丽的辞藻让这种类型的文字看着生动些，除了配上那么几幅图片，有时候还真的不知道该咋办。但是图片不能太多，否则文字就显得过于单薄了，这毕竟还是一篇文章嘛，看图片有专门的途径（看厦门风景请狂点此处）啊。不过我还得接着往下写，各位感兴趣的就凑合着看吧。 3月18号中午左右到的厦门，帅哥开车来接我，然后请我吃的海鲜，味道挺不错，然后带我去已经订好的宾馆，并给了我旅游建议，然后才去上班。如此服务周到、细致让我感激、放松！又要开始我的个人旅行了。 厦门有岛内和岛外之分，这个岛指的就是厦门岛，岛内当然是主要景点的去处，此外就是鼓浪屿了，那是个在厦门岛西南边上的一个小岛，风景极佳。当时的地铁还未修建好，比较便捷的交通工具则是brt。 就是快速公交系统（Bus Rapid Transit），是一种介于快速轨道交通（Rapid Rail Transit，简称RRT）与常规公交（Normal Bus Transit，简称NBT）之间的新型公共客运系统，是一种中运量交通方式，通常也被人称作“地面上的地铁”。它是利用现代化公交技术配合智能交通和运营管理（集成调度系统），开辟公交专用道路和建造新式公交车站，实现轨道交通模式的运营服务，达到轻轨服务水准的一种独特的城市客运系统。 乘此去厦门大学，到门口发现流量已满，只有在17:00之后才不限流，于是沿着环岛公路去往海边。 刚看到海的时候很是激动，走近了，到沙滩上，沙子很软，索性脱了鞋子，沐浴着阳光与海风，一边走着，一边拍照。 ![][1][1]: http://7xawfy.com1.z0.glb.clouddn.com/xiamen/xiamen%20(7).JPG?imageView2/2/h/800 海边的风景甚美，视野开阔，让整个人的心畅游于海天之间，这就是自由吧。 ![][2][2]: http://7xawfy.com1.z0.glb.clouddn.com/xiamen/xiamen%20(21).JPG?imageView2/2/h/800 就这样沿着海滩，漫无目的、任性地走着，见着角度不错适合取景，便停下来用相机留住那一刻。看着放松嬉戏的大人、小孩，我心里也是非常之放松、开心。那边的阳光和天气都是极好的，上衣一件T恤刚好，好在是旅游淡季加上工作日，人并不多，也是欣赏纯景的好时候。 有时在旅途中，我会有一种奇怪的感觉——这是一个陌生的城市，你不属于此，但你正处于此，你与这座城市的关系仅仅是初次见面。那我属于哪？上海，工作都辞了，我是准备去北京找工作的（虽然最后还是回了上海，这是后话，暂且不提），上海也不属于我。那我属于老家吗？可是上了大学后在家里的时间加起来有一年吗？估计也就一年吧。想着想着我好像突然之间找不到归属之地，但是每到一个地方又感觉那一刻它就是我的归属，虽然可能明天就要离开这儿，而且一辈子都可能不再来，也可能是想到此而对去过的每一个地方产生了一种说不清道不明的特殊情感吧。 至于所谓的“归属”，我们喜欢将之与一个具体的地方联系在一起，这是我们的土地情节吗，我觉得应该是一种将看不见摸不着但又确实存在的内心情感附在实物上的一种方式吧。这个有点像人们对于膜拜的神仙鬼怪，一般都会为其塑身立像，然后再供奉拜求。不过有个例外的情况，那就是“上帝”一直是没有形象的，他（她/它）只能存在于人们的心中，这可能类似中国的“老天爷”吧，我就不展开说了（其实貌似也说不清╯□╰）。 刚刚思绪飘远了，回到沙滩上吧。看着已将近17:00点，便去到厦门大学。这确实是所美丽的大学，而此时背着书包的我，感觉自己也像是这所学校的一名学子，曾经在高中时得知厦门大学的数学系不错便有报考的愿望，可是学力不足，不过此刻也算是弥补了这个遗憾吧。 ![][3][3]: http://7xawfy.com1.z0.glb.clouddn.com/xiamen/xiamen%20(39).JPG?imageView2/2/h/800 第二天去的鼓浪屿，这是一个很小但却美丽的岛屿，岛上有些古老的的建筑，上面最高的是日光岩，可以俯视沙滩上的风光，亦可远望对面厦门岛的高楼大厦，不过那天的雨雾不小，看得不是那么清晰。 ![][4]![][5][4]: http://7xawfy.com1.z0.glb.clouddn.com/xiamen/xiamen%20(66).JPG?imageView2/2/h/800[5]: http://7xawfy.com1.z0.glb.clouddn.com/xiamen/xiamen%20(73).JPG?imageView2/2/h/800 整个厦门的旅行很不错，看了大海，吃了海鲜，有同学安顿，行程悠闲自得。下一站前往深圳，就要准备离开大陆，伙同小良去往香港了，想想就有点大激动。。。]]></content>
      <categories>
        <category>旅游</category>
      </categories>
  </entry>
  <entry>
    <title><![CDATA[第一次一个人出门远行（福州篇）]]></title>
    <url>%2F2015%2F05%2F29%2Fthe_first_fuzhou%2F</url>
    <content type="text"><![CDATA[刚到福州，那种灯红酒绿的城市夜景似乎有种让我与世隔绝甚久的感觉，看来我真的是被惯坏了，习惯了城市的生活和服务，在遇上了不同的环境之时的那种不适应开始浮现，只不过我还没有真正去面对它。 刚到福州的那晚，在美团上找的附近美食，挺是实惠。罢了便去医院看了下同学，他前两天才做完一个手术，不过问题不大，就是需要一段时间恢复。第二天早上起来的有些晚了，好在宾馆离我要去的“三坊七巷”不远，走过去也就二十来分钟。这儿算是来福州必去的地方之一，其中一条以旅游和美食为主打的南后街贯穿南北，这种商业街在各个城市看到的都没有啥的大区别。至于“三坊”、“七巷”就是几条有些历史的小巷子，且好多房子属于私人并未开放且大门紧闭。![][1][1]: http://7xawfy.com1.z0.glb.clouddn.com/fuzhou/fuzhou%20(9).JPG?imageView2/2/h/800因而我也就拍了几张照片就缓缓走过，看到手机地图上显示附近有个乌石山公园，便顺道逛逛吧。这个公园倒是给我留下了深刻的印象，里面遍布了古老粗大、盘根错节的大榕树，怪不得福州又称“榕城”了。在古树的面前，总会从心中升起一种历史的沧桑感，想象着它看尽多少的世间之事，人在它面前微不足道，可是依然有着我们自己的精彩。![][2]![][3][2]: http://7xawfy.com1.z0.glb.clouddn.com/fuzhou/fuzhou%20(27).JPG?imageView2/2/h/800[3]: http://7xawfy.com1.z0.glb.clouddn.com/fuzhou/fuzhou%20(32).JPG?imageView2/2/h/800此外，要说难忘之处，那可以说是福州美食“肉燕”，看百度的介绍—— 肉燕乍一看是皮包肉，实际它的皮大有讲究，是精选猪瘦肉，用木棒一锤锤“揍”成肉茸后，放入上等甘薯粉搅拌均匀精制而成，形似纸状，洁白光滑细润，散发出肉香，食时颇有燕窝风味，非常爽口，故被誉为肉燕皮。 这个味道确实不错，我吃完一份又叫了一份才算罢手。可是吃的太快，忘记了拍照，就不能展示给各位了。 另外，福州给我的印象就是真的跟合肥差不多，同样是省会，同样发展得不咋地，交通还挺拥挤。在福州（可能仅仅是我住的附近），自行车和电瓶车都会开到人行道上，这不是个别现象，而是路上有指示牌就让这些车开在人行道上，因为道路上没有自行车道，这让我走在人行道上很没有安全感。 在福州，好像没啥可说的了，也确实没啥，本来想着在最后附上景点门票，找了半天才想起来当时就没有去啥景点，因为没啥去的。 虽然话说如此，但是毕竟是我旅行中的一站，在即将离它而去奔赴厦门之时，同样有在雁荡山的那种不舍，不过更多的是对下一站的期待——上次看山，下次看海，听上去还不错的样子嘛！]]></content>
      <categories>
        <category>旅游</category>
      </categories>
  </entry>
  <entry>
    <title><![CDATA[第一次一个人出门远行（雁荡山篇）]]></title>
    <url>%2F2015%2F05%2F27%2Fthe_first_yandangshan%2F</url>
    <content type="text"><![CDATA[第一次知道雁荡山，是看到同学的一张照片上，背景有“断肠崖”三个字，一问之下原来是在雁荡山的卧龙谷景区，本着对《神雕侠侣》的爱好，便想去看看。 此次旅行之前，我在网上了解了下，这个景点已经关闭了，原因是多起游客救援事件（甚至有为情所困而来自杀的）导致。不过还是决定去看看，原因有三：一在于雁荡山是所谓的“三山五岳”之一，想着有机会的话全部能去到还是挺不错的；二在于从乌镇去福州的火车，也是正好经过雁荡山，所以不会走弯路；三在于那儿没有任何熟人，这是第一次自我锻炼的机会，想体验一番。 到那之时，整座山的气势带给我的感觉还是有点震撼的，下面有图为证——![][1][1]: http://7xawfy.com1.z0.glb.clouddn.com/yandangshan/yandangshan%20(19).JPG?imageView2/2/h/800 更多图片，请狂点此处！ 在雁荡山的时间很短，也没啥可说的，下面的文字来自当天中午在候车室里无聊地等待去往福州的时候写的，就是记一记流水账—— 此刻是3月16日中午12点半刚过，离火车到站还有两个多小时，闲来无事便动起了笔。昨天从乌镇赶到雁荡山，仍是大雨不停，找到一家旅馆叫“秀峰楼”（实在不好找，问了好几个人），这里的好多宾馆都是当地人开的，同时居家生活，老板比较随和。今天一早，赶到大龙湫，门票50元，要不是拍照估计不到1小时就能出来了。印象较深的还是这儿雨后清晨的空气吧，吸入鼻中神清气爽。紧接着奔赴雁荡山三绝（大龙湫、灵岩、灵峰）中的灵岩，门票同样50元，进去之后很失望，莲花洞被封了，卧龙谷也果真上不去，只好去了下小龙湫。要真的要挑个有啥看头的话，那也就是在山顶的飞渡表演了，他们会从一座峰顶攀爬着绳索通往旁边一座相隔100米左右的峰顶，比较有意思的是他们的表演节奏和广播里播放里早已录制好的解说很吻合，看来他们已经重复过无数次了。此外本打算去一去灵峰看看的，想想这两绝的时候，还是觉得算了吧，也就如此匆匆结束了雁荡山之旅。 这幅图片就是飞渡表演——![][2][2]: http://7xawfy.com1.z0.glb.clouddn.com/yandangshan/yandangshan%20(44).JPG?imageView2/2/h/800 整体说来，雁荡山的环境还是不错的，虽然没啥看头，不过心态总是好的。想着还有那么多时间可花，那么多地方可去，下一站又可以见到老同学，心中就无比开心、激动，这点不快即烟消云散了，况且想着以后也不会再来，倒是有那么一种不舍了…… 附门票：]]></content>
      <categories>
        <category>旅游</category>
      </categories>
  </entry>
  <entry>
    <title><![CDATA[第一次一个人出门远行（乌镇篇）]]></title>
    <url>%2F2015%2F05%2F24%2Fthe_first_wuzhen%2F</url>
    <content type="text"><![CDATA[其实一开始是想着详细地记录下旅行中的一点一滴，当然刚开始的几天我也确实是这么干的，可是玩着玩着，特别是在有些疲倦的时候，觉得记流水账般地写下来有些难受甚至做作，便中断了。 敢于中断、断定自己不会后悔没有及时记录的原因在于有照片帮助回忆，同时时间的沉淀容易让我更深层次地总结当时不经意的细节所反映的内心世界。 当然，时间一久，这些回忆可能会变得有些模糊，而太近容易让人看不清，可能此刻正是一个最好的机会，那么就此开启回忆吧—— 在出发之前，我对乌镇和雁荡山两站还是做了一点攻略的。对于乌镇，景点主要分东栅和西栅，其中东栅较小，不到半天便可游完，主要看点在西栅。所以当时我们的行程就是在第一天的中午到达乌镇，下午逛东栅，完了去往西栅，晚上看看夜景，住在西栅景区内，第二天上午再稍微逛下西栅就差不多了。 当时是和两个同在上海的初中同学加一个同事一起去的，还算是挺热闹的。想来也是作为一个人旅行的过渡阶段，挺好的就，而且晚上还可以一起去去酒吧之类的，提升一下那虚妄的逼格，其实就是找个不错的环境闲聊罢了。 下面的只放两张图片，一张是白天的，一张是夜景，欣赏更多美景请狂点此处。 ![][1]![][2][1]: http://7xawfy.com1.z0.glb.clouddn.com/wuzhen/wuzhen%20(3).JPG?imageView2/2/h/800[2]: http://7xawfy.com1.z0.glb.clouddn.com/wuzhen/wuzhen%20(37).JPG?imageView2/2/h/800 至于第二张照片怎么如此这般的梦幻，其实我也不知道为啥，也许是我第一次用单反的缘故，真心是个小白用户（what are you 弄啥咧 O(∩_∩)O）。 说实话，古镇还是商业化挺重的，但是细想下，如果不是这般的商业化到位的话，那么由此可想到的不便的交通和落后的服务业给在大城市惯坏的我们来说，还不知是一份享受还是难受呢？ 另外说来我又不是一个纯正的文艺青年（其实常自称“资深的技术文艺装逼控”），来寻找所谓的古朴、典雅的气息，但是这儿幽静（特别是清晨）、散漫的气氛就让自己一下子从大上海的忙乱中得到了极大的放松，这本身便是受益不小了，旅行的一部分意义不正在此吗？不过这得缘于我本身就未抱有什么样的期待，而还是以一种婴儿的眼光好奇地看待一个个从未去到过的地方，这样的角度会让我每到一个地方就兴奋不已，迫不及待从一点一滴地去认识她，可往往还没看够，就得去到下一个地方。有遗憾但同时保留着精彩的回忆，况且遗憾本身就包含了一种缺憾之美，往往这种美的力量更深入人心，容易让人在安静独处的夜晚不时地想起，不能说是一种安慰，因为每个人生阶段都会有各自的苦与乐且是当下最真实的。因此这回忆更像是一段和自己的对话—— 瞧，那就是当时的你，多么真实而可爱！现在依然如此啊。哈哈，不一样的真实和可爱吧。是因为年龄还是阅历呢，或者是……嗯，反正都是挺美好的。 这番心灵鸡汤似的对白不免让人恶心，可是你不能否认它，因为这份鸡汤就是你亲手熬制的，它的美味来自于你用心的小火慢炖，这到最后的下肚应该不是一蹴而就的。不过如果真的很顺利的话，也算不得什么坏事吧，人不应该刻意去吃苦吧，不需要那般的苦难崇拜也能收获平淡而幸福的人生吧？ 写到此处，有些讶异，说好的只是写游记，为啥平添了这么多的“感悟”呢？算了，还是不要去纠结这其中的思绪变迁了。 总之，乌镇之旅和3个小伙伴愉快地度过了，后面的路就只有我一个人行走了，想起来就无比激动，因为这种由未知带来种种可能性给我传递的无限遐想而至的期待与兴奋是以前从未体验过的。 可是真的只有兴奋吗？恐怕不见得，预知后事如何，请听下回分解…… 附门票：]]></content>
      <categories>
        <category>旅游</category>
      </categories>
  </entry>
  <entry>
    <title><![CDATA[第一次一个人出门远行（写在前面）]]></title>
    <url>%2F2015%2F05%2F17%2Fthe_first_foreword%2F</url>
    <content type="text"><![CDATA[看着博客里的最后一篇的文章还是在我出门旅游前写的，如今却又在电脑前回顾这次的旅游经历，真是一种很美妙的感觉——感觉上一时刻的我是那样的我，而此时又是这样一个我，而同时却可以在文字上进行对话，让人有一种穿越的错觉。 记得在出发前，有很多人对于我的辞职感到疑惑，为什么呢？而我的一致回答都是“去北京，那儿有更多的IT公司，有着更多的机会，而且充满挑战，也还有很多的同学”。可是在这路上走着走着，我却发现这其实是一种托辞，是一种内心渴望有这么一个完全由自己掌握和定义自己生活和人生的的机会但却又因为心智的不成熟而难以为此作解释的借口。有时想想，自己转了一圈又回到最初出发的地方，住的地方换在了之前隔壁的小区，而新公司就在以前公司的隔壁一栋楼，抛去其中的细节只想想这其中的对比真是容易让人感叹命运的巧合。 下面真正开始做一番开篇性的说法吧—— 时至今日，终于得以这闲暇来对之前长达42天的旅行做一梳理和总结了。面对这一路上积攒的车票、门票等等，加上脑海中对此的诸多记忆，总是有种提起来就兴奋的感觉。 说是添了不少个人的故事感确实如此，在这个倡导自由、追求自由的社会，这种经历无疑是符合大众审美的，也给自己与他人之间多了一份有料的诉说题材，这对于不善于谈话的我给予了极大的鼓舞。这是对于此次旅行最直接且可以看得见的回报。 再说是开了不少的眼界也是不假。首先以前至于中国的地图、省份的划分等地理概念都是不具体的，通过这次的亲历至少让我感受到其实咱中国还是蛮大的。然后呢，这一路上认识的朋友中辞职旅行的人比例上不在少数，甚至有的人就拿此当职业。乍一听说这样的人和事不禁产生无比的羡慕和佩服，可是只有在于他们接触、了解他们经历的一些细节之后，你才会去重新衡量自己身上的一些东西（这包括个人性格，家庭等因素），也才有可能发现自己可能永远也成为不了他们，不过也可能永远也不需要成为他们，而同时你才可能发现自己究竟需要怎样的生活，也因此不会在虚无边际地去羡慕他人的种种。 那要再说有什么感受的话，就是觉得整个人变得“轻”了。这个“轻”不光说是这趟旅行让我瘦了5斤（一直就想长点肉，结果却……算了，不说了，心塞），更重要的是发现其实好多事情比你想象得要简单的多。就拿这次旅行来说，之前做了好多的准备，考虑到各种麻烦、紧急的情况，也正是如此导致我旅行的计划从刚开始萌发到真正实现竟然拖了几乎一年的时间。但事实上在整个旅行中都是很顺利的，也许是运气好，也许是我的行为路线比较保守因而规避了一些潜在的风险。但不管怎么说，让我对于看待事物的认识程度上有了改变。另外说到“轻”就是感觉自己体力增强了，这当然与我在旅行前的坚持跑步有关，更机缘巧合的是在西安城墙上居然参加了5公里的跑步比赛，算是检验了自己的身体素质，给了自己很大信心。我也从此爱上了跑步，于是老是想起上海地铁里经常出现的公益标语“路，用以跋涉、前行，把困难甩在身后，我是决心”。其实我们遇见的大部分困难都没啥，只不过加上了陌生和恐惧便放大了。 如果还要说说的话，我感觉真的还有不少，不过都比较零碎，难以总结概括，待我在接下来的关于一个个城市的详细经历的介绍中慢慢诉说吧。 先附上此次旅行的路线(地图截得不好)及车程吧—— 以下是整个旅行的系列文章：第一次一个人出门远行（乌镇篇）第一次一个人出门远行（雁荡山篇）第一次一个人出门远行（福州篇）第一次一个人出门远行（厦门篇）第一次一个人出门远行（香港澳门篇）第一次一个人出门远行（广州篇）第一次一个人出门远行（衡山篇）第一次一个人出门远行（桂林篇）第一次一个人出门远行（云南篇）第一次一个人出门远行（成都篇）第一次一个人出门远行（西安篇）第一次一个人出门远行（华山篇）第一次一个人出门远行（北京篇）第一次一个人出门远行（写在后面）]]></content>
      <categories>
        <category>旅游</category>
      </categories>
  </entry>
  <entry>
    <title><![CDATA[十八岁之旅]]></title>
    <url>%2F2015%2F03%2F10%2Fjourney_in_18%2F</url>
    <content type="text"><![CDATA[还有几天就要踏上我的旅程了，最近这段时间想了很多，为了是自己不再犹豫，便定下了这个期限。一旦日子确定，心里会平静不少，一心一意地位子做好各种物质准备工作。 其实我一直在思考旅行的意义，想象着在一个陌生的地方心里会是什么样的状态，当看到网上的照片在眼前成为可触摸的事物有会在脑海里浮现出什么，会遇到什么样的人，会有什么样的遭遇。是会为了赶着计划中的班车而仓皇奔走，还是无所顾忌地游荡却只因为心灵没有跟上眼睛和脚步的节奏，需要缓一缓呢？ 对于旅行我做了不少可能性的想象，当然也会偶尔冷静地告诉自己，其实可能会平淡，看一下，走几步，拍张照，写几个字，证明你来过，完了。想到此，我也接受了这样的可能性，这一切在于机缘。 然而，我并不放弃，继续追寻旅行对于我个人的独特意义。有熟悉的小伙伴的陪同当然会平添不少换取，重要在于互相影响。一个人的旅行，我认为是一种成长。在十八岁的时候我没有机会迸发此念头更无可能实现，如今我有此想法而且即将实现，我觉得我现在就是十八岁，希望在旅行的路上稍微有点发现，哪怕只是多一份后来的谈资，我便已觉得很幸运了。]]></content>
      <categories>
        <category>随笔</category>
      </categories>
  </entry>
  <entry>
    <title><![CDATA[你知道怎么还不去做]]></title>
    <url>%2F2015%2F03%2F05%2Fknow2do%2F</url>
    <content type="text"><![CDATA[非常遗憾和羞愧，当我写下《不再“每日一篇”了》的时候，事实上日记也几乎没写了。更加遗憾和羞愧的是，到现在我才来写下这篇文章来进行反思。 当然，这里有几方面的客观原因，主要是关于离职和旅游的事情。为了去旅游这件大事，我做了不少的铺垫，连个人主页都改头换面了，还特意做了一个旅游的网站用于展示旅途中的那些风景，为的是增添一份意义感，多一份回忆和说法而已。这件事情耗费了我不少的时间和精力。另外关于离职这件小事一直考虑很久了，却总是没有下定决心。一方面我不是个善于决断的人，另一方面我没想好是否应该出去好好玩一趟。另外，这样子离职出去玩的话是不是看起来太仍性了，放着年轻的大好时光不拼搏事业而去享受是不是一种不负责任的态度。等等之类的想法占据了我不少的思维空间而不得脱身。 虽然上面的原因能够结实我没有写长文的缘故，可依然说服不了自己为什么连随手可写且无字数约束的日记都没有坚持。要追寻内心这个问题可不是件容易的事情，虽然我已经放下了把自己当做意志力坚定的人的念头，而要真正弄清楚确属不易。首先，写日记的任务我每天都记得很清楚而且不止一次的提醒自己，可是总能轻松潇洒地抛在身后，但就那一瞬间总能隐约感到来自心底的我一个鄙视的眼神，而我不敢正视。次数一多，貌似都懒得鄙视了，但今天就在此刻，他自信地看了自己一眼，笑着表示其实我还是我，但他没有回应，好像在说，让时间来验证你的说法吧。 挖掘自己，真的很累很难，也只能到此止步了，只能期待以后每次提醒自己的时候不要忽略自己的感受，同时抬着头自信地盯着他，不是说“我知道”而是说“我正在做了”。]]></content>
      <categories>
        <category>随笔</category>
      </categories>
  </entry>
  <entry>
    <title><![CDATA[电影《The Hunger Game》第三部插曲]]></title>
    <url>%2F2015%2F02%2F08%2Fa_folk_in_movie_of_the_hunger_game%2F</url>
    <content type="text"><![CDATA[这首由詹妮弗·劳伦斯亲自唱的民谣（The Hanging Tree），在电影院里看的时候，配合着反抗的主题，让人在感到一丝悲凉的同时，激起心中无限的力量与他（她）为了反抗的对象，愿意一起赴死对抗到底。 曲罢，心中的万丈激情渐渐褪去，更加感到悲凉的是代入集体反抗的同时我丢失了自己，要想找回就要重新回归大众，这是一条无归之路。Katniss在我看来却一直保持着自己与大众的距离，不知接下来的命运如何。 Are you, are youComing to the treeThey strung up a manThey say who murdered threeStrange things did happen hereNo stranger would it beIf we met at midnightIn the hanging tree Are you, are youComing to the treeWhere dead man called outFor his love to fleeStrange things did happen hereNo stranger would it beIf we met at midnightIn the hanging tree Are you, are youComing to the treeWhere I told you to runSo we’d both be freeStrange things did happen hereNo stranger would it beIf we met at midnightIn the hanging tree Are you, are youComing to the treeWear a necklace of ropeSide by side with meStrange things did happen hereNo stranger would it beIf we met at midnightIn the hanging tree Are you, are youComing to the treeWhere I told you to runSo we’d both be freeStrange things did happen hereNo stranger would it beIf we met at midnightIn the hanging tree Are you, are youComing to the treeThey strung up a manThey say who murdered threeStrange things did happen hereNo stranger would it beIf we met at midnightIn the hanging tree Are you, are youComing to the treeWhere dead man called outFor his love to fleeStrange things did happen hereNo stranger would it beIf we met at midnightIn the hanging tree]]></content>
      <categories>
        <category>电影</category>
      </categories>
      <tags>
        <tag>电影</tag>
        <tag>民谣</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[2014年是非多]]></title>
    <url>%2F2015%2F01%2F06%2Fmore_yn_in_2014%2F</url>
    <content type="text"><![CDATA[都说2014年是个流年，是非很多。窦文涛说到这里就老是拿身边朋友的说法表明有着同样想法的人不在少数。 确实，2014年，以新闻事件上看是有不少的大事件，而且好多在人类看来有某种关联，而这种关联难以用科学解释，最具代表的就是不断出事的马来西亚的航班。就在一年的最后一天，无数人正要在外滩欢庆新年的时候却出现了踩踏事件，真是让人唏嘘不已。 除了这些难以捉摸的巧合之外，我们还是可以解释部分东西的。 首先，对于这一年的事件多发，这是人们的感觉。我习惯于从这个“感觉”出发开始思考。 感觉不会凭空产生，一定是来自外界信息的刺激加上自身的感知能力。前者毫无疑问，决定于我们所接触的媒介。在互联网愈来愈普及和便捷的今天，信息的传递比以往更容易，这意味着在这世界上任何一个有人能触及的地方发生了一个时间便可以在极短的时间内传到世界上任何一个角落。后者我们可以拿“马航”来举例说明，当我们第一次听到马航的失踪事件，当然十分震惊，但随时间一过我们便倾向于同以往的各种离奇事件一样而淡忘。可是随后又来一次“马航”被击落，就在人们还在为此巧合感到神奇之时，有出现了亚航的事故，三者由“马来西亚航空公司”而联系在一起。三个事件的陆续上演，让我们在脑海里加深了对着几个字的印象，同时在反复出现。我们很难将它们看成是孤立的事件，而是倾向于感觉其中有某种联系，虽然可能理性告诉自己只是巧合罢了。 第二，除了感觉上加强之外，不得不说当今社会的事故的发生确实应该会增大，原因主要有两点。首先人口增多且各种观念并存，助长了不确定事件的可能性。其次是大自然的报复，这里我要强调的是人类对自然环境的破坏以及对自然了解的程度远远不够对其的控制程度，这增加了自然的不确定性。二者加在一起势必会导致事件的多发。 在面对愈演愈频繁的事件背后，我们最关心的当然是自身的安危。虽然有好多幸存者的例子都表明他们的运气大于逃生本领，可是我们面对“运气”这个不确定的玩意，还是好好修炼自己的逃生本领吧。]]></content>
      <categories>
        <category>杂说</category>
      </categories>
  </entry>
  <entry>
    <title><![CDATA[不再“每日一篇”了]]></title>
    <url>%2F2015%2F01%2F04%2Fno_more_a_piece_every_day%2F</url>
    <content type="text"><![CDATA[今天用为知笔记写日记的时候，发现目录下已经跨有3个年份了，从2013年11月开始，到今日为止已经记下了300余篇的日记，这让我甚为自豪。 此外，在今年的7月份我开设了个人博客网站，便开始坚持每天一篇文章，在保证数量的同时我还尽量做到质量（可读性还行）对得住自己，其中不乏艰难反复之时，但依旧坚持前行。 可是，我慢慢发现，由于每日同时要记日记和写一篇文章，不免在内容选择上有时有点矛盾。比如说发生了一件事情，不知记在哪上面比较好，同时两头要兼顾好的话容易造成“搏二兔而不得一兔”的结果。因此，实际上这半年的好多日记就那么几十个字甚至十来个字便仓促结束，这样自己回头看的时候便感缺少记录的后期价值。 鉴于目前已经养成的文字记录习惯，我决定放弃对于博客文章的“每日一篇”的硬性要求。对于不便拿出来讨论的照样写在日记里，同时由于少了一份自己定下的要求的压力，会更好地记录日记。而对于有感想但难以凑成一篇完整的文章时，就做好记录，待时机成熟再整理成一篇文章。此外，这虽然意味着在博客文章数量会下降一点，但是因为少了这份压力，以后的文章应该是更多见长文章了。 总之，在养成了记录的习惯之后，不要让记录成为压力，而是要转化为兴趣与动力。]]></content>
      <categories>
        <category>随笔</category>
      </categories>
      <tags>
        <tag>书写</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[看上海迎新年的踩踏事件]]></title>
    <url>%2F2015%2F01%2F02%2Fin_shanghai%2F</url>
    <content type="text"><![CDATA[新年的第一天，没想到被妈妈打来的电话吵醒，原来昨晚在外滩发生了踩踏事件，妈妈担心我有没有去，让我震惊的是死伤如此之多，不由得倒吸一口冷气。 看下新闻，原来外滩这里已经举行了3年的大规模的灯光秀和倒计时活动，不过今年提前更改了地点，但是仍然有不少人们自发前往庆祝新年，他们拥挤在南京东路和中山东一路交叉口附近，并最终在23:35左右在几个点上相继有人摔倒，可是人是在太多，一旦乱了很难控制，从而导致了悲剧的发生。 除了为死者默哀之外，我们更应该思考原因—— 人实在太多人多的背后是这个城市已经严重过载了，城市化使得大量的人们涌入大城市，而农村和小城镇的资源的匮乏使得人群难以回流。人们平日里在大城市为了生计而拼搏，而缺乏丰富的娱乐活动，一旦节假日打着放松减压的念头，同时本身对于娱乐并无以个人兴趣为基础的活动圈子。那么必将大量涌入看起来最为吸引人、最热闹、最出名的地方，可想而知这些地方的人流压力将会多大。 缺乏安全意识和灾难应对本领中国人怕的往往是冷清、寂寞，喜欢的是趋同、人多、热闹，却难以提醒自身人多的隐患。近年来的踩踏事件并不少见，网上一搜便是一堆，可是又有多少人联系到自身所处的环境。另外，从小的教育在于理论，即使安全教育也是如此，缺乏大量的实际演练，使得我们在灾难来临之际手足无措，在人多时这种危害性会成倍地扩大。 我所看到的最主要原因就是以上两条，至于有人指责政府部门的管理力度不够，这无可厚非，他们永远有提升的空间。另外有些细节也是值得关注的，有人在楼上抛洒类似美元的优惠券（后来警方证实与事件无关），这是否就是事件的一个诱因或者说是加大了事件的严重性呢？灯光秀在此前10天左右有新闻报道地点改到外滩源（跟外滩不在同一地点，有不少人混淆了），而且是凭票入场。这是宣传的力度不够还是人们的关注不够？等等，这些细节的因素都是给人群往灾难事件的方向上推了一步，也应该引起部分的注意。 总之，事件已经发生，政府能够的就是善后工作和更加严密周到的大规模活动的管理方案。对我们来说能做的是加强安全意识和了解学习特殊情况下的自救和力所能及的他救。]]></content>
      <categories>
        <category>杂说</category>
      </categories>
      <tags>
        <tag>事件</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[仅记录就好]]></title>
    <url>%2F2014%2F12%2F30%2Fjust_record%2F</url>
    <content type="text"><![CDATA[蒋方舟说“记录本身，即已是反抗”，指的是那些用笔对一些不满的现实进行记录，看起来无甚杀伤力，可已是带有反抗的色彩，因为他们没有屈从之。 想象中有精神气概的文字工作者们大抵是这类人吧，我也曾想过成为这样的人。可是当我后来想到当“反抗”的对象不再存在或者被发现原本就没有，那么该是一番如何的境地。我估计有点像是找了一辈子的杀父仇人最后发现父亲的死与他无关，该是无尽的空虚与无可适从啊。 想到此处，我隐隐感到文字背后的力量孕育着一股邪气，而这邪气来自于自身的想象。对于记录，仅仅记录就好，用不着徒加更多的抗争。]]></content>
      <categories>
        <category>随笔</category>
      </categories>
      <tags>
        <tag>书写</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[见到了自己]]></title>
    <url>%2F2014%2F12%2F27%2Fsee-you%2F</url>
    <content type="text"><![CDATA[我拿起一面镜子里面只有身后的背景却没有我原来那是一张画而里面没有我的故事 我站在窗玻璃前除了自己什么也没有或许是外面太黑还是忽视了什么 将这些镜子玻璃啥的全部打碎在收拾碎玻璃的时候我看到了无数个自己好像曾经在那里见过]]></content>
      <categories>
        <category>随笔</category>
      </categories>
  </entry>
  <entry>
    <title><![CDATA[如果当下有不满，就活在明天吗]]></title>
    <url>%2F2014%2F12%2F26%2Ftomorrow-or-today%2F</url>
    <content type="text"><![CDATA[很多时候，难免心中不少纠葛，可能是想做现在无法做到的什么，抑或是不想做现在能够做到的什么。 在今天的社会里，我们习惯于把自己的目标定得很高，感觉好像如果不看得那么高就会低人一等。之所以害怕低人一等，是因为你本来在物质、知识、能力等方面就不是和人家平等的，而你又同时拒绝承认这个现实。那么最好的方法就是把它看作只是一个短时期的状态而已，你所期待的是未来的你达到目前期待的水平。而当下的不满就摆在眼前，你又不得不告诉自己这是真实的。 一方面你基于摆脱现状，另一方面现状难以摆脱。看起来好像很简单，就是现实与梦想的矛盾。一旦这样想，你会有所安慰，同时对自己说：“看远一点吧，不要执着于当下。”过了一段时间，你还是会发现这样的内心纠葛就像是一个恶魔般不时地来看望你，你此时还是拿起上次推开他的武器吗？可是，他好像跟你有一根软绳在连着，你再怎么用力推他，他也只是最多离你稍远一点，就再无能为力了。此时你还可能会给自己一个解释：“为什么我这么不够坚定，这么小气？未来是美好的啊，眼前的种种不完美只是一时的，闭着眼睛一会儿就过去了。”可结果，周而复返，你已经不知历经多少次的“闭眼——睁眼——闭眼——睁眼”，但是世界好像静止了，你还在这里，还是以前那样。 最后，你快绝望了，可还是看着远方，你会看到希望，你对自己说：“我还可以坚持下去，不管未来的路多难走！”听完自己这样一番壮烈的独白，想想都激动，甚至都被自己感动哭了。然后你又擦干泪水继续前进。前方的路依然是崎岖不平，但你心中好像同时也在说：“我已经历经太多的纠葛，我不在害怕，哪里跌倒就要从哪里爬起，甚至还有跳起来，我就不信了！” 这样一路走来，真心很累，可是依然在强迫自己扮演一个硬汉，其实是自导自演，同时还充当观众不时地叫好。走着走着，偶尔一次停下来，你才突然发现虽然你看的很远，前方却并未有一块清晰的“终点”的标志牌，那么你又该何去何从呢？ 把视线从紧盯着远方拉回来，看看左右，原来走的是一条只有指向未来方向的路，其实横向的还有路，而且那么多。如果从空中往下看，你原来是在一块无边的土地的一个点上，朝着一个你认为是前进的方向跑了一段而已。其实，你可以横着走，或是朝着任意一个方向走或多个方向走，而事实上这些个方向都来自于自己的定义。最重要的应该是留意自己走的每一步，不管脚印的深浅、大小、方向，不管啥时候回头看它们，都是那么美好、亲切。因为它们就是你，无论好坏，不管现在还是以后，都将一直是。]]></content>
      <categories>
        <category>随笔</category>
      </categories>
  </entry>
  <entry>
    <title><![CDATA[韩国的集权主义的民主发展道路]]></title>
    <url>%2F2014%2F12%2F25%2Fdaynote_20141225%2F</url>
    <content type="text"><![CDATA[第一阶段1948-1960年的李承晚总统时期是集权主义发展道路的第一个阶段。 1948年建立政府之后，投票选举，分权制约，政党竞争，地方自治，言论、出版与结社自由，等等，这些基本的民主形式都由一个宪法所规定并付诸实施。虽然李承晚和自由党为了维护自己的权力而扭曲了民主的形式，但是仍然不能忽视这个“民主形式”的存在。它一直在发挥着作用，不断地促进政治文化的变迁，不断地暴露和冲刷政治精英们的文化弱点并纠正他们的思维方式和行为方式，最终使得李承晚和自由党的政权垮台。 第二阶段1960年8月到1961年5月短暂的第二共和国没有集权主义的形式，所以第二阶段应该算是1961年5·16政变到1972年，即军政府时期和第三共和国时期。 这个时期由于总统权力的进一步扩大并停止了地方自治，其集权主义的成分比第一阶段更多。但是它却是另一种形态的集权主义，它突出了国家管理的理性主义的精神。 在经济上，它遵循“增长第一”的方针；在政治上，它强调法律、效率和秩序；在意识形态上，它表现为高度的使用主义化。 就民主发展而言，这个阶段保留了民主的基本形式要素，属于“不充分民主”的范畴。 第三阶段这个阶段包括70年代的维新体制时期和80年代的全斗焕时期，是“官僚——威权主义”。同时可以被看做是前一个大阶段的延续和伸展。其间插入了民主发展进程中的第二次崩溃，即朴正熙被暗杀到光州事件之间半年多的时间。 目前一般的研究倾向于全盘否定官僚——威权主义的政治意义，本书却提出了三点意义。 民主中的秩序。这一阶段的体制突出了理性主义的原则，不禁强调国家行政系统的纪律，也强调一般的社会纪律。而法律、纪律和秩序的加强，即使改造国民性的重要内容，也是民主进步的必要条件。 基本的社会制度认同。制度认同危机的根子是经济制度上的意识形态分歧与冲突。从韩国的激进反政府运动可以看到，这些行动的参加者并不愿意用法律手段来解决问题，并不认同民主的形式，而是要砸烂现体制实现“实质民主”。基本的制度认同始终是韩国民主发展的一个关键环节。这个问题是在80年代全斗焕时期得到最终解决的。 对民众的民主启蒙。每个人不是天生就能够适应民主的形式，因为民主形式是一套形式化的现代文明，是需要通过认真学习才能掌握的。理想主义者们常常认识不到这一点，他们认为民主就是民众的自由行动，因此民主建设之不需要启蒙的，这其实是鼓励通向混乱的大民主思想。韩国在1945年独立后民主的启蒙就开始了，以后一直没有间断过。在官僚——威权主义时期，它是积极培育民众的民主参与意识、法律意识、纪律观念等，还包括对公民社会组织及村民自治组织的监督和引导，是它们朝着民主的方向发展。]]></content>
      <categories>
        <category>书籍</category>
      </categories>
      <tags>
        <tag>民谣</tag>
        <tag>nodejs</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[The Little Prince]]></title>
    <url>%2F2014%2F12%2F24%2Fthe-little-prince%2F</url>
    <content type="text"><![CDATA[昨天网购的kindle到手了，感觉不错，由于没有背光，就和纸质书一样，需要借助外部光源才能阅读。 自从看完了《I Am Legend》，虽然该书后面还有几篇短篇小说，但是不感兴趣。想到之前在网上有人提供了几千本的kindle电子书的bt种子，于是果断用百度云的离线下载，大概共有20多GB，可能是太大，在百度云下了几天最后失败了，只是下了一部分，后来还是用115网盘下载完了。本来想在这里分享下，无奈115网盘对分享的文件数有限制了，只好把种子分享给各位了，自己再离线下吧，还是挺快的。 突然想到一本书《The Little Prince》，这本书也是知乎里很多人推荐的一本英语入门级读本，我听说这个是在电视剧版的《匆匆那年》里，剧里乔燃和方茴十分热衷此书，并且由此彼此慢慢认识，结果……没有在一起（貌似说多了）。这里面的生词确实不多，昨天看了三分之一，今天就把剩余的都给看完了，感觉挺顺畅的。 此外谈一下小感，这本书以小王子的口吻，从一个孩子的视角来看待达人世界，在表明他的困惑的同时让我注意到我们早已习惯的一些“怪象”。 What is essential is invisible to the eye.]]></content>
      <categories>
        <category>书籍</category>
      </categories>
  </entry>
  <entry>
    <title><![CDATA[nodePPT]]></title>
    <url>%2F2014%2F12%2F22%2Fnodeppt%2F</url>
    <content type="text"><![CDATA[为什么选择nodePPT这可能是迄今为止最好的网页版PPT 基于GFM的markdown语法编写 支持html混排，再复杂的demo也可以做！ 导出网页或者pdf更容易分享 支持20种转场动画，可以设置单页动画 支持单页背景图片 多种模式：overview模式，双屏模式，socket远程控制，摇一摇换页，使用ipad/iphone控制翻页更酷哦~ 可以使用画板，双屏同步画板内容！可以使用note做备注 支持语法高亮，自由选择highlight样式 可以单页ppt内部动画，单步动画 支持进入/退出回调，做在线demo很方便 支持事件update函数，查看demo 0.9.0新功能 添加画板多端同步 添加按钮控制进度 新增两种转场动效，增加事件绑定方法：Slide.on 修复一些bug demo http://qdemo.sinaapp.com/ 双屏控制：http://qdemo.sinaapp.com/?_multiscreen=1 记得允许弹窗哦~ 手机百度前端之路：http://qdemo.sinaapp.com/box-fe-road.htm theme 自定义感觉默认的模板不符合新意？可以支持自定义模板，查看theme.moon 自定义后的模板路径在markdown的设置里填写： 12345title: 这是演讲的题目speaker: 演讲者名字url: 可以设置链接transition: 转场效果，例如：zoomin/cards/slidefiles: /css/theme.moon.css 安装1npm install -g nodeppt shell使用启动1234# 获取帮助nodeppt start -h# 绑定端口nodeppt start -p &lt;port&gt; 12345nodeppt start -p 8090 -d path/for/ppts# 绑定host，默认绑定0.0.0.0nodeppt start -p 8080 -d path/for/ppts -h 127.0.0.1# 使用socket通信（按Q键显示/关闭二维码，手机扫描，即可控制）# socket须知：1、注意手机和pc要可以相互访问，2、防火墙，3、ip 启用socket控制方法一：使用start命令行1nodeppt start -c socket 在页面按键【Q】显示控制url的二维码和控制链接（需要隐身窗口打开），手机上可以使用左右touch滑动和摇一摇切换下一页 方法二：使用url参数1http://127.0.0.1:8080/md/demo.md?controller=socket 在页面按键【Q】显示控制url的二维码和控制链接（需要隐身窗口打开），手机上可以使用左右touch滑动和摇一摇切换下一页 启用postMessage控制默认使用postMessage多窗口控制，打开方法： 1http://127.0.0.1:8080/md/demo.md?_multiscreen=1 事件绑定使用函数Slide.on，目前支持update函数，即转场后的回调。示例代码： 123456789101112131415Slide.on('update', function(i, itemIndex, cls) &#123;//接受三个参数：//* 当前slide的index//* itemIndex当前slide进入的第几个build动画，从1开始//* 方向pageup/pagedown Puff.add('#FFC524' /*colors[i % 6]*/ , ctx, 20, 700, width / 2, height / 2, width / 1.8, 400); clearInterval(timer); //第十三个有动效 if (i === 13 || i === 14) &#123; timer = setInterval(function() &#123; Puff.draw(1); &#125;, 1E3 / FPS); &#125;&#125;) demo中第13张使用回调做了魔幻翻页效果 导出ppt这么高端大气上档次的ppt，怎么能不导出分享给大家呢？？ 导出ppt有三种，一种最简单直接ctrl+P，一种是pdf版，一种是html版 pdf版需要安装phantomJS。 123456# 安装phantomjs，如果安装了，请忽略npm install -g phantomjs# 启动nodeppt servernodeppt start# 导出文件nodeppt pdf http://127.0.0.1:8080/md/demo.md -o a.pdf html版123456789# 获取generate帮助nodeppt generate -h# 使用generate命令nodeppt generate filepath# 导出全部，包括nodeppt的js、img和css文件夹# 默认导出在publish文件夹nodeppt generate ./ppts/demo.md -a# 指定导出文件夹nodeppt generate ./ppts/demo.md -a -o output/path 导出目录下所有ppt，并且生成ppt list首页： 1nodeppt path -o output/path -a 123456789101112#### markdown语法nodeppt是支持**marked**语法的，但是为了制作出来更加完美的ppt，扩展了下面的语法#### 配置基本配置如下：```markdowntitle: 这是演讲的题目speaker: 演讲者名字url: 可以设置链接transition: 转场效果，例如：zoomin/cards/slidefiles: 引入js和css的地址，如果有的话~自动放在页面底部 目录关系：可以在md同级目录下创建img、js、css等文件夹，然后在markdown里面引用，nodeppt默认会先查找md文件同级目录下面的静态资源，没有再找默认的1234567891011121314151617181920212223242526272829303132333435&lt;a name=&quot;transition&quot;&gt;&lt;/a&gt;支持的转场动画包括： * kontext * vkontext * circle * cover-circle * cover-diamond * earthquake * cards * glue * stick * move * newspaper * slide * slide2 * slide3 * horizontal3d * horizontal * vertical3d * zoomin * zoomout * pulse如果设置单页动画，请参考下面的**[单页动画设置](#transition-page)**部分~#### 分页通过```[slide]```作为每页ppt的间隔，如果需要添加单页背景，使用下面的语法：```markdown[slide style=&quot;background-image:url(&apos;/img/bg1.png&apos;)&quot;]# 这是个有背景的家伙## 我是副标题 单页ppt上下布局1234567[slide]## 主页面样式### ----是上下分界线----nodeppt是基于nodejs写的支持 **Markdown!** 语法的网页PPTnodeppt：https://github.com/ksky521/nodePPT 代码格式化语法跟Github Flavored Markdown 一样~ 单页动画设置在md文件，顶部 可以设置全局转场动画，如果要设置单页的转场动画，可以通过下面的语法1234```markdown[slide data-transition=&quot;vertical3d&quot;]## 这是一个vertical3d的动画 插入html代码如果需要完全diy自己的ppt内容，可以直接使用 html标签，支持markdown和html混编。例如： 12345678910111213141516&lt;div class="file-setting"&gt; &lt;p&gt;这是html&lt;/p&gt;&lt;/div&gt;&lt;p id="css-demo"&gt;这是css样式&lt;/p&gt;&lt;p&gt;具体看下项目中 ppts/demo.md 代码&lt;/p&gt;&lt;script&gt; function testScriptTag()&#123; &#125; console.log(typeof testScriptTag);&lt;/script&gt;&lt;style&gt;#css-demo&#123; color: red;&#125;&lt;/style&gt; 转场回调前端的ppt，难免会在页面中演示一些demo，除了上面的插入html语法外，还提供了12345```markdown[slide data-outcallback=&quot;outcallback&quot; data-incallback=&quot;incallback&quot;]## 当进入此页，就执行incallback函数## 当离开此页面，就执行outcallback函数 表格实例12345678### 市面上主要的css预处理器：less\sass\stylus--- |less| sass | stylus:-------|:------:|-------:|--------环境 |js/nodejs | Ruby | nodejs扩展名 | .less | .sass/.scss | .styl特点 | 老牌，用户多，支持js解析 | 功能全，有成型框架，发展快 | 语法多样，小众案例/框架 | [Bootstrap](http://getbootstrap.com/) | [compass](http://compass-style.org) [bourbon](http://bourbon.io) | 插入iframe使用12```markdown&lt;iframe data-src=&quot;http://www.baidu.com&quot; src=&quot;about:blank;&quot;&gt;&lt;/iframe&gt; 示例类似下面的语法：(更多用法查看ppts/demo.md文件) 1234567891011121314151617181920212223242526272829303132title: nodeppt markdown 演示speaker: Theo Wangurl: https://github.com/ksky521/nodePPTtransition: zoomin[slide]# 封面样式## h1是作为封面用的，内部的都用h2[slide style="background-image:url('/img/bg1.png')"]# 背景图片 &#123;:&amp;.flexbox.vleft&#125;## 使用方法：&amp;#91;slide style="background-image:url('/img/bg1.png')"&amp;#93;[slide]## 主页面样式### ----是上下分界线----nodeppt是基于nodejs写的支持 **Markdown!** 语法的网页PPTnodeppt：https://github.com/ksky521/nodePPT[slide]什么？这些功能还不够用？极客模式：查看源码的nodeppt.js，相信你会找到牛逼的手机互动（摇一摇换页）功能查看项目目录ppts获取更多帮助信息 更多demo，查看 目录的demo1234567### 查看帮助```bashnodeppt -h# 任何命令都可以输入-h查看帮助nodeppt start -h demo演示 &amp; 使用方法 执行 nodeppt start 访问 http://127.0.0.1:8080/ 在线demo： http://qdemo.sinaapp.com/]]></content>
      <categories>
        <category>技术</category>
      </categories>
      <tags>
        <tag>分享</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[终于看完了《I Am Legend》]]></title>
    <url>%2F2014%2F12%2F21%2FI-Am-Legend-is-over%2F</url>
    <content type="text"><![CDATA[今天一口气看了50多页，还算挺顺畅的。 感受呢？首先，由于是全英文的，看起来并不够积极，到今天实在不想脱下去了结果不小心一口气就给看完了，可见故事性还是不错的，虽然已经提前知道了结局。对于英文的阅读，我想自从大二之后结束了英语课，就几乎没有了。这次呢，由兴趣入手，打败了枯燥与众多不明身份的单词带来的疏离感，引领着我走向终点，虽然有些路是闭着眼走过来的，即跳过了不少句子和段落，但终点毕竟是到达了，从而给予了我新的旅途的开启的信心。 在这我要说说小说与电影的不同。这里最大的差别在于书中的人物完全没有电影中表现得那样英雄化，而是一个普通的人，时而有各种挣扎。电影中表现的人与狗的真挚感情，在书中的残酷在于那只狗只是某一天突然出现的且一直躲着他，知道有一天被他带回家却不多几天就死了。后来出现的一个女人给了他希望，他开始不相信还有和她一样的人活着，可是在的她的解释和他内心的挣扎后几乎选择了相信，到头来却发现原来她是被吸血鬼们派来监视他的。虽然她在信中有提到 But please believe this: When we were together in the darkness, close to each other, I wasn’t spying on you, I was loving you. 并且提醒他逃跑，可是他并没有这么做。解释是习惯了这里的生活，于是走向在他眼中的异类的死刑执行。他也最终意识到 I’m the abnormal now. Normalcy was a majority concept, the standard of many and not the standard of just one man.I am legend. 看完这个小说，最让我印象深刻的是，他时时刻刻与内心做斗争，在一个只有他一人的世界，各种原来的社会的道德、规范已无约束力，他却要用以往的知识来面对一个即将道来的新世界，并且要说服自己，而且度过了三年的时间，这已然是一个传奇。]]></content>
      <categories>
        <category>书籍</category>
      </categories>
      <tags>
        <tag>电影</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[韩国民主化后的民众运动团体]]></title>
    <url>%2F2014%2F12%2F20%2Fdaynote_20141220%2F</url>
    <content type="text"><![CDATA[衰退民众运动团体在金泳三时期经历了严重的衰退，该时期政府做出的改革让这些团体一时间找不到运动的主题，遭遇了严重的角色危机。于是，一些民众运动团体决定改变它们总是反思地、本能地反政府以及总是批评现状的形象。许多组织纷纷宣布，它们决定放弃过去好斗的运动风格，采取“比较温和”的风格，促进和发动公共政策争论并发动平和的活动而不是暴力游行。还有许多组织完全脱离了民众运动团体的范畴，把自己重新包装成为一般的公民社会组织。 活跃虽然有衰退，但还是在政治上有活跃的表现—— 在合法性解决之后，金融危机加大了其可信度，同时使国家和政治社会严重失信，现存的发展路线受到质疑，许多韩国人认为只有公民团体能够提供一个新的版本。 民主化之后的政党之不稳定是一个引人注目的问题，各政党不断地争吵、分裂、重组以及相互揭露的腐败丑闻使民众对政治社会和政治家失去信任，而公民社会团体以其理性、非暴力的和平行动和呼吁社会正义的声音塑造了新形象，在人们心目中有点政党替代品的味道。 问题但是也有问题存在，韩国公民运动的深层障碍还是存在于文化之中。在民主化以后，公民社会团体获得了“政党替代品”的形象，这说明它走上了弯路。一些市民团体长期不能正确地给自己定位。他们的领导人认为政府是在为“特定阶级代言”，而他们却是在为“国家”和“人民”代言。他们在民主的形式框架下尚未找到自己的准确位置，这需要时间，因为这是民主纵深发展的任务。]]></content>
      <categories>
        <category>书籍</category>
      </categories>
      <tags>
        <tag>民主</tag>
        <tag>韩国</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[来去无知]]></title>
    <url>%2F2014%2F12%2F19%2Fcome-go%2F</url>
    <content type="text"><![CDATA[上个星期的某天，才突然发现住在隔壁的一个小伙已经搬走了，才想起来有个周末他挨户地敲门说一起吃个饭，我说有事就给推辞了，他便说“下次吧”，没想到几天后就走了。也许是他想在搬走前和隔壁邻居聚聚聊聊，可是大家都不熟啊，不知他是怎么想的。 又过了几天，有一个小伙搬走了，一个老大爷住了进来，貌似有点病，不过看起来不是很糟糕，还挺和气的。 这也并不奇怪，这里是上海嘛，人口流动性很大。记得我刚搬到这儿的时候，住在隔壁的是一对中年夫妇，他们告诉我在我之前住的是一个为小姑娘，她住了挺长时间的，貌似有两年吧。我想，他们可能住这儿已经不止两年了。想到这儿，突然想起最近好长时间都没看见他们了，难道也搬走了？ 在上海，这儿，你或许永远不会知道隔壁此时住的是什么人，什么时候来的，又或者现在已经空了，而你对于他们来说也是如此。]]></content>
      <categories>
        <category>随笔</category>
      </categories>
      <tags>
        <tag>上海</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[统计一些民谣的歌词的押韵情况（二）]]></title>
    <url>%2F2014%2F12%2F18%2Fresearch-campus-folk_2%2F</url>
    <content type="text"><![CDATA[写在前面昨天对于歌词只是进行了一个粗略的统计，并没有反映一个歌词的韵脚的情况。那么今天要做的就是先找出每篇歌词的韵脚，然后统计这个韵脚在所有歌词中出现的次数并且排序，再得到这些个韵脚对应的汉字出现的次数并且排序。 步骤首先定义一个文件中每行的最后一个字的韵母的次数排名第一和第二（如果有的话）作为韵脚，然后至于统计和排序都和上一篇文章类似的，想具体了解的话可以看源码。 实践 继续看老狼，在百度音乐找到他的三个专辑（只找到这几个比较全的了）——北京的冬天、晴朗、恋恋风尘，开始爬虫:node lyricCrawler.js，下载歌词。 统计韵脚：node analyze.js 看统计结果：cat analyzeRes.txt 结果展示格式为：韵脚 : 在所有歌词的行尾出现的次数 -&gt; 对应的汉字出现次数排名前5的汉字及其次数 12345678910111213141516an : 148 -&gt; 天:17,间:13,远:10,片:9,前:9ang : 142 -&gt; 方:22,光:9,样:8,霜:7,上:7i : 99 -&gt; 你:20,里:20,的:10,起:7,子:6ai : 94 -&gt; 来:22,在:16,白:14,快:7,待:7ao : 41 -&gt; 了:8,到:7,道:7,逃:6,秒:6a : 37 -&gt; 吧:21,花:12,啊:9,啦:6,吗:3o : 34 -&gt; 着:15,活:11,过:9,火:5,我:5e : 22 -&gt; 歌:13,雪:5,觉:4,绝:4,夜:4u : 22 -&gt; 雨:4,去:4,苦:3,组:2,呜:2ing : 12 -&gt; 听:12,影:6,清:4,情:4,睛:4en : 10 -&gt; 人:4,尘:2,真:2,沉:2,深:2ie : 10 -&gt; 界:12,铁:6,节:4,别:2,接:2ui : 9 -&gt; 谁:11,水:5,悔:4,灰:2,睡:2eng : 8 -&gt; 声:5,风:3,等:2,城:2,蜂:2ong : 5 -&gt; 中:4,隆:3,涌:3,容:3,空:2ou : 4 -&gt; 口:5,友:3,候:3,后:1,抖:1 上述结果存在的小问题就是获取多音字的韵母的问题：如“的”“了”“着”]]></content>
      <categories>
        <category>技术</category>
      </categories>
      <tags>
        <tag>民谣</tag>
        <tag>nodejs</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[统计一些民谣的歌词的押韵情况（一）]]></title>
    <url>%2F2014%2F12%2F17%2Fresearch-campus-folk%2F</url>
    <content type="text"><![CDATA[写在前面由于个人比较喜欢民谣，特别是校园民谣，结果听的多了，发现这些个歌词好像有不少相同的地方，特别是押韵的字上面，于是想着统计下，看看能够得到什么结果。 思路 找出所有歌词的每一句的最后一个字，进行单字次数、和其韵母次数的统计。 对于每一篇歌词，根据韵母出现最多的，定为韵脚，同时记录该韵脚对应的每句最后一个字出现的次数，然后再总的进行韵脚和字的次数的统计。显然，第1步很容易，那么这篇文章就从这个开始做起吧，下次再说第2步。 技术点 爬取中文歌词（要断句）解决：我发现在百度音乐中的歌曲详情页是有歌词的下载地址的，那就很方便了; 获取汉字的拼音 -&gt; nodejs版本的汉字拼音转换工具，进而区别拼音的声母和韵母解决：nodejs版本的汉字拼音转换工具提供了获取声母的方法，却没有提供获取韵母的方法，稍微看了一下代码，可读性很高，于是自己很容易就实现了（传送门）。 步骤 例如想知道老狼的歌曲的情况，找到老狼的专辑页面,上面就有他的所有专辑情况（可能不止这些，只不过百度音乐上只有这些，不过也应该差不多了吧），得到这些专辑的链接后，再去找收录的歌曲，然后便可以下载歌词了。 得到歌词后，读取歌词正文，得到每一行的最后一个字，然后用上面的方法得到韵母，再进行统计排序即可。 代码就不贴了，请见github上的项目：lyricAnalysis 小问题 歌词中有重复的段落导致重复的字，如何处理，distinct，或许无关大碍? 获取歌词正文的方式不够好，优化？]]></content>
      <categories>
        <category>技术</category>
      </categories>
      <tags>
        <tag>民谣</tag>
        <tag>nodejs</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[nrm——快速切换NPM源]]></title>
    <url>%2F2014%2F12%2F16%2Fnrm%2F</url>
    <content type="text"><![CDATA[安装npm install -g nrm 使用列出可选的源1234567891011121314nrm ls * npm ---- https://registry.npmjs.org/ cnpm --- http://r.cnpmjs.org/ taobao - http://registry.npm.taobao.org/ eu ----- http://registry.npmjs.eu/ au ----- http://registry.npmjs.org.au/ sl ----- http://npm.strongloop.com/ nj ----- https://registry.nodejitsu.com/```&lt;!--more--&gt;&#123;% alert warning %&#125;带 * 的是当前使用的源，上面的输出表明当前源是官方源。&#123;% endalert %&#125;### 切换切换到taobao nrm use taobao Registry has been set to: http://registry.npm.taobao.org/ 1234567891011### 增加源你可以增加定制的源，特别适用于添加企业内部的私有源。[私有源可以使用cnpmjs架设](http://segmentfault.com/a/1190000000368906)。`nrm add &lt;registry&gt; &lt;url&gt; [home]`### 删除源`nrm del &lt;registry&gt;`### 测试速度你还可以通过 nrm test 测试相应源的响应时间。例如，测试官方源的响应时间： nrm test npm npm —- 1328ms 1测试所有源的响应时间： nrm test npm —- 891ms cnpm — 1213ms taobao - 460mseu —– 3859msau —– 1073mssl —– 4150msnj —– 8008ms 转自nrm —— 快速切换 NPM 源 （附带测速功能）]]></content>
      <categories>
        <category>技术</category>
      </categories>
      <tags>
        <tag>nodejs</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[利用pm25.in接口实现在公众号里获取输入城市的空气质量]]></title>
    <url>%2F2014%2F12%2F15%2Fpm25%2F</url>
    <content type="text"><![CDATA[写在前面之前偶然看到pm25.in这个网站，发现免费提供了API，真是很不错，还提供了用于测试的公共的AppKey，但试了下老是提示次数已达上限，于是申请了私有AppKey，等了两天没见回邮件就没注意了，没想到今天一看原来已经给我发了。不多说，开始动手。 开始 实现目标: 在公众号中输入城市名（包括汉字和拼音），得到空气质量情况 编程语言：依旧是nodejs，原因自然是有丰富、方便的包 思路：单独写一个js文件，然后提供接口在公众号的代码中调用；使用superagent来发送get请求，以回调函数形式返回数据。 代码1 pm.js 1234567891011121314151617181920212223242526272829303132333435363738var superagent = require('superagent');module.exports = PM;function PM()&#123;&#125;;PM.prototype.get_pm2_5 = function(city, callback) &#123; var result; var pm2_5_url = 'http://www.pm25.in/api/querys/pm2_5.json?city=' + city.toLowerCase().replace(/\s+/g,'') + '&amp;token=yourtoken'; superagent.get(pm2_5_url).end(function(err,res)&#123; if(err) &#123; result = '未能从pm25.in取到数据，可能是该网站已经挂了！'; return callback(result); &#125; var data = JSON.parse(res.text); var avg = data[data.length-1]; if(!avg) &#123; result = '未能获取该城市的数据，可能原因为pm25.in暂未收录该城市数据，或者是输入的城市的中文或者拼音错误'; return callback(result); &#125; var primary = avg.primary_pollutant; if(primary == '') primary = '无'; var result = '综合空气质量: ' + avg.quality + '\n首要污染物: ' + primary + '\n\n下面是' + avg.area + '的各个监测点的情况——\n'; for(var i in data)&#123; if(i == data.length-1) break; var o = data[i]; var position_name = o.position_name; if(position_name == null || position_name == '' || position_name == 'null') continue; var quality = o.quality; if(quality == null || quality == '' || quality == 'null') quality = '未获取数据'; result += position_name + ': ' + quality + '\n'; &#125; result += '\n-发布时间: ' + avg.time_point.replace(/[T,Z]/g," "); return callback(result); &#125;);&#125;; 2 test.js(调用) 123456var PM = require('./pm');var pm = new PM();pm.get_pm2_5('Beijing',function(res) &#123; console.log(res);&#125;); 欢迎测试]]></content>
      <categories>
        <category>技术</category>
      </categories>
      <tags>
        <tag>pm25</tag>
        <tag>微信</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[将hexo构建的博客同时放在github和gitcafe上]]></title>
    <url>%2F2014%2F12%2F14%2Fcopy_blog_to_gitcafe%2F</url>
    <content type="text"><![CDATA[写在前面之前就有看到有人将博客从github迁移到gitcafe上了，因为github在国内的访问速度真的不够快，有时甚至还上不了，而gitcafe在国内的访问真心很快，谁用谁知道。 开始吧考虑到两个因素，保证网站能够访问（github和gitcafe同时挂掉的可能性应该是很低的啦），然后是国内国外分别走不同的线路，达到优化。 1 在gitcafe上创建一个与用户名相同名称的项目,并且在自定义域名里添加上你的域名。 2 修改_config.yml，hexo已经可以支持多个repo部署了，所以很方便。 123456deploy: type: git message: new repo: github: ssh://git@github.com/yourname/yourname.github.io.git,master gitcafe: git@gitcafe.com:yourname/yourname.git,gitcafe-pages 最好严格按照上面的格式来进行修改，否则可能有问题，另外如果部署的时候还是报错的话，就删除`.deploy`文件夹（失败了好多次，才发现都是这个文件夹惹的祸）。 3 修改dnspod 管理域名，最好还是dnspod啦。以前注册的dnspod可以通过设置“国外”或“国内”来定义线路，后来注册的需要“自定义线路”的话是要付费用户的，但是也可以通过多添加几条记录来达到相同目的，即设置“电信”“联通”“教育网”都指向gitcafe提供的ip，“默认”的指向github即可。设置完了，一般是几秒钟就生效了，你可以在本地ping一下你的网址，然后在用vpn或其他代理工具登录到国外网站，然后再ping一下你的网址，就可以得到验证啦。]]></content>
      <categories>
        <category>技术</category>
      </categories>
      <tags>
        <tag>hexo</tag>
        <tag>gitcafe</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[在amazon ec2上搭建pptp vpn]]></title>
    <url>%2F2014%2F12%2F13%2Fvpn_in_ec2%2F</url>
    <content type="text"><![CDATA[前提由于amazon的aws有一年的免费服务，只需要有一个双币的信用卡绑定即可，开始注册会刷你1美元的预授权但不会真的扣。aws下的服务很多，具体的你去aws的官网看吧，这里介绍用aws的ec2来搭建vpn来合理上网，你懂的（注意在ec2的控制台开启1723端口）。 准备检测是否符合pptp的搭建环境的要求服务器版本：CentOs 6.4如果检查结果没有这些支持的话，是不能安装pptp的。执行指令：modprobe ppp-compress-18 &amp;&amp; echo ok这条执行执行后，显示“ok”则表明通过。不过接下来还需要做另一个检查，输入指令：cat /dev/net/tun如果这条指令显示结果为下面的文本，则表明通过：cat: /dev/net/tun: File descriptor in bad state上述两条均通过，才能安装pptp。否则就只能考虑openvpn，或者请你的服务商来解决这个问题。 步骤1 安装pptpd 1sudo yum install pptpd 64位的也可以 12wget cache.ali.dagaiba.com/pptpd/pptpd-1.3.4-2.el6.x86_64.rpmrpm -ivh pptpd-1.3.4-2.el6.x86_64.rpm 2 配置pptpd (1). 修改`/etc/pptpd.conf`文件, 在最先面添加以下2行12localip 192.168.9.1remoteip 192.168.9.11-30 (2). 修改/etc/ppp/options.pptpd文件, 加上谷歌的dns 12ms-dns 8.8.8.8ms-dns 8.8.4.4 (3). 修改/etc/ppp/chap-secrets文件, 配置你自己VPN的用户名/密码, 格式如下: 1&lt;username&gt; pptpd &lt;passwd&gt; * (4). 修改/etc/sysctl.conf文件, 添加以下内容(默认里面有这行, 把0改为1即可) 1net.ipv4.ip_forward=1 (5). 执行sudo /sbin/sysctl -p重新加载配置 (6). 启用iptables的NAT configuration 1sudo iptables -t nat -A POSTROUTING -o eth0 -j MASQUERADE (7). 为了保证每次EC2实例重启后NAT configuration能启动, 还要修改/etc/rc.local文件, 在exit 0这行上面加上 1iptables -t nat -A POSTROUTING -o eth0 -j MASQUERADE 3 重启pptpd服务 1sudo /etc/init.d/pptpd restart 连接我用的是windows，它自带就可以创建vpn连接了，很方便的，然后就很开心啦啦啦。]]></content>
      <categories>
        <category>技术</category>
      </categories>
      <tags>
        <tag>amazon</tag>
        <tag>vpn</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[读读《平权法案》]]></title>
    <url>%2F2014%2F12%2F12%2Fread-executive-order-11246%2F</url>
    <content type="text"><![CDATA[当初这个行政命令诞生于美国60年代的反种族（其实主要是黑人）歧视运动中，根据这个法案，美国给出了一些针对黑人的优惠政策，可是后来发展的过程中有些据此产生的规定在给黑人带来便利的同时，却给其他种族的人群带来了另外一种不平等。如何用公平的手段来反对种族歧视呢，这确实是一个棘手的问题。 下面是当时的行政令，来自美国国家档案馆。 Source: The provisions of Executive Order 11246 of Sept. 24, 1965, appear at 30 FR 12319, 12935, 3 CFR, 1964-1965 Comp., p. 339, unless otherwise noted. Under and by virtue of the authority vested in me as President of the United States by the Constitution and statutes of the United States, it is ordered as follows: Part I–Nondiscrimination in Government Employment[Part I superseded by Executive Order 11478 of Aug. 8, 1969, 34 FR 12985, 3 CFR, 1966-1970 Comp., p. 803] Part II–Nondiscrimination in Employment by Government Contractors and SubcontractorsSubpart A–Duties of the Secretary of LaborSec. 201. The Secretary of Labor shall be responsible for the administration and enforcement of Parts II and III of this Order. The Secretary shall adopt such rules and regulations and issue such orders as are deemed necessary and appropriate to achieve the purposes of Parts II and III of this Order. [Sec. 201 amended by Executive Order 12086 of Oct. 5, 1978, 43 FR 46501, 3 CFR, 1978 Comp., p. 230] Subpart B–Contractors’ AgreementsSec. 202. Except in contracts exempted in accordance with Section 204 of this Order, all Government contracting agencies shall include in every Government contract hereafter entered into the following provisions:“During the performance of this contract, the contractor agrees as follows:“(1) The contractor will not discriminate against any employee or applicant for employment because of race, color, religion, sex, or national origin. The contractor will take affirmative action to ensure that applicants are employed, and that employees are treated during employment, without regard to their race, color, religion, sex or national origin. Such action shall include, but not be limited to the following: employment, upgrading, demotion, or transfer; recruitment or recruitment advertising; layoff or termination; rates of pay or other forms of compensation; and selection for training, including apprenticeship. The contractor agrees to post in conspicuous places, available to employees and applicants for employment, notices to be provided by the contracting officer setting forth the provisions of this nondiscrimination clause.“(2) The contractor will, in all solicitations or advertisements for employees placed by or on behalf of the contractor, state that all qualified applicants will receive consideration for employment without regard to race, color, religion, sex or national origin.“(3) The contractor will send to each labor union or representative of workers with which he has a collective bargaining agreement or other contract or understanding, a notice, to be provided by the agency contracting officer, advising the labor union or workers’ representative of the contractor’s commitments under Section 202 of Executive Order No. 11246 of September 24, 1965, and shall post copies of the notice in conspicuous places available to employees and applicants for employment.“(4) The contractor will comply with all provisions of Executive Order No. 11246 of Sept. 24, 1965, and of the rules, regulations, and relevant orders of the Secretary of Labor.“(5) The contractor will furnish all information and reports required by Executive Order No. 11246 of September 24, 1965, and by the rules, regulations, and orders of the Secretary of Labor, or pursuant thereto, and will permit access to his books, records, and accounts by the contracting agency and the Secretary of Labor for purposes of investigation to ascertain compliance with such rules, regulations, and orders.“(6) In the event of the contractor’s noncompliance with the nondiscrimination clauses of this contract or with any of such rules, regulations, or orders, this contract may be cancelled, terminated or suspended in whole or in part and the contractor may be declared ineligible for further Government contracts in accordance with procedures authorized in Executive Order No. 11246 of Sept. 24, 1965, and such other sanctions may be imposed and remedies invoked as provided in Executive Order No. 11246 of September 24, 1965, or by rule, regulation, or order of the Secretary of Labor, or as otherwise provided by law.“(7) The contractor will include the provisions of paragraphs (1) through (7) in every subcontract or purchase order unless exempted by rules, regulations, or orders of the Secretary of Labor issued pursuant to Section 204 of Executive Order No. 11246 of September 24, 1965, so that such provisions will be binding upon each subcontractor or vendor. The contractor will take such action with respect to any subcontract or purchase order as may be directed by the Secretary of Labor as a means of enforcing such provisions including sanctions for noncompliance: Provided, however, that in the event the contractor becomes involved in, or is threatened with, litigation with a subcontractor or vendor as a result of such direction, the contractor may request the United States to enter into such litigation to protect the interests of the United States.” [Sec. 202 amended by Executive Order 11375 of Oct. 13, 1967, 32 FR 14303, 3 CFR, 1966-1970 Comp., p. 684; Executive Order 12086 of Oct. 5, 1978, 43 FR 46501, 3 CFR, 1978 Comp., p. 230] Sec. 203. (a) Each contractor having a contract containing the provisions prescribed in Section 202 shall file, and shall cause each of his subcontractors to file, Compliance Reports with the contracting agency or the Secretary of Labor as may be directed. Compliance Reports shall be filed within such times and shall contain such information as to the practices, policies, programs, and employment policies, programs, and employment statistics of the contractor and each subcontractor, and shall be in such form, as the Secretary of Labor may prescribe.(b) Bidders or prospective contractors or subcontractors may be required to state whether they have participated in any previous contract subject to the provisions of this Order, or any preceding similar Executive order, and in that event to submit, on behalf of themselves and their proposed subcontractors, Compliance Reports prior to or as an initial part of their bid or negotiation of a contract.(c) Whenever the contractor or subcontractor has a collective bargaining agreement or other contract or understanding with a labor union or an agency referring workers or providing or supervising apprenticeship or training for such workers, the Compliance Report shall include such information as to such labor union’s or agency’s practices and policies affecting compliance as the Secretary of Labor may prescribe: Provided, That to the extent such information is within the exclusive possession of a labor union or an agency referring workers or providing or supervising apprenticeship or training and such labor union or agency shall refuse to furnish such information to the contractor, the contractor shall so certify to the Secretary of Labor as part of its Compliance Report and shall set forth what efforts he has made to obtain such information.(d) The Secretary of Labor may direct that any bidder or prospective contractor or subcontractor shall submit, as part of his Compliance Report, a statement in writing, signed by an authorized officer or agent on behalf of any labor union or any agency referring workers or providing or supervising apprenticeship or other training, with which the bidder or prospective contractor deals, with supporting information, to the effect that the signer’s practices and policies do not discriminate on the grounds of race, color, religion, sex or national origin, and that the signer either will affirmatively cooperate in the implementation of the policy and provisions of this order or that it consents and agrees that recruitment, employment, and the terms and conditions of employment under the proposed contract shall be in accordance with the purposes and provisions of the order. In the event that the union, or the agency shall refuse to execute such a statement, the Compliance Report shall so certify and set forth what efforts have been made to secure such a statement and such additional factual material as the Secretary of Labor may require. [Sec. 203 amended by Executive Order 11375 of Oct. 13, 1967, 32 FR 14303, 3 CFR, 1966-1970 Comp., p. 684.; Executive Order 12086 of Oct. 5, 1978, 43 FR 46501, 3 CFR, 1978 Comp., p. 230] Sec. 204. The Secretary of Labor may, when he deems that special circumstances in the national interest so require, exempt a contracting agency from the requirement of including any or all of the provisions of Section 202 of this Order in any specific contract, subcontract, or purchase order. The Secretary of Labor may, by rule or regulation, also exempt certain classes of contracts, subcontracts, or purchase orders (1) whenever work is to be or has been performed outside the United States and no recruitment of workers within the limits of the United States is involved; (2) for standard commercial supplies or raw materials; (3) involving less than specified amounts of money or specified numbers of workers; or (4) to the extent that they involve subcontracts below a specified tier. The Secretary of Labor may also provide, by rule, regulation, or order, for the exemption of facilities of a contractor which are in all respects separate and distinct from activities of the contractor related to the performance of the contract: Provided, That such an exemption will not interfere with or impede the effectuation of the purposes of this Order: And provided further, That in the absence of such an exemption all facilities shall be covered by the provisions of this Order. Subpart C–Powers and Duties of the Secretary of Labor and the Contracting AgenciesSec. 205. The Secretary of Labor shall be responsible for securing compliance by all Government contractors and subcontractors with this Order and any implementing rules or regulations. All contracting agencies shall comply with the terms of this Order and any implementing rules, regulations, or orders of the Secretary of Labor. Contracting agencies shall cooperate with the Secretary of Labor and shall furnish such information and assistance as the Secretary may require. [Sec. 205 amended by Executive Order 12086 of Oct. 5, 1978, 43 FR 46501, 3 CFR, 1978 Comp., p. 230] Sec. 206. (a) The Secretary of Labor may investigate the employment practices of any Government contractor or subcontractor to determine whether or not the contractual provisions specified in Section 202 of this Order have been violated. Such investigation shall be conducted in accordance with the procedures established by the Secretary of Labor.(b) The Secretary of Labor may receive and investigate complaints by employees or prospective employees of a Government contractor or subcontractor which allege discrimination contrary to the contractual provisions specified in Section 202 of this Order. [Sec. 206 amended by Executive Order 12086 of Oct. 5, 1978, 43 FR 46501, 3 CFR, 1978 Comp., p. 230] Sec. 207. The Secretary of Labor shall use his best efforts, directly and through interested Federal, State, and local agencies, contractors, and all other available instrumentalities to cause any labor union engaged in work under Government contracts or any agency referring workers or providing or supervising apprenticeship or training for or in the course of such work to cooperate in the implementation of the purposes of this Order. The Secretary of Labor shall, in appropriate cases, notify the Equal Employment Opportunity Commission, the Department of Justice, or other appropriate Federal agencies whenever it has reason to believe that the practices of any such labor organization or agency violate Title VI or Title VII of the Civil Rights Act of 1964 or other provision of Federal law. [Sec. 207 amended by Executive Order 12086 of Oct. 5, 1978, 43 FR 46501, 3 CFR, 1978 Comp., p. 230] Sec. 208. (a) The Secretary of Labor, or any agency, officer, or employee in the executive branch of the Government designated by rule, regulation, or order of the Secretary, may hold such hearings, public or private, as the Secretary may deem advisable for compliance, enforcement, or educational purposes.(b) The Secretary of Labor may hold, or cause to be held, hearings in accordance with Subsection (a) of this Section prior to imposing, ordering, or recommending the imposition of penalties and sanctions under this Order. No order for debarment of any contractor from further Government contracts under Section 209(a)(6) shall be made without affording the contractor an opportunity for a hearing. Subpart D–Sanctions and PenaltiesSec. 209. (a) In accordance with such rules, regulations, or orders as the Secretary of Labor may issue or adopt, the Secretary may:(1) Publish, or cause to be published, the names of contractors or unions which it has concluded have complied or have failed to comply with the provisions of this Order or of the rules, regulations, and orders of the Secretary of Labor.(2) Recommend to the Department of Justice that, in cases in which there is substantial or material violation or the threat of substantial or material violation of the contractual provisions set forth in Section 202 of this Order, appropriate proceedings be brought to enforce those provisions, including the enjoining, within the limitations of applicable law, of organizations, individuals, or groups who prevent directly or indirectly, or seek to prevent directly or indirectly, compliance with the provisions of this Order.(3) Recommend to the Equal Employment Opportunity Commission or the Department of Justice that appropriate proceedings be instituted under Title VII of the Civil Rights Act of 1964.(4) Recommend to the Department of Justice that criminal proceedings be brought for the furnishing of false information to any contracting agency or to the Secretary of Labor as the case may be.(5) After consulting with the contracting agency, direct the contracting agency to cancel, terminate, suspend, or cause to be cancelled, terminated, or suspended, any contract, or any portion or portions thereof, for failure of the contractor or subcontractor to comply with equal employment opportunity provisions of the contract. Contracts may be cancelled, terminated, or suspended absolutely or continuance of contracts may be conditioned upon a program for future compliance approved by the Secretary of Labor.(6) Provide that any contracting agency shall refrain from entering into further contracts, or extensions or other modifications of existing contracts, with any noncomplying contractor, until such contractor has satisfied the Secretary of Labor that such contractor has established and will carry out personnel and employment policies in compliance with the provisions of this Order.(b) Pursuant to rules and regulations prescribed by the Secretary of Labor, the Secretary shall make reasonable efforts, within a reasonable time limitation, to secure compliance with the contract provisions of this Order by methods of conference, conciliation, mediation, and persuasion before proceedings shall be instituted under subsection (a)(2) of this Section, or before a contract shall be cancelled or terminated in whole or in part under subsection (a)(5) of this Section.[Sec. 209 amended by Executive Order 12086 of Oct. 5, 1978, 43 FR 46501, 3 CFR, 1978 Comp., p. 230] Sec. 210. Whenever the Secretary of Labor makes a determination under Section 209, the Secretary shall promptly notify the appropriate agency. The agency shall take the action directed by the Secretary and shall report the results of the action it has taken to the Secretary of Labor within such time as the Secretary shall specify. If the contracting agency fails to take the action directed within thirty days, the Secretary may take the action directly. [Sec. 210 amended by Executive Order 12086 of Oct. 5, 1978, 43 FR 46501, 3 CFR, 1978 Comp., p. 230] Sec. 211. If the Secretary shall so direct, contracting agencies shall not enter into contracts with any bidder or prospective contractor unless the bidder or prospective contractor has satisfactorily complied with the provisions of this Order or submits a program for compliance acceptable to the Secretary of Labor. [Sec. 211 amended by Executive Order 12086 of Oct. 5, 1978, 43 FR 46501, 3 CFR, 1978 Comp., p. 230] Sec. 212. When a contract has been cancelled or terminated under Section 209(a)(5) or a contractor has been debarred from further Government contracts under Section 209(a)(6) of this Order, because of noncompliance with the contract provisions specified in Section 202 of this Order, the Secretary of Labor shall promptly notify the Comptroller General of the United States. [Sec. 212 amended by Executive Order 12086 of Oct. 5, 1978, 43 FR 46501, 3 CFR, 1978 Comp., p. 230] Subpart E–Certificates of MeritSec. 213. The Secretary of Labor may provide for issuance of a United States Government Certificate of Merit to employers or labor unions, or other agencies which are or may hereafter be engaged in work under Government contracts, if the Secretary is satisfied that the personnel and employment practices of the employer, or that the personnel, training, apprenticeship, membership, grievance and representation, upgrading, and other practices and policies of the labor union or other agency conform to the purposes and provisions of this Order. Sec. 214. Any Certificate of Merit may at any time be suspended or revoked by the Secretary of Labor if the holder thereof, in the judgment of the Secretary, has failed to comply with the provisions of this Order. Sec. 215. The Secretary of Labor may provide for the exemption of any employer, labor union, or other agency from any reporting requirements imposed under or pursuant to this Order if such employer, labor union, or other agency has been awarded a Certificate of Merit which has not been suspended or revoked. Part III–Nondiscrimination Provisions in Federally Assisted Construction ContractsSec. 301. Each executive department and agency which administers a program involving Federal financial assistance shall require as a condition for the approval of any grant, contract, loan, insurance, or guarantee thereunder, which may involve a construction contract, that the applicant for Federal assistance undertake and agree to incorporate, or cause to be incorporated, into all construction contracts paid for in whole or in part with funds obtained from the Federal Government or borrowed on the credit of the Federal Government pursuant to such grant, contract, loan, insurance, or guarantee, or undertaken pursuant to any Federal program involving such grant, contract, loan, insurance, or guarantee, the provisions prescribed for Government contracts by Section 202 of this Order or such modification thereof, preserving in substance the contractor’s obligations thereunder, as may be approved by the Secretary of Labor, together with such additional provisions as the Secretary deems appropriate to establish and protect the interest of the United States in the enforcement of those obligations. Each such applicant shall also undertake and agree (1) to assist and cooperate actively with the Secretary of Labor in obtaining the compliance of contractors and subcontractors with those contract provisions and with the rules, regulations and relevant orders of the Secretary, (2) to obtain and to furnish to the Secretary of Labor such information as the Secretary may require for the supervision of such compliance, (3) to carry out sanctions and penalties for violation of such obligations imposed upon contractors and subcontractors by the Secretary of Labor pursuant to Part II, Subpart D, of this Order, and (4) to refrain from entering into any contract subject to this Order, or extension or other modification of such a contract with a contractor debarred from Government contracts under Part II, Subpart D, of this Order. [Sec. 301 amended by Executive Order 12086 of Oct. 5, 1978, 43 FR 46501, 3 CFR, 1978 Comp., p. 230] Sec. 302. (a) “Construction contract” as used in this Order means any contract for the construction, rehabilitation, alteration, conversion, extension, or repair of buildings, highways, or other improvements to real property.(b) The provisions of Part II of this Order shall apply to such construction contracts, and for purposes of such application the administering department or agency shall be considered the contracting agency referred to therein.(c) The term “applicant” as used in this Order means an applicant for Federal assistance or, as determined by agency regulation, other program participant, with respect to whom an application for any grant, contract, loan, insurance, or guarantee is not finally acted upon prior to the effective date of this Part, and it includes such an applicant after he becomes a recipient of such Federal assistance. Sec. 303. (a) The Secretary of Labor shall be responsible for obtaining the compliance of such applicants with their undertakings under this Order. Each administering department and agency is directed to cooperate with the Secretary of Labor and to furnish the Secretary such information and assistance as the Secretary may require in the performance of the Secretary’s functions under this Order.(b) In the event an applicant fails and refuses to comply with the applicant’s undertakings pursuant to this Order, the Secretary of Labor may, after consulting with the administering department or agency, take any or all of the following actions: (1) direct any administering department or agency to cancel, terminate, or suspend in whole or in part the agreement, contract or other arrangement with such applicant with respect to which the failure or refusal occurred; (2) direct any administering department or agency to refrain from extending any further assistance to the applicant under the program with respect to which the failure or refusal occurred until satisfactory assurance of future compliance has been received by the Secretary of Labor from such applicant; and (3) refer the case to the Department of Justice or the Equal Employment Opportunity Commission for appropriate law enforcement or other proceedings.(c) In no case shall action be taken with respect to an applicant pursuant to clause (1) or (2) of subsection (b) without notice and opportunity for hearing. [Sec. 303 amended by Executive Order 12086 of Oct. 5, 1978, 43 FR 46501, 3 CFR, 1978 Comp., p. 230] Sec. 304. Any executive department or agency which imposes by rule, regulation, or order requirements of nondiscrimination in employment, other than requirements imposed pursuant to this Order, may delegate to the Secretary of Labor by agreement such responsibilities with respect to compliance standards, reports, and procedures as would tend to bring the administration of such requirements into conformity with the administration of requirements imposed under this Order: Provided, That actions to effect compliance by recipients of Federal financial assistance with requirements imposed pursuant to Title VI of the Civil Rights Act of 1964 shall be taken in conformity with the procedures and limitations prescribed in Section 602 thereof and the regulations of the administering department or agency issued thereunder. Part IV–MiscellaneousSec. 401. The Secretary of Labor may delegate to any officer, agency, or employee in the Executive branch of the Government, any function or duty of the Secretary under Parts II and III of this Order. [Sec. 401 amended by Executive Order 12086 of Oct. 5, 1978, 43 FR 46501, 3 CFR, 1978 Comp., p. 230] Sec. 402. The Secretary of Labor shall provide administrative support for the execution of the program known as the “Plans for Progress.” Sec. 403. (a) Executive Orders Nos. 10590 (January 19, 1955), 10722 (August 5, 1957), 10925 (March 6, 1961), 11114 (June 22, 1963), and 11162 (July 28, 1964), are hereby superseded and the President’s Committee on Equal Employment Opportunity established by Executive Order No. 10925 is hereby abolished. All records and property in the custody of the Committee shall be transferred to the Office of Personnel Management and the Secretary of Labor, as appropriate.(b) Nothing in this Order shall be deemed to relieve any person of any obligation assumed or imposed under or pursuant to any Executive Order superseded by this Order. All rules, regulations, orders, instructions, designations, and other directives issued by the President’s Committee on Equal Employment Opportunity and those issued by the heads of various departments or agencies under or pursuant to any of the Executive orders superseded by this Order, shall, to the extent that they are not inconsistent with this Order, remain in full force and effect unless and until revoked or superseded by appropriate authority. References in such directives to provisions of the superseded orders shall be deemed to be references to the comparable provisions of this Order. [Sec. 403 amended by Executive Order 12107 of Dec. 28, 1978, 44 FR 1055, 3 CFR, 1978 Comp., p. 264] Sec. 404. The General Services Administration shall take appropriate action to revise the standard Government contract forms to accord with the provisions of this Order and of the rules and regulations of the Secretary of Labor. Sec. 405. This Order shall become effective thirty days after the date of this Order.]]></content>
      <categories>
        <category>随笔</category>
      </categories>
      <tags>
        <tag>英文</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[读读《美国宪法》]]></title>
    <url>%2F2014%2F12%2F11%2Fread-constitution-of-the-US%2F</url>
    <content type="text"><![CDATA[The Constitution of the United States: A TranscriptionNote: The following text is a transcription of the Constitution as it was inscribed by Jacob Shallus on parchment (the document on display in the Rotunda at the National Archives Museum.) Items that are hyperlinked have since been amended or superseded. The authenticated text of the Constitution can be found on the website of the Government Printing Office. We the People of the United States, in Order to form a more perfect Union, establish Justice, insure domestic Tranquility, provide for the common defence, promote the general Welfare, and secure the Blessings of Liberty to ourselves and our Posterity, do ordain and establish this Constitution for the United States of America. Article. I.Section. 1.All legislative Powers herein granted shall be vested in a Congress of the United States, which shall consist of a Senate and House of Representatives. Section. 2.The House of Representatives shall be composed of Members chosen every second Year by the People of the several States, and the Electors in each State shall have the Qualifications requisite for Electors of the most numerous Branch of the State Legislature. No Person shall be a Representative who shall not have attained to the Age of twenty five Years, and been seven Years a Citizen of the United States, and who shall not, when elected, be an Inhabitant of that State in which he shall be chosen. Representatives and direct Taxes shall be apportioned among the several States which may be included within this Union, according to their respective Numbers, which shall be determined by adding to the whole Number of free Persons, including those bound to Service for a Term of Years, and excluding Indians not taxed, three fifths of all other Persons. The actual Enumeration shall be made within three Years after the first Meeting of the Congress of the United States, and within every subsequent Term of ten Years, in such Manner as they shall by Law direct. The Number of Representatives shall not exceed one for every thirty Thousand, but each State shall have at Least one Representative; and until such enumeration shall be made, the State of New Hampshire shall be entitled to chuse three, Massachusetts eight, Rhode-Island and Providence Plantations one, Connecticut five, New-York six, New Jersey four, Pennsylvania eight, Delaware one, Maryland six, Virginia ten, North Carolina five, South Carolina five, and Georgia three. When vacancies happen in the Representation from any State, the Executive Authority thereof shall issue Writs of Election to fill such Vacancies. The House of Representatives shall chuse their Speaker and other Officers; and shall have the sole Power of Impeachment. Section. 3.The Senate of the United States shall be composed of two Senators from each State, chosen by the Legislature thereof, for six Years; and each Senator shall have one Vote. Immediately after they shall be assembled in Consequence of the first Election, they shall be divided as equally as may be into three Classes. The Seats of the Senators of the first Class shall be vacated at the Expiration of the second Year, of the second Class at the Expiration of the fourth Year, and of the third Class at the Expiration of the sixth Year, so that one third may be chosen every second Year; and if Vacancies happen by Resignation, or otherwise, during the Recess of the Legislature of any State, the Executive thereof may make temporary Appointments until the next Meeting of the Legislature, which shall then fill such Vacancies. No Person shall be a Senator who shall not have attained to the Age of thirty Years, and been nine Years a Citizen of the United States, and who shall not, when elected, be an Inhabitant of that State for which he shall be chosen. The Vice President of the United States shall be President of the Senate, but shall have no Vote, unless they be equally divided. The Senate shall chuse their other Officers, and also a President pro tempore, in the Absence of the Vice President, or when he shall exercise the Office of President of the United States. The Senate shall have the sole Power to try all Impeachments. When sitting for that Purpose, they shall be on Oath or Affirmation. When the President of the United States is tried, the Chief Justice shall preside: And no Person shall be convicted without the Concurrence of two thirds of the Members present. Judgment in Cases of Impeachment shall not extend further than to removal from Office, and disqualification to hold and enjoy any Office of honor, Trust or Profit under the United States: but the Party convicted shall nevertheless be liable and subject to Indictment, Trial, Judgment and Punishment, according to Law. Section. 4.The Times, Places and Manner of holding Elections for Senators and Representatives, shall be prescribed in each State by the Legislature thereof; but the Congress may at any time by Law make or alter such Regulations, except as to the Places of chusing Senators. The Congress shall assemble at least once in every Year, and such Meeting shall be on the first Monday in December, unless they shall by Law appoint a different Day. Section. 5.Each House shall be the Judge of the Elections, Returns and Qualifications of its own Members, and a Majority of each shall constitute a Quorum to do Business; but a smaller Number may adjourn from day to day, and may be authorized to compel the Attendance of absent Members, in such Manner, and under such Penalties as each House may provide. Each House may determine the Rules of its Proceedings, punish its Members for disorderly Behaviour, and, with the Concurrence of two thirds, expel a Member. Each House shall keep a Journal of its Proceedings, and from time to time publish the same, excepting such Parts as may in their Judgment require Secrecy; and the Yeas and Nays of the Members of either House on any question shall, at the Desire of one fifth of those Present, be entered on the Journal. Neither House, during the Session of Congress, shall, without the Consent of the other, adjourn for more than three days, nor to any other Place than that in which the two Houses shall be sitting. Section. 6.The Senators and Representatives shall receive a Compensation for their Services, to be ascertained by Law, and paid out of the Treasury of the United States. They shall in all Cases, except Treason, Felony and Breach of the Peace, be privileged from Arrest during their Attendance at the Session of their respective Houses, and in going to and returning from the same; and for any Speech or Debate in either House, they shall not be questioned in any other Place. No Senator or Representative shall, during the Time for which he was elected, be appointed to any civil Office under the Authority of the United States, which shall have been created, or the Emoluments whereof shall have been encreased during such time; and no Person holding any Office under the United States, shall be a Member of either House during his Continuance in Office. Section. 7.All Bills for raising Revenue shall originate in the House of Representatives; but the Senate may propose or concur with Amendments as on other Bills. Every Bill which shall have passed the House of Representatives and the Senate, shall, before it become a Law, be presented to the President of the United States; If he approve he shall sign it, but if not he shall return it, with his Objections to that House in which it shall have originated, who shall enter the Objections at large on their Journal, and proceed to reconsider it. If after such Reconsideration two thirds of that House shall agree to pass the Bill, it shall be sent, together with the Objections, to the other House, by which it shall likewise be reconsidered, and if approved by two thirds of that House, it shall become a Law. But in all such Cases the Votes of both Houses shall be determined by yeas and Nays, and the Names of the Persons voting for and against the Bill shall be entered on the Journal of each House respectively. If any Bill shall not be returned by the President within ten Days (Sundays excepted) after it shall have been presented to him, the Same shall be a Law, in like Manner as if he had signed it, unless the Congress by their Adjournment prevent its Return, in which Case it shall not be a Law. Every Order, Resolution, or Vote to which the Concurrence of the Senate and House of Representatives may be necessary (except on a question of Adjournment) shall be presented to the President of the United States; and before the Same shall take Effect, shall be approved by him, or being disapproved by him, shall be repassed by two thirds of the Senate and House of Representatives, according to the Rules and Limitations prescribed in the Case of a Bill. Section. 8.The Congress shall have Power To lay and collect Taxes, Duties, Imposts and Excises, to pay the Debts and provide for the common Defence and general Welfare of the United States; but all Duties, Imposts and Excises shall be uniform throughout the United States; To borrow Money on the credit of the United States; To regulate Commerce with foreign Nations, and among the several States, and with the Indian Tribes; To establish an uniform Rule of Naturalization, and uniform Laws on the subject of Bankruptcies throughout the United States; To coin Money, regulate the Value thereof, and of foreign Coin, and fix the Standard of Weights and Measures; To provide for the Punishment of counterfeiting the Securities and current Coin of the United States; To establish Post Offices and post Roads; To promote the Progress of Science and useful Arts, by securing for limited Times to Authors and Inventors the exclusive Right to their respective Writings and Discoveries; To constitute Tribunals inferior to the supreme Court; To define and punish Piracies and Felonies committed on the high Seas, and Offences against the Law of Nations; To declare War, grant Letters of Marque and Reprisal, and make Rules concerning Captures on Land and Water; To raise and support Armies, but no Appropriation of Money to that Use shall be for a longer Term than two Years; To provide and maintain a Navy; To make Rules for the Government and Regulation of the land and naval Forces; To provide for calling forth the Militia to execute the Laws of the Union, suppress Insurrections and repel Invasions; To provide for organizing, arming, and disciplining, the Militia, and for governing such Part of them as may be employed in the Service of the United States, reserving to the States respectively, the Appointment of the Officers, and the Authority of training the Militia according to the discipline prescribed by Congress; To exercise exclusive Legislation in all Cases whatsoever, over such District (not exceeding ten Miles square) as may, by Cession of particular States, and the Acceptance of Congress, become the Seat of the Government of the United States, and to exercise like Authority over all Places purchased by the Consent of the Legislature of the State in which the Same shall be, for the Erection of Forts, Magazines, Arsenals, dock-Yards, and other needful Buildings;—And To make all Laws which shall be necessary and proper for carrying into Execution the foregoing Powers, and all other Powers vested by this Constitution in the Government of the United States, or in any Department or Officer thereof. Section. 9.The Migration or Importation of such Persons as any of the States now existing shall think proper to admit, shall not be prohibited by the Congress prior to the Year one thousand eight hundred and eight, but a Tax or duty may be imposed on such Importation, not exceeding ten dollars for each Person. The Privilege of the Writ of Habeas Corpus shall not be suspended, unless when in Cases of Rebellion or Invasion the public Safety may require it. No Bill of Attainder or ex post facto Law shall be passed. No Capitation, or other direct, Tax shall be laid, unless in Proportion to the Census or enumeration herein before directed to be taken. No Tax or Duty shall be laid on Articles exported from any State. No Preference shall be given by any Regulation of Commerce or Revenue to the Ports of one State over those of another: nor shall Vessels bound to, or from, one State, be obliged to enter, clear, or pay Duties in another. No Money shall be drawn from the Treasury, but in Consequence of Appropriations made by Law; and a regular Statement and Account of the Receipts and Expenditures of all public Money shall be published from time to time. No Title of Nobility shall be granted by the United States: And no Person holding any Office of Profit or Trust under them, shall, without the Consent of the Congress, accept of any present, Emolument, Office, or Title, of any kind whatever, from any King, Prince, or foreign State. Section. 10.No State shall enter into any Treaty, Alliance, or Confederation; grant Letters of Marque and Reprisal; coin Money; emit Bills of Credit; make any Thing but gold and silver Coin a Tender in Payment of Debts; pass any Bill of Attainder, ex post facto Law, or Law impairing the Obligation of Contracts, or grant any Title of Nobility. No State shall, without the Consent of the Congress, lay any Imposts or Duties on Imports or Exports, except what may be absolutely necessary for executing it’s inspection Laws: and the net Produce of all Duties and Imposts, laid by any State on Imports or Exports, shall be for the Use of the Treasury of the United States; and all such Laws shall be subject to the Revision and Controul of the Congress. No State shall, without the Consent of Congress, lay any Duty of Tonnage, keep Troops, or Ships of War in time of Peace, enter into any Agreement or Compact with another State, or with a foreign Power, or engage in War, unless actually invaded, or in such imminent Danger as will not admit of delay. Article. II.Section. 1.The executive Power shall be vested in a President of the United States of America. He shall hold his Office during the Term of four Years, and, together with the Vice President, chosen for the same Term, be elected, as follows Each State shall appoint, in such Manner as the Legislature thereof may direct, a Number of Electors, equal to the whole Number of Senators and Representatives to which the State may be entitled in the Congress: but no Senator or Representative, or Person holding an Office of Trust or Profit under the United States, shall be appointed an Elector. The Electors shall meet in their respective States, and vote by Ballot for two Persons, of whom one at least shall not be an Inhabitant of the same State with themselves. And they shall make a List of all the Persons voted for, and of the Number of Votes for each; which List they shall sign and certify, and transmit sealed to the Seat of the Government of the United States, directed to the President of the Senate. The President of the Senate shall, in the Presence of the Senate and House of Representatives, open all the Certificates, and the Votes shall then be counted. The Person having the greatest Number of Votes shall be the President, if such Number be a Majority of the whole Number of Electors appointed; and if there be more than one who have such Majority, and have an equal Number of Votes, then the House of Representatives shall immediately chuse by Ballot one of them for President; and if no Person have a Majority, then from the five highest on the List the said House shall in like Manner chuse the President. But in chusing the President, the Votes shall be taken by States, the Representation from each State having one Vote; A quorum for this Purpose shall consist of a Member or Members from two thirds of the States, and a Majority of all the States shall be necessary to a Choice. In every Case, after the Choice of the President, the Person having the greatest Number of Votes of the Electors shall be the Vice President. But if there should remain two or more who have equal Votes, the Senate shall chuse from them by Ballot the Vice President. The Congress may determine the Time of chusing the Electors, and the Day on which they shall give their Votes; which Day shall be the same throughout the United States. No Person except a natural born Citizen, or a Citizen of the United States, at the time of the Adoption of this Constitution, shall be eligible to the Office of President; neither shall any Person be eligible to that Office who shall not have attained to the Age of thirty five Years, and been fourteen Years a Resident within the United States. In Case of the Removal of the President from Office, or of his Death, Resignation, or Inability to discharge the Powers and Duties of the said Office, the Same shall devolve on the Vice President, and the Congress may by Law provide for the Case of Removal, Death, Resignation or Inability, both of the President and Vice President, declaring what Officer shall then act as President, and such Officer shall act accordingly, until the Disability be removed, or a President shall be elected. The President shall, at stated Times, receive for his Services, a Compensation, which shall neither be encreased nor diminished during the Period for which he shall have been elected, and he shall not receive within that Period any other Emolument from the United States, or any of them. Before he enter on the Execution of his Office, he shall take the following Oath or Affirmation:—“I do solemnly swear (or affirm) that I will faithfully execute the Office of President of the United States, and will to the best of my Ability, preserve, protect and defend the Constitution of the United States.” Section. 2.The President shall be Commander in Chief of the Army and Navy of the United States, and of the Militia of the several States, when called into the actual Service of the United States; he may require the Opinion, in writing, of the principal Officer in each of the executive Departments, upon any Subject relating to the Duties of their respective Offices, and he shall have Power to grant Reprieves and Pardons for Offences against the United States, except in Cases of Impeachment. He shall have Power, by and with the Advice and Consent of the Senate, to make Treaties, provided two thirds of the Senators present concur; and he shall nominate, and by and with the Advice and Consent of the Senate, shall appoint Ambassadors, other public Ministers and Consuls, Judges of the supreme Court, and all other Officers of the United States, whose Appointments are not herein otherwise provided for, and which shall be established by Law: but the Congress may by Law vest the Appointment of such inferior Officers, as they think proper, in the President alone, in the Courts of Law, or in the Heads of Departments. The President shall have Power to fill up all Vacancies that may happen during the Recess of the Senate, by granting Commissions which shall expire at the End of their next Session. Section. 3.He shall from time to time give to the Congress Information of the State of the Union, and recommend to their Consideration such Measures as he shall judge necessary and expedient; he may, on extraordinary Occasions, convene both Houses, or either of them, and in Case of Disagreement between them, with Respect to the Time of Adjournment, he may adjourn them to such Time as he shall think proper; he shall receive Ambassadors and other public Ministers; he shall take Care that the Laws be faithfully executed, and shall Commission all the Officers of the United States. Section. 4.The President, Vice President and all civil Officers of the United States, shall be removed from Office on Impeachment for, and Conviction of, Treason, Bribery, or other high Crimes and Misdemeanors. Article III.Section. 1.The judicial Power of the United States, shall be vested in one supreme Court, and in such inferior Courts as the Congress may from time to time ordain and establish. The Judges, both of the supreme and inferior Courts, shall hold their Offices during good Behaviour, and shall, at stated Times, receive for their Services, a Compensation, which shall not be diminished during their Continuance in Office. Section. 2.The judicial Power shall extend to all Cases, in Law and Equity, arising under this Constitution, the Laws of the United States, and Treaties made, or which shall be made, under their Authority;—to all Cases affecting Ambassadors, other public Ministers and Consuls;—to all Cases of admiralty and maritime Jurisdiction;—to Controversies to which the United States shall be a Party;—to Controversies between two or more States;— between a State and Citizens of another State,—between Citizens of different States,—between Citizens of the same State claiming Lands under Grants of different States, and between a State, or the Citizens thereof, and foreign States, Citizens or Subjects. In all Cases affecting Ambassadors, other public Ministers and Consuls, and those in which a State shall be Party, the supreme Court shall have original Jurisdiction. In all the other Cases before mentioned, the supreme Court shall have appellate Jurisdiction, both as to Law and Fact, with such Exceptions, and under such Regulations as the Congress shall make. The Trial of all Crimes, except in Cases of Impeachment, shall be by Jury; and such Trial shall be held in the State where the said Crimes shall have been committed; but when not committed within any State, the Trial shall be at such Place or Places as the Congress may by Law have directed. Section. 3.Treason against the United States, shall consist only in levying War against them, or in adhering to their Enemies, giving them Aid and Comfort. No Person shall be convicted of Treason unless on the Testimony of two Witnesses to the same overt Act, or on Confession in open Court. The Congress shall have Power to declare the Punishment of Treason, but no Attainder of Treason shall work Corruption of Blood, or Forfeiture except during the Life of the Person attainted. Article. IV.Section. 1.Full Faith and Credit shall be given in each State to the public Acts, Records, and judicial Proceedings of every other State. And the Congress may by general Laws prescribe the Manner in which such Acts, Records and Proceedings shall be proved, and the Effect thereof. Section. 2.The Citizens of each State shall be entitled to all Privileges and Immunities of Citizens in the several States. A Person charged in any State with Treason, Felony, or other Crime, who shall flee from Justice, and be found in another State, shall on Demand of the executive Authority of the State from which he fled, be delivered up, to be removed to the State having Jurisdiction of the Crime. No Person held to Service or Labour in one State, under the Laws thereof, escaping into another, shall, in Consequence of any Law or Regulation therein, be discharged from such Service or Labour, but shall be delivered up on Claim of the Party to whom such Service or Labour may be due. Section. 3.New States may be admitted by the Congress into this Union; but no new State shall be formed or erected within the Jurisdiction of any other State; nor any State be formed by the Junction of two or more States, or Parts of States, without the Consent of the Legislatures of the States concerned as well as of the Congress. The Congress shall have Power to dispose of and make all needful Rules and Regulations respecting the Territory or other Property belonging to the United States; and nothing in this Constitution shall be so construed as to Prejudice any Claims of the United States, or of any particular State. Section. 4.The United States shall guarantee to every State in this Union a Republican Form of Government, and shall protect each of them against Invasion; and on Application of the Legislature, or of the Executive (when the Legislature cannot be convened), against domestic Violence. Article. V.The Congress, whenever two thirds of both Houses shall deem it necessary, shall propose Amendments to this Constitution, or, on the Application of the Legislatures of two thirds of the several States, shall call a Convention for proposing Amendments, which, in either Case, shall be valid to all Intents and Purposes, as Part of this Constitution, when ratified by the Legislatures of three fourths of the several States, or by Conventions in three fourths thereof, as the one or the other Mode of Ratification may be proposed by the Congress; Provided that no Amendment which may be made prior to the Year One thousand eight hundred and eight shall in any Manner affect the first and fourth Clauses in the Ninth Section of the first Article; and that no State, without its Consent, shall be deprived of its equal Suffrage in the Senate. Article. VI.All Debts contracted and Engagements entered into, before the Adoption of this Constitution, shall be as valid against the United States under this Constitution, as under the Confederation. This Constitution, and the Laws of the United States which shall be made in Pursuance thereof; and all Treaties made, or which shall be made, under the Authority of the United States, shall be the supreme Law of the Land; and the Judges in every State shall be bound thereby, any Thing in the Constitution or Laws of any State to the Contrary notwithstanding. The Senators and Representatives before mentioned, and the Members of the several State Legislatures, and all executive and judicial Officers, both of the United States and of the several States, shall be bound by Oath or Affirmation, to support this Constitution; but no religious Test shall ever be required as a Qualification to any Office or public Trust under the United States. Article. VII.The Ratification of the Conventions of nine States, shall be sufficient for the Establishment of this Constitution between the States so ratifying the Same. The Word, “the,” being interlined between the seventh and eighth Lines of the first Page, The Word “Thirty” being partly written on an Erazure in the fifteenth Line of the first Page, The Words “is tried” being interlined between the thirty second and thirty third Lines of the first Page and the Word “the” being interlined between the forty third and forty fourth Lines of the second Page. Attest William Jackson Secretary done in Convention by the Unanimous Consent of the States present the Seventeenth Day of September in the Year of our Lord one thousand seven hundred and Eighty seven and of the Independance of the United States of America the Twelfth In witness whereof We have hereunto subscribed our Names, G°. WashingtonPresidt and deputy from Virginia DelawareGeo: ReadGunning Bedford junJohn DickinsonRichard BassettJaco: Broom MarylandJames McHenryDan of St Thos. JeniferDanl. Carroll VirginiaJohn BlairJames Madison Jr. North CarolinaWm. BlountRichd. Dobbs SpaightHu Williamson South CarolinaJ. RutledgeCharles Cotesworth PinckneyCharles PinckneyPierce Butler GeorgiaWilliam FewAbr Baldwin New HampshireJohn LangdonNicholas Gilman MassachusettsNathaniel GorhamRufus King ConnecticutWm. Saml. JohnsonRoger Sherman New YorkAlexander Hamilton New JerseyWil: LivingstonDavid BrearleyWm. PatersonJona: Dayton PensylvaniaB FranklinThomas MifflinRobt. MorrisGeo. ClymerThos. FitzSimonsJared IngersollJames WilsonGouv Morris]]></content>
      <categories>
        <category>书籍</category>
      </categories>
      <tags>
        <tag>英文</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[继续探索英文世界]]></title>
    <url>%2F2014%2F12%2F10%2Fswim-in-English-world%2F</url>
    <content type="text"><![CDATA[当我躺在床上，看一本英文小说，居然变得不发困了，是不是意味着点啥呢？ 《I am lengend》已经买回来两周了，看到70多页，平均下来每天5页，这样的速度应该还行吧，毕竟是第一次看英文小说，感受有点多。 刚开始，由兴趣入手，不认识的单词尽量忍住，争取一页只查4到5个单词，后来慢慢地到不查，即使有几个单词不认识，见得多了也能大致猜出来（其实还是有好多猜不出来），当然也有些时候一大段好多单词不认识干脆就跳过去。由于对故事情节大致了解因而不影响阅读，这样慢慢地，有时连着几页都能看懂便感觉很舒服、顺畅。 浸在英文的世界，你会体会到与看中文不一样的感觉，但我尚未入门，不能描述这样的感觉，等看到十本以上，恐怕、也许会有一番新的体会吧，继续努力了呗。]]></content>
      <categories>
        <category>随笔</category>
      </categories>
      <tags>
        <tag>英文</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[你和世界（又名“Hello World”）]]></title>
    <url>%2F2014%2F12%2F09%2Fworld-and-me%2F</url>
    <content type="text"><![CDATA[当周围的一切都变了而你还是那个你那个你讨厌又喜欢的自己是否觉得世界太快而你却来不及 可是周围的一切还是那般你却已不认识你那个熟悉又陌生的自己是否觉得世界无聊而你竟已走过 不管是世界变了或是你变了还是你以为有什么不变这些都不重要你在乎的应该是自己和世界之间还有一段没有说完的话]]></content>
      <categories>
        <category>随笔</category>
      </categories>
  </entry>
  <entry>
    <title><![CDATA[读的写的，一般不是你自己]]></title>
    <url>%2F2014%2F12%2F08%2Fnot-really-yourself%2F</url>
    <content type="text"><![CDATA[有时候，说的多了，想的过了，并且好多都是没有经历的的一种想法，不免缺乏说服力，有一种夸夸其谈之感。 就连自己，会看以前的所写、所感，不禁为之一震，这些都从何而来呢？没有印象，多半来自他人的故事加上个人的逻辑分析以及部分臆测而来。事实上，这些都写可能在读者来看，读到某处有所感，那会也是结合自己的经历而不是想到笔者的什么，之所以想到这些那是因为当我自己转换了身份再审视自己的东西也是如此的感觉。 这样的情况其实想来很正常，一个人不可能经历太多，所以他的所写所感并不能安全反映他的个人经历，有时甚至偏差很大，如果笔者是一个很能想象和推测的人的话。 既然如此，我也不必在乎太多，还是写我所想，写我所思，即使它们离我很远，但这并不是障碍，因为在笔尖与文字碰触的一刻我认为与它们之间是零距离的，这便足够。同时这也告诉我，看一个人的作品，当然可以是文学作品、影视作品等等，仅仅反映的是这个人的文学、艺术思维，而与他个人可能无直接关系。]]></content>
      <categories>
        <category>随笔</category>
      </categories>
  </entry>
  <entry>
    <title><![CDATA[轻松上阵]]></title>
    <url>%2F2014%2F12%2F07%2Feasy-to-battle%2F</url>
    <content type="text"><![CDATA[上次搬家之时，就有感触，东西太多，怎样才能放下呢？ 今天想想，是时候该整理一下了。因为出门在外，你有时不知道下一次的离开会在哪一天，你就要时刻准备着。这时你就不能有太多的负担，应该是轻松上阵，而非装备精良，这在旅程之初只会是累赘。 细数一下自己的装备，最重的肯定是书，最多的是衣服，要减负就得从这两样入手。 对于书，我以前的想法是书应该跟着人走，人到哪，应该都带着书，这是知识的象征嘛。可是后来有点转变，虽然现在说不清这个转变的来由吧，但确实转了变了，我开始觉得书看完了，应该消化在脑子里，带着这样的想法，你才会认真对待每一本书，而非仅仅快速过目甚至有炫耀其数目的意思。所以我准备把我看过的书都寄回家。 至于衣服，我不太会打理，注意穿着也是大学之后才开始慢慢培养的意识，所以好多陈年旧货，其实已经很久没用了，想着应该清理清理了。作为一个成熟的男人，应该懂得嘛，虽然我显得还不成熟，但是得努力嘛。 我的最终目标是一个箱子，一个包，轻松上阵。]]></content>
      <categories>
        <category>随笔</category>
      </categories>
      <tags>
        <tag>书</tag>
        <tag>衣服</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[看看辛普森案件中《权利法案》的体现]]></title>
    <url>%2F2014%2F12%2F06%2Fbill-of-rights-in-Trial-of-the-century%2F</url>
    <content type="text"><![CDATA[之前读《权利法案》，只是觉得它为之保护公民的权利、自由作了很多规定来限制政府和其他国家部门机构的权力。但并未觉得有什么了不起的地方，知道看了林达在他的《历史深处的忧虑》中为辛普森一案作了4个章节近全书三分之一内容的介绍和分析之后，才有了深刻、具体的理解。 在《权利法案》第四条中有：“人民的人身、住宅、文件和财产不受无理搜查和扣押的权利、不得侵犯。除依照合理根据、以宣誓或代誓宣言保证，并具体说明搜查地点和扣押的人和物，不得发出搜查和扣押状。”那么最高法院由此定出了“排斥原则”，即警察未持有搜捕状进行搜查和逮捕，那就是违宪，即使拿到了证据也是要作废的，还要追究其责任。这原则用在法院开庭之前，用以判定警察当晚在辛普森家取得的证据是否合法。 在《权利法案》第五条中有：“不得被强迫在任何形式案件中自证其罪。”这一句被扩大为“不能强迫一个人说出对自己不利的证词”。这一条此案中就被检方提供、后来被辩方发现具有证据说其存在嫌疑的证人佛曼运用了来抗议辩方的几个提问。 在《权利法案》第六条中有：“在所有刑事案件中，被告人应有权提出下列要求：要求由罪案发生地之州及区的公正的陪审团予以迅速公开的审判，并由法律确定其应属何区，要求获悉被控的罪名和理由；要求与被告的证人对质；要求以强制手段促使对被告有利的证人出庭作证；并要求律师协助辩护。”在此案中的一个南美女佣和为佛曼录音的女剧作家都是对被告有利的，如果她们拒绝出庭，被告方面可以要求法庭出传票强迫他们到庭作证，以保护被告的这项权利。 我也终于有一点体会到，美国的《权利法案》中的每一个字都不是白写的，只要你能找到条文对得上号，你就可以切切实实地用来保护自己的自由和权利。 这是作者的体会，同时也是我的感触。]]></content>
      <categories>
        <category>杂说</category>
      </categories>
      <tags>
        <tag>美国</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[美国，其实挺远的]]></title>
    <url>%2F2014%2F12%2F05%2FAmerica-so-far%2F</url>
    <content type="text"><![CDATA[回想一下，最近看林达的“近距离”系列，就是一个拨开云雾看真相的过程，这里没有那么高深的意义性的说法，而是一个真实又鲜明的案例。之前受到宣传的作用，以为说经济总量已经仅次于美国等之类的指标与美国距离在逐渐缩小。虽然并不代表全部，可是起码说明了有些方面中国距离美国是不远的。但是这样的感觉其实真的是模糊的，因为你的认知仅仅是这个国家和另一个国家的几个统计数字的对比，而且稍微有点统计学了解的人都明白一个道理——数字最能说明问题，也最能掩盖问题。 在美国，对于公民权利的保障，不是仅仅依靠《权利法案》的条文，它还必须依靠健全独立的司法制度、健康的社会机制、良好觉悟的社会和民众团体。而且这个社会必须普遍有起码的正义感和公民良知。看看这些个要素在中国的情况，便很容易发现中国要走得路还很长，而美国真的离我们还挺远的。]]></content>
      <categories>
        <category>杂说</category>
      </categories>
      <tags>
        <tag>美国</tag>
        <tag>中国</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[博客文章的单词统计]]></title>
    <url>%2F2014%2F12%2F04%2Fblog-wordcount%2F</url>
    <content type="text"><![CDATA[闲来无事，想着自己也捣鼓了不少文字了，就用所学的知识统计一下词频，看看我的文字倾向。 统计词频的关键，肯定是分词，尤其对于中文来说不容易，一般需要建立词库才能分好中文的词汇，我上网找了半天，终于发现一个不错的nodejs版本的中文分词工具——node-segment，这个使用起来非常方便，谁用谁知道。接下来就是合并相同词语并排序了，这里的排序使用的是lodash。 说起来，其实这个分词工具最大的好处在于它对中文语法的词性进行了考虑，比如有形容词、区别词、连词、副词、叹词 、方位词、成语、习语等等。我这里就先对我博客中的所有文章的名词进行了统计。 照样直接上代码： 1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253545556575859606162636465666768697071727374757677787980818283848586878889909192939495969798/** * 指定目录下文章单词统计 */ var Segment = require('./index').Segment;var POSTAG = require('./index').POSTAG; var fs = require('fs');var lodash = require('lodash');//深度优先遍历指定目录下的所有文件路径var fileList = [];function getFileList(path)&#123; var fileList = []; var dirList = fs.readdirSync(path); dirList.forEach(function(item)&#123; if(fs.statSync(path + '/' + item).isDirectory())&#123; getFileList(path + '/' + item); &#125;else&#123; fileList.push(path + '/' + item); &#125; &#125;); return fileList;&#125;//单词数统计function wordCount(retList) &#123; var wc = &#123;&#125;; for (var k in retList) &#123; var ret = retList[k]; for (var i in ret) &#123; var word = ret[i].w; var type = ret[i].p; if(!(type === 0x00100000)) &#123;// 如果只统计[名词 名语素] continue; &#125; if(!wc.hasOwnProperty(word)) &#123; wc[word] = 1; &#125;else &#123; wc[word]++; &#125; &#125; &#125; return wc;&#125;//var fileList = getFileList('D:/programme/git/node-segment/testFile');var fileList = getFileList('D:/programme/git/MyHexo/source/_posts');var segment = new Segment();segment.useDefault();// 使用默认的识别模块及字典//存储分词结果var retList = [];//对所有文件进行分词for(var i in fileList) &#123; var text = fs.readFileSync(fileList[i], 'utf8'); var ret = segment.doSegment(text); fs.appendFile('./log.txt',JSON.stringify(ret),'utf8',function(err)&#123; if(err)&#123; console.log(err); &#125; &#125;); retList.push(ret);&#125;//console.log(retList);//对所有文件进行单词统计var wc = wordCount(retList);retList = [];//console.log(wc);//console.log(wc);//将单词统计结果写入文件fs.writeFile('./log1.txt',JSON.stringify(wc),'utf8',function(err)&#123; if(err)&#123; console.log(err); &#125; &#125;); //排序var keys = Object.keys(wc);var characters = [];for(var i in keys)&#123; var key = keys[i]; var value = wc[key]; characters.push(&#123; 'word' : key, 'count' : value &#125;);&#125;wc = &#123;&#125;;var res = lodash.map(lodash.sortBy(characters, 'count'), lodash.values).reverse();//将排序后的结果写入文件fs.writeFile('./log2.txt',JSON.stringify(res),'utf8',function(err)&#123; if(err)&#123; console.log(err); &#125; &#125;); 对于前15的词语，请见下图： 由此可见嘛，我还是最爱电影啦，但是对于社会、政府、国家层面的各种问题我也是很关心的，此外我还重视个人自由、文化等方面，貌似很准嘛，呵呵！]]></content>
      <categories>
        <category>技术</category>
      </categories>
      <tags>
        <tag>nodejs</tag>
        <tag>js</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[洗洗睡吧]]></title>
    <url>%2F2014%2F12%2F03%2Fwash-wash-sleep%2F</url>
    <content type="text"><![CDATA[洗澡，挤压一小把沐浴露，开始揉搓一股奶香味，欲仙欲醉低头，原来，错拿了牛奶盒 继续洗，喝着牛奶唱着歌突然就被人踹开了门“你丫的大晚上还唱着歌呢，关键是——你能换首吗！” 睡吧，结果，手机又被偷了不怕，一定是做梦，这我可有经验了梦醒了，手机真的不见了找了半天，终于又醒了 手机还在，原来是梦中梦只不过，要迟到了猛扇自己，还是不醒看来这不再是梦了，赶紧得嘞]]></content>
      <categories>
        <category>随笔</category>
      </categories>
      <tags>
        <tag>梦</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[“一切为了孩子”是父母的悲剧更是孩子的负担]]></title>
    <url>%2F2014%2F12%2F02%2Fall-for-children%2F</url>
    <content type="text"><![CDATA[每每看到或听说一对夫妻关系其实已经破裂却由于各种考虑不得不维持表面上的婚姻之时，真是感到十分的同情。 至于各种考虑，一般常见的有不想给孩子带来单亲家庭，不想让自己的父母担忧和操心，至于其他道德上的罪名由于文化开放已经很少为人道。此外一方由于依靠着另一方的经济实力而难以下定决定独自生活，这也应该有不少，这主要由于女人在以往走向婚姻的同时也放弃了工作，逐步丧失了独自社会生存的勇气和力量。当然目前这种现象已经好多了，许多女人越来越在社会上扮演重要角色，可是也为此部分女人带来了新的疑问——我还需要男人吗？ 貌似跑偏了，其实我想谈的是第一种考虑反映的问题。这里不管是怕孩子不好，怕父母不好，最根本的反映了中国的家庭是以孩子为中心的，不像美国的家庭是以夫妻关系为纽带的。以孩子为中心，一方面的影响了自己的生活方式，另一方面不利于孩子的独立成长。这里中国人常把孩子当成自己的宝贝，而没有当成一个有着平等尊严的人来看待。（糟了，又偏了）。 言归正传，其实我想说，那些处于婚姻濒临破碎的男人和女人们，如果你由于各种顾忌而勉强维持关系，不仅伤害自己，而且不健康的自身和对方是无法营造和谐的家庭环境的，这也丝毫不利于孩子的身心发展，自己的父母也应该不希望看到这个局面吧。 婚姻可以成为一辈子的事，但是前提是不能给你带来一辈子的痛苦。]]></content>
      <categories>
        <category>杂说</category>
      </categories>
      <tags>
        <tag>孩子</tag>
        <tag>父母</tag>
        <tag>教育</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[从“女干部骂死老保安”说起]]></title>
    <url>%2F2014%2F12%2F01%2F20141201%2F</url>
    <content type="text"><![CDATA[最近的新闻标题“女干部骂死老保安”。先不谈新闻内容，仅谈标题，现在的网络时代的新闻追求的是点击率，而这点击率往往从吸引人着手。那么，刺眼的标题成了新闻网站编辑们的头等要事。因此这也注定了光看标题是不能反映客观事实的。 不多说，开始谈内容吧。这样的新闻在浮躁社会里，见得多了，可能麻木了。刚开始听说，最容易产生的是愤怒，这愤怒一在于道德素质的低下（与老人争吵），二在于职业操守的败坏（身为干部却……）。其中，估计大部分的愤怒来于第二点。这里的是非我不过过多评价，因为我毕竟不知道具体的细节，这应该交由法律处理。只不过今天的中国虽然立法无数，但执法不严，导致了大多数人不敢相信法律的公正性。因此十八届四中全会不像以往的四中全会那样关注党建，而是讲依法治国。 说到愤怒，今天社会上的愤怒随处可见。而这些愤怒中常见的莫过于追求“人人平等”的过程中受到的不公平待遇与身居高处而对他人的鄙夷这两种。一般说法是这些都源于毛时代以来的阶级思想，认为“人人平等”，且这种平等不是“法律面前的人人平等”，而是“王侯将相宁有种乎”且我就要当“王侯”。当改革开放后物质成为第一追求时，这种畸形的平等观给经济的腾飞贡献了告诉的马力，但同时给社会中的人们带来了更多的怀疑、妒忌等等不良的情绪，稍一摩擦便产生矛盾、争执的火花。 这种“平等”观念带来的是人人都难以尽心尽职，人人都只是为了追逐更多的利益，而非尊重自己的工作，尊重他人，继而得到他人的尊重。 一个人在这样的社会，他口口声声喊着平等，其实心中既是瞧不起比自己下层的人，又嫉妒比自己更上层的人。它的目标是一直往上爬，同时嘲笑在自己下面的人。他最值得在公众面前夸耀的是曾经的贫穷、苦难而今化成了多少财富、地位。他最怕的是人生走下坡路的时候从别人眼睛里看到无用的自己。他终究是要带着他的财富、地位一起离开这个世界的。因为除了它们，他便不存在。 这样的人性是可怕的，更可怕的是我们还有不少人陷入其中不得自拔终于走向同一条路。这不是个别现象，这是整个社会的环境，与其抗争坚持自己的定位，甚至坚持不做任何定位，无疑都是巨大的挑战。]]></content>
      <categories>
        <category>杂说</category>
      </categories>
      <tags>
        <tag>新闻</tag>
        <tag>平等</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[话说“文艺”]]></title>
    <url>%2F2014%2F11%2F30%2Ftalk-about-literature-and-art%2F</url>
    <content type="text"><![CDATA[文艺是一种气质，你的一举一动在别人看来都藏着一段丰富而曲折的故事。 文艺是一种逃避，现实生活的种种不满与精神世界的自由畅快趋势着我们在另一个天地相遇。 文艺，从来不是自己说出来的。往往，你的一段文字、一张摄影、一个造型让人看到与竞争社会中不相匹配的元素，于是简单概括为文艺，也因而容易听到这些个反馈——“你好文艺啊”“你现在这么文艺呀”，或者带着有点意外的口吻“你还有点文艺气质嘛”。 以前提及“文艺”往往是“文艺工作者”，指从事文学艺术类创作、表演的人，如今“文艺”可是附加在任何一个喜好文学、艺术的人身上，而且这里艺术的范围扩大了，可以是书评、影评、独立音乐、独立电影、个性小物品制作等等，其中最重要的是无一都加入了个人的习惯、想法与思考，这也是我认为最重要的。 这样说来，当我们满足了温饱之后，所有带有个人情感色彩的行为都可称之为“文艺”，每个人都可以是文艺青年，文艺是一种个人生活的选择与表达，当生存还是一个挑战时，文艺便貌似有些理想化。即便如此，正如有人把绝望当休息，我拿文艺当放松。]]></content>
      <categories>
        <category>杂说</category>
      </categories>
      <tags>
        <tag>文艺</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[读读英文书籍吧]]></title>
    <url>%2F2014%2F11%2F29%2Fread-eng-books%2F</url>
    <content type="text"><![CDATA[由于从事着IT行业的关系，有时避免不了直接读相关的英文文档，有些简单的规范性的使用说明可能还好辨识，可一道理论性的、文字较多的描述时，就犯愁了。 于是我下定决心，读一本完整的英文技术书籍，读完一章，翻译一遍，可是由于是在枯燥无味坚持不到一个月就放弃了。 最近看了Will Smith主演的《我是传奇》，感觉结局有点怪异，甚至有两个不同版本的结局，但始终觉得意犹未尽。一看豆瓣评论发现是由Richard Matheson的《I am lengend》改编的，而且大都认为电影离书有些偏离，理由大致如下：书中“I am lengend”的精髓在于Robert Neville（即电影中的Will Smith扮演的角色）在意识到世界上人类可能仅存他一个人时，他把自己当成了救世主，那些由人变异后的生物在白天不能现身，他也经常捕杀它们，而到了晚上他又不得不躲藏起来，因为夜晚是它们的天下。这样一来从它们的角度来看他简直就是这群生物的噩梦，是它们眼中的最大恶魔，而到最后他才意识到他自己成为了另一群生物的传奇。 这样的故事确实是颠覆了我的世界观，也吸引了我看原版的小说，可是当我准备买中文译本时就看到有评论提到翻译的水平低下的问题，于是萌发了买英文版的念头。下定决心买的原因一在于感兴趣，二在于小说中人物少（主要就是Robert Neville嘛），因此由这本书来锻炼英语的阅读能力应该是一个不错的起点。 目前还只看到20来页，但是还有看下去的兴趣，不多说了，继续看。]]></content>
      <categories>
        <category>书籍</category>
      </categories>
      <tags>
        <tag>电影</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[安全与自由]]></title>
    <url>%2F2014%2F11%2F28%2Fsecurity-liberty%2F</url>
    <content type="text"><![CDATA[这两者之间面对的问题在恐怖主义已成为一个议题的情况下，在美国总是一个绕不开的话题。 一方面“自由”在美国的几百年前的《权利法案》中就有讲清楚，并且深入人心，另一方面安全问题在“911事件”后可谓是重大问题。因此美国人在关涉公民权利和自由的问题上表现出谨慎的态度和处理方式，但同时往往为了安全问题又不得不以让步达到目前可接受的一种妥协。 今天看了林达关于美国1979年的《进步》杂志案件的前后事情发展的介绍，感受较深的是美国人对自由的这种敏感度，同时表现更多的理性、认真、积极的公共参与，更是让人叹服。 有时候，我们基于自身众多不自由的愤怒而又对美国那样的自由的渴望的表达，可是如果想要真正了解自由，恐怕还要从了解自由的代价入手。这里我再次推荐林达的《历史深处的忧虑》。]]></content>
      <categories>
        <category>杂说</category>
      </categories>
      <tags>
        <tag>自由</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[微信公众平台爬取网页内容]]></title>
    <url>%2F2014%2F11%2F27%2Fweixin-crawler%2F</url>
    <content type="text"><![CDATA[本来想着可以每天定时群发消息来推送本博客的最新文章，可是发现需要微信认证才能获得群发接口的权限，但是个人订阅号暂时又不能认证。无奈，只得利用已有的接口，利用自动回复指定内容来完成推送。 不多说，这里仍然是使用nodejs的wechat接口来实现的，非常easy,直接上代码： 12345678910111213141516171819202122232425262728293031323334var wechat = require('wechat');var express = require('express');var superagent = require('superagent');var cheerio = require('cheerio');var urlhelp = require('url');var app = express();//var app = express.Router();app.use(express.query());app.use('/', wechat('你的token', function (req, res, next) &#123; // 微信输入信息都在req.weixin上 var message = req.weixin; if (message.Content === 'test') &#123; //文本回复 &#125; else if (message.Content === 'doc') &#123; //图文回复 &#125;else if (message.Content === 'mp3') &#123; // 回复榜首音乐 &#125;else if (message.MsgType === 'voice') &#123; // 回复一段音乐 &#125; else if (message.MsgType === 'event') &#123; //关注回复 &#125; else &#123; //文本回复 &#125;&#125;));app.listen(process.env.PORT || 3000); 其中图文回复和回复榜首音乐都是使用了superagent来完成爬虫的工作，直接上小案例，谁跑谁知道： 123456789101112131415161718192021222324252627282930313233var superagent = require('superagent');var cheerio = require('cheerio');var urlhelp = require('url');var express = require('express');var app = express();app.listen(process.env.PORT || 5000);app.get('/', function(req, ares, next) &#123; var myUrl = 'http://luckypeng.com/'; superagent.get(myUrl).end(function(err, res1)&#123; if(err) &#123; &#125; var $ = cheerio.load(res1.text); var $article = $('.title').eq(0).children('a').first(); var title = $article.text(); var description = $article.attr('title'); var url = urlhelp.resolve(myUrl,$article.attr('href')); var picurl = urlhelp.resolve(myUrl, $('.nofancybox').eq(0).attr('src')); var latest = &#123; title: title, description: description, url: url, picurl: picurl &#125; ares.send(latest); console.log(latest); console.log('已经获取最新文章!') &#125;);&#125;);console.log('-----------------------------'); 怎么样，是不是so easy，有空请关注我的公众号哦。]]></content>
      <categories>
        <category>技术</category>
      </categories>
      <tags>
        <tag>js</tag>
        <tag>微信</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[让心飞一会儿]]></title>
    <url>%2F2014%2F11%2F26%2Flet-the-heart-fly%2F</url>
    <content type="text"><![CDATA[掀开窗帘，打开窗户，随着一阵凉风吹进来，好像同时带走了身边的什么。 有些句子，有些歌，听起来就透着满满的孤独。可是有时候就愿沉浸在其中，好像已置身于那般的环境。 不在于看到什么，而我的心已随之远去，为之努力的幻想只不过是希望跟随着自己的心去浪迹天涯。 而结果往往是，心随风飘动，脚步紧随其后却一直难以赶上。 与其如此，不如停下来，看看它究竟要飞向何方。 有时它好像要飞远，但总在那一刻之后不久便又折返回来，终于它在离我不近不远的地方盘旋了几圈后便迎着我回家了。 然后它带上自己的脚步，快乐地踏上另一条路。 此刻，风停了，歌声也听不见了，我，也回到了路上。]]></content>
      <categories>
        <category>随笔</category>
      </categories>
  </entry>
  <entry>
    <title><![CDATA[读读《美国权利法案》]]></title>
    <url>%2F2014%2F11%2F25%2Fread-United-States-Bill-of-Rights%2F</url>
    <content type="text"><![CDATA[这些修正案的提出是为了缓解那些反对批准宪法的反联邦党人的担忧，其中保障了多项个人自由，限制了政府的司法和其他方面权力，并将一些权力保留给各州和公众。千万别小看了这十条，这是后来美国这块土地上的人们争取更多的权利和自由的护身符。 第一条Congress shall make no law respecting an establishment of religion, or prohibiting the free exercise thereof; or abridging the freedom of speech, or of the press; or the right of the people peaceably to assemble, and to petition the Government for a redress of grievances.国会不得制定关于下列事项的法律：确立国教或禁止信教自由；剥夺言论自由或出版自由；或剥夺人民和平集会和向政府请愿伸冤的权利。 第二条A well regulated Militia, being necessary to the security of a free State, the right of the people to keep and bear Arms, shall not be infringed.纪律严明的民兵是保障自由州的安全所必需的，因此人民持有和携带武器的权利不得侵犯。 第三条No Soldier shall, in time of peace be quartered in any house, without the consent of the Owner, nor in time of war, but in a manner to be prescribed by law.在和平时期，未经房主同意，士兵不得在民房驻扎；除依法律规定的方式，战时也不允许如此。 第四条The right of the people to be secure in their persons, houses, papers, and effects, against unreasonable searches and seizures, shall not be violated, and no Warrants shall issue, but upon probable cause, supported by Oath or affirmation, and particularly describing the place to be searched, and the persons or things to be seized.人民的人身、住宅、文件和财产不受无理搜查和扣押的权利，不得侵犯。除依照合理根据，以宣誓或代誓宣言保证，并具体说明搜查地点和扣押的人或物，不得发出搜查和扣押状。 第五条No person shall be held to answer for a capital, or otherwise infamous crime, unless on a presentment or indictment of a Grand Jury, except in cases arising in the land or naval forces, or in the Militia, when in actual service in time of War or public danger; nor shall any person be subject for the same offence to be twice put in jeopardy of life or limb; nor shall be compelled in any criminal case to be a witness against himself, nor be deprived of life, liberty, or property, without due process of law; nor shall private property be taken for public use, without just compensation.无论何人，除非根据大陪审团的报告或起诉，不得受判处死罪或其他不名誉罪行之审判，惟发生在陆、海军中或发生在战时或出现公共危险时服现役的民兵中的案件，不在此限。任何人不得因同一罪行为而两次遭受生命或身体的危害；不得在任何刑事案件中被迫自证其罪；不经正当法律程序，不得被剥夺生命、自由或财产。不给予公平赔偿，私有财产不得充作公用。 第六条In all criminal prosecutions, the accused shall enjoy the right to a speedy and public trial, by an impartial jury of the State and district wherein the crime shall have been committed, which district shall have been previously ascertained by law, and to be informed of the nature and cause of the accusation; to be confronted with the witnesses against him; to have compulsory process for obtaining witnesses in his favor, and to have the Assistance of Counsel for his defence.在一切刑事诉讼中，被告享有下列权利：由犯罪行为发生地的州和地区的公正陪审团予以迅速而公开的审判，该地区应事先已由法律确定；得知被控告的性质和理由；同原告证人对质；以强制程序取得对其有利的证人；取得律师帮助为其辩护。 第七条In suits at common law, where the value in controversy shall exceed twenty dollars, the right of trial by jury shall be preserved, and no fact tried by a jury, shall be otherwise re-examined in any court of the United States, than according to the rules of the common law.在普通法的诉讼中，其争执价值超过20元，由陪审团审判的权利应受到保护。由陪审团裁决的事实，合众国的任何法院除非按照普通法规则，不得重新审查。 第八条Excessive bail shall not be required, nor excessive fines imposed, nor cruel and unusual punishments inflicted.不得要求过多的保释金，不得处以过重的罚金，不得施加残酷和非常的惩罚。 第九条The enumeration in the Constitution, of certain rights, shall not be construed to deny or disparage others retained by the people.本宪法对某些权利的列举，不得被解释为否定或忽视由人民保留的其他权利。 第十条The powers not delegated to the United States by the Constitution, nor prohibited by it to the States, are reserved to the States respectively, or to the people.本宪法未授予合众国、也未禁止各州行使的权力，保留给各州行使，或保留给人民行使之。]]></content>
      <categories>
        <category>书籍</category>
      </categories>
      <tags>
        <tag>美国</tag>
        <tag>民主</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[读读《独立宣言》]]></title>
    <url>%2F2014%2F11%2F24%2Fread-declaration-of-independence%2F</url>
    <content type="text"><![CDATA[一般都把它分为三部分，第一部分主要阐述民主和自由的内容，包含了平等学说、天赋人权学说、主权在民学说、人民革命权利学说；第二部分主要数落乔治三世和整个英国政府对美殖民地的迫害，这部分的内容占据了文书的绝大部分；第三部分就是宣告美利坚合众国的独立。 下面附上中英文的《独立宣言》—— 美利坚合众国13个州的一致宣言 在人类历史事件的进程中，当一个民族有必要解除其与另一民族相连结的政治桎梏，并按照自然法则和上帝的意旨在世界列强中取得独立与平等的地位时，对于人类舆论的真诚与尊重，要求他们必须将不得已而独立的原因予以宣布。 我们认为以下真理是不言而喻的：人人生而平等，造物主赋予他们某些不可转让的权利，其中包括生命权、自由权和追求幸福的权利。为了保障这些权利，人们建立起来被管辖者同意的政府。任何形式的政府，一旦破坏这些目标，人民就有权利去改变它或废除它，并建立一个新的政府。新政府所根据的原则及其组织权力的方式，务必使人民认为，唯有这样才最有可能保障他们的安全与幸福。诚然，慎重会使得一个建立已久的政府不因微不足道的和暂时的原因而被改变，过去的一切经验也表明，人类更倾向于忍受尚能忍受的苦难，而不去为了拯救自己而废除他们久已习惯了的政府形式。但是，当滥用职权和巧取豪夺的行为连绵不断、层出不穷，证明政府追求的目标是企图把人民置于专制主义统治之下时，人民就有权利，也有义务推翻这样的政府，并为他们未来的安全建立新的保障。这就是我们这些殖民地的人民一向忍受的苦难，以及现在不得不起来改变原先政治制度的原因。当今大不列颠王国的历史，就是一部反复重演的伤天害理、巧取豪夺的历史。所有这些行径的直接目的，就是要在我们这些州里建立专制的暴政统治。为了证明这一点，特将事实陈诸于世界公正人士之前：—— 他拒绝批准那些对公共福利最有益、最必要的法律。 他禁止他的总督们批准那些紧急的、极其重要的法律，除非那些法律在经他同意之前暂停施行；而暂停施行期间，他又对那些法律完全置之不理。他拒绝批准其它有关人民向广大地区迁居的法律，除非那些人民愿意放弃其在立法机关中的代表权；这种代表权对人民来说具有无可估量的意义，只有对暴君来说才是可伯的。他把各州立法团体召集到特别的、极不方便的、远离政府档案库的地方去开会，其唯一的目的就是使他们疲于奔命，不得不顺从他的旨意。 他屡次解散各州的议会，因为这些议会曾坚定不移地反抗他对人民权利的侵犯。 他在解散各州议会之后，又长时期地不让人民另选新议会；不可抹煞的立法权力又归一般民众行使；而其时各州仍然处于内乱外患的危险之中。 他竭力抑制各州的人口增长；为此目的，他为《外国人归化法》设置障碍，拒绝批准其它鼓励外国人移居各州的法律，并提高了重新分配土地的条件。 他拒绝批准确立司法权力的法律，从而阻碍司法行政管理工作。 他使法官的任职年限、薪金数额及支付办法完全由他个人意志来决定。 他滥设新职，派遣大批官吏来钳制我们的人民，耗尽我们人民的财力。 他不经我们立法机关的同意，在和平时期就把常备军驻扎在我们各州。 他力图使军队独立于政权，并凌驾于政权之上。 他与某些人相互勾结，要我们屈服于一种与我们的体制格格不入、没有为我们法律所承认的管辖权之下；并且批准那些炮制的假冒法案。在我们这里驻扎大量的武装部队。用欺骗性审讯来包庇那些杀害我们各州居民的人，使他们得以逍遥法外。切断我们与世界各地的贸易。未经我们的同意即向我们强行征税。在许多案件中剥夺我们的陪审权力。以莫须有的罪名押送我们去海外受审。在邻近的地区废除保障自由的英国法律体制，建立专制政府，并扩大其疆界，企图使它迅即成为一个样板和一件顺手的工具，以便进而把同样的专制统治引向我们这些殖民地。取消我们的宪章，废除我们那些最宝贵的法令，并且从根本上改变我们的政府形式。关闭我们自己的立法机关，有权就一切事宜为我们制定法律。 他宣布我们已不受其保护，并对我们开战。这样，表明了他已放弃在这里的政权。 他在我们的海域大肆掠夺，骚扰我们的沿海地区，焚毁我们的城镇，并残害我们人民的生命。 他此刻正在调运大量的外籍雇佣军，意在制造死亡、毁灭和专制暴虐。他已经造成即使在人类历史上最野蛮的时代都罕见的残暴和背信弃义的气氛。他完全不配做一个文明国家的元首。 他强迫在公海上被俘的我们的同胞武装起来反对自己的国家，充当残杀自己亲人和朋友的刽子手，或者死于自己亲人朋友之手。 他在我们之间煽动内乱，并竭力挑动我们的边疆居民、那些残酷无情的未开化的印第安人；而印第安人的著名的作战原则是不分男女老幼、不论何种情况，一概格杀勿论。 在这些高压政策的每一个阶段，我们都曾以最谦卑的言词请求予以纠正；而每次的吁请所得到的答复都只是屡遭损害。一个君主，当他的每个行为都已打上暴君的烙印时，是不配做自由人民的统治者。 我们并没有置我们的英国弟兄于不顾。我们时常提醒他们，他们的立法机构企图把不合理的管辖权横加到我们头上；我们曾提醒他们注意，我们移殖来此和在这里定居的情况。我们曾经向他们天生的正义感和侠义精神呼吁，恳请他们念及同种同宗的情谊，抵制那些掠夺行为以免影响我们之间的联系和友谊。但是，他们对这种正义的、血肉之亲的呼吁置若罔闻。因此，我们不得不宣布与他们脱离，并且以对待世界上其他民族一样的态度对待他们：和我们作战，就是敌人；和我们和好，就是朋友。 因此，我们，集合在大会中的美利坚合众国的代表们，以这些殖民地的善良人民的名义，并经他们授权，向全世界最祟高的正义人士呼吁，说明我们的严正意向，同时庄严宣布：这些联合一致的殖民地从此成为、而且按其权利必须成为自由独立的国家；它们已经解除一切效忠于英王室的义务，从此完全断绝、并必须断绝与大不列颠王国之间的一切政治联系。作为自由独立的国家；它们享有全权去宣战、缔和、同盟、通商或采取其它一切独立国家有权采取的行动。为了拥护此项宣言，我们怀着神明保佑的坚定信心，以我们的生命、我们的财产和我们神圣的荣誉，互相宣誓。 The Unanimous Declaration of the Thirteen United States of America When, in the course of human events, it becomes necessary for one people to dissolve the political bonds which have connected them with another, and to assume among the powers of the earth, the separate and equal station to which the laws of nature and of nature’s God entitle them, a decent respect to the opinions of mankind requires that they should declare the causes which impel them to the separation. We hold these truths to be self-evident, that all men are created equal, that they are endowed by their Creator with certain unalienable rights, that among these are life, liberty and the pursuit of happiness. That to secure these rights, governments are instituted among men, deriving their just powers from the consent of the governed. That whenever any form of government becomes destructive to these ends, it is the right of the people to alter or to abolish it, and to institute new government, laying its foundation on such principles and organizing its powers in such form, as to them shall seem most likely to effect their safety and happiness. Prudence, indeed, will dictate that governments long established should not be changed for light and transient causes; and accordingly all experience hath shown that mankind are more disposed to suffer, while evils are sufferable, than to right themselves by abolishing the forms to which they are accustomed. But when a long train of abuses and usurpations, pursuing invariably the same object evinces a design to reduce them under absolute despotism, it is their right, it is their duty, to throw off such government, and to provide new guards for their future security. –Such has been the patient sufferance of these colonies; and such is now the necessity which constrains them to alter their former systems of government. The history of the present King of Great Britain is a history of repeated injuries and usurpations, all having in direct object the establishment of an absolute tyranny over these states. To prove this, let facts be submitted to a candid world. He has refused his assent to laws, the most wholesome and necessary for the public good. He has forbidden his governors to pass laws of immediate and pressing importance, unless suspended in their operation till his assent should be obtained; and when so suspended, he has utterly neglected to attend to them. He has refused to pass other laws for the accommodation of large districts of people, unless those people would relinquish the right of representation in the legislature, a right inestimable to them and formidable to tyrants only. He has called together legislative bodies at places unusual, uncomfortable, and distant from the depository of their public records, for the sole purpose of fatiguing them into compliance with his measures. He has dissolved representative houses repeatedly, for opposing with manly firmness his invasions on the rights of the people. He has refused for a long time, after such dissolutions, to cause others to be elected; whereby the legislative powers, incapable of annihilation, have returned to the people at large for their exercise; the state remaining in the meantime exposed to all the dangers of invasion from without, and convulsions within. He has endeavored to prevent the population of these states; for that purpose obstructing the laws for naturalization of foreigners; refusing to pass others to encourage their migration hither, and raising the conditions of new appropriations of lands. He has obstructed the administration of justice, by refusing his assent to laws for establishing judiciary powers. He has made judges dependent on his will alone, for the tenure of their offices, and the amount and payment of their salaries. He has erected a multitude of new offices, and sent hither swarms of officers to harass our people, and eat out their substance. He has kept among us, in times of peace, standing armies without the consent of our legislature. He has affected to render the military independent of and superior to civil power. He has combined with others to subject us to a jurisdiction foreign to our constitution, and unacknowledged by our laws; giving his assent to their acts of pretended legislation: For quartering large bodies of armed troops among us: For protecting them, by mock trial, from punishment for any murders which they should commit on the inhabitants of these states: For cutting off our trade with all parts of the world: For imposing taxes on us without our consent: For depriving us in many cases, of the benefits of trial by jury: For transporting us beyond seas to be tried for pretended offenses: For abolishing the free system of English laws in a neighboring province, establishing therein an arbitrary government, and enlarging its boundaries so as to render it at once an example and fit instrument for introducing the same absolute rule in these colonies: For taking away our charters, abolishing our most valuable laws, and altering fundamentally the forms of our governments: For suspending our own legislatures, and declaring themselves invested with power to legislate for us in all cases whatsoever. He has abdicated government here, by declaring us out of his protection and waging war against us. He has plundered our seas, ravaged our coasts, burned our towns, and destroyed the lives of our people. He is at this time transporting large armies of foreign mercenaries to complete the works of death, desolation and tyranny, already begun with circumstances of cruelty and perfidy scarcely paralleled in the most barbarous ages, and totally unworthy the head of a civilized nation. He has constrained our fellow citizens taken captive on the high seas to bear arms against their country, to become the executioners of their friends and brethren, or to fall themselves by their hands. He has excited domestic insurrections amongst us, and has endeavored to bring on the inhabitants of our frontiers, the merciless Indian savages, whose known rule of warfare, is undistinguished destruction of all ages, sexes and conditions. In every stage of these oppressions we have petitioned for redress in the most humble terms: our repeated petitions have been answered only by repeated injury. A prince, whose character is thus marked by every act which may define a tyrant, is unfit to be the ruler of a free people. Nor have we been wanting in attention to our British brethren. We have warned them from time to time of attempts by their legislature to extend an unwarrantable jurisdiction over us. We have reminded them of the circumstances of our emigration and settlement here. We have appealed to their native justice and magnanimity, and we have conjured them by the ties of our common kindred to disavow these usurpations, which, would inevitably interrupt our connections and correspondence. We must, therefore, acquiesce in the necessity, which denounces our separation, and hold them, as we hold the rest of mankind, enemies in war, in peace friends. We, therefore, the representatives of the United States of America, in General Congress, assembled, appealing to the Supreme Judge of the world for the rectitude of our intentions, do, in the name, and by the authority of the good people of these colonies, solemnly publish and declare, that these united colonies are, and of right ought to be free and independent states; that they are absolved from all allegiance to the British Crown, and that all political connection between them and the state of Great Britain, is and ought to be totally dissolved; and that as free and independent states, they have full power to levy war, conclude peace, contract alliances, establish commerce, and to do all other acts and things which independent states may of right do. And for the support of this declaration, with a firm reliance on the protection of Divine Providence, we mutually pledge to each other our lives, our fortunes and our sacred honor.]]></content>
      <categories>
        <category>书籍</category>
      </categories>
      <tags>
        <tag>美国</tag>
        <tag>民主</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[射手啊，你走得太突然]]></title>
    <url>%2F2014%2F11%2F23%2Fshooter-my-love%2F</url>
    <content type="text"><![CDATA[昨天下了一部美国电影，发现没有字幕，于是习惯地敲上shooter.cn,结果，然后去人人影视看看，结果也。 此时去看相关的新闻、贴吧、qq群、知乎，各种讨论大都指向广电总局，看百度搜索建议就知道大众对此局的态度了。 此局在9月2日就发了204号文，不过万万没想到连字幕组都无法幸免，关于此文件可详见知乎的讨论。 对此，乐观方面我只能说，一是要提高我们的资源检索能力，二是要提高英文水平哇！]]></content>
      <categories>
        <category>杂说</category>
      </categories>
      <tags>
        <tag>哭</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[有时候很懒，却还想为它加一个期限]]></title>
    <url>%2F2014%2F11%2F22%2Ffight-with-idleness%2F</url>
    <content type="text"><![CDATA[想着每天坚持写一篇，有时候不免想偷一偷懒，随便看几页书，把其中颇有感受的几段文字一贴就完事，还美其名曰“读书笔记”，真该好好嘲讽自己几句，算了吧，脏话还是不要摆在台面上来了。 因为每天下班回来，感觉还是挺累的，要想好好想想写篇文章，而有时并没有那么多的想法或思路，又要想着能够凑齐算得上一篇比较完整的文章确实不太容易。这时候拿来主义真的是个法宝、利器，不光达到心中所求，还规避了借口一说，真实可恶哇。 不过话说回来，这样做比一点也不做还是要好过不少，至少保证了每天的任务量，怪不得国家的各级机关单位给下级下达任务命令时喜欢强调指标了，只不过有时用的有点过了而已。 就自己目前的状态而言，还是比较有信心的，当然不能指望一步登天，路还要一脚一脚地来走。]]></content>
      <categories>
        <category>随笔</category>
      </categories>
      <tags>
        <tag>坚持</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[历史深处的忧虑]]></title>
    <url>%2F2014%2F11%2F21%2Feveryday-in-America%2F</url>
    <content type="text"><![CDATA[之前看过刘瑜女士的《民主的细节》，让我拭去了自己对民主表面模糊的印象，对于之前有过疑虑的关于美国、关于民主的片面性描述有了细节的解释，让我开始有些了解民主所涉及的范畴远不止“民主”两个字说起来这么简单、轻松，这算是一本开启民智的好书。 今天开始看了林达的《历史深处的忧虑》，由于作者是以信件的形式向国内的朋友介绍他在美国土地上的所读所见所闻所思，所以读起来是生动、活泼的感觉。虽然，由于作者出国有些早，序言都是在1996年写的，有些生活细节可能会和今天的美国有些差异。但就我个人可能是一己之见认为对于早已步入发达国家行列的美国来说，近二十来年变化应该不是很明显的，至少不会像我们常说的“翻天覆地”般的变化。因此从这方面来说，读这本书对于没出过国切身体验美国生活的我，是一本从生活中的点滴来窥视美国社会的不错手段。 其实由于网络的通达，从感觉上我认为国内人们对于美国应该是了解得比较深入了，可是就但从身边来看不是如此，可能是我的视野还比较小，但就网络上的各种提到美国的言论来看也显然好多缺乏对美国的基本认识。 既然网络这么发达，为什么好像感觉美国还是离我们很远呢？当然这其中原因很多啦，我认为主要在于对大多数缺乏网络信息筛选和甄别能力的人来说，找到一条清晰认识、客观评价、摆脱众多模糊不清的印象的路径去了解美国，不是一件容易做到的事。这方面，作者在序言中的一段总结性的体会说的挺好—— 它们（指中美两国）不仅有各自圆满的价值体系，甚至有各自不同的词汇、语境和逻辑。有时，从一个大前提出发，顺着各自的逻辑走去，竟会走出风马牛不相及的结果来。 总之，对于看到这篇文章的你，如果你对美国、对民主感兴趣，不妨和我一起读一读这本《历史深处的忧虑》吧。]]></content>
      <categories>
        <category>书籍</category>
      </categories>
      <tags>
        <tag>美国</tag>
        <tag>民主</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[另一种打出来的国家]]></title>
    <url>%2F2014%2F11%2F20%2Fanother-power-from-gun%2F</url>
    <content type="text"><![CDATA[这种国家，也是通过武力夺取的政权，不过并不公然地说这个是我的家族天下。根据列宁《国家与革命》的理论，国家是阶级专政的工具，所谓一个阶级压迫另一个阶级，并不承认人人平等的观念，无产阶级和资产阶级不能够平等，因此也不承认普遍公民权。但是无产阶级有千百万人怎么统治？通过自己的政党。但这个政党不是阶级选出来的，而是自己组织起来说我代表哪一个阶级，而且这个政党人数越来越大（姑且不说怎么发展的），只能通过少数的领袖集中统治，最后高度集中到一个人，然后这个人被神话，权力无边，超过历代任何一个皇帝。 暴力革命的时间可短可长，有的几天之内暴动成功。但在现代中国，大规模的内战时间，持续得比历史上任何一次改朝换代的时间都长。如从辛亥革命以后算起，十年之间是军阀打来打去；后来是国民党和共产党所谓“围剿”和“反围剿”的十来年战争；之后是八年抗战，抵抗日本侵略；又接着打了三年内战。总体上，内战的时间，远远超过跟外国打仗的时间。所以这个政权绝对是枪杆子里出来的。根据列宁的理论，后来通过林彪之口讲出来的，政权就是镇压之权，这个政权在理念上缺少另外一个功能——保护公民的权利。 “人民”概念也非常模糊，跟“公民”概念不一样，“人民”到底有什么权利不清楚，那些人算人民也不清楚。比如1949年对国旗上四颗小星星的解释是：民族资产阶级、小资产阶级、工人阶级、农民，四个阶级算人民内部。后来忽然一下资产阶级算外部了，国旗就另作解释。到“文革”时，是无产阶级。明天站队站错了，就成了资产阶级。整个没有章法，更提不到有权威的宪法一说。 还有一个权力更迭问题。皇权时代说得很清楚，我是天子，之所以能够打下天下来是因为我是“奉天承运”，有天命在身，儿子当然继承我的王位，老百姓认了，合法性就在于血统。后来的国家号称共和国，不能够公然地说就要按血统来传位。那究竟按什么？权力更迭问题实际上没有理顺，也没有很明确的交代。但很多特点跟第一种国家，即跟所有打出来的国家都是相同的： 第一，最大的罪恶是谋反，现在称“篡党夺权”。这远远超过任何其他罪，比如大规模的残害百姓、侵犯民权等，都不如夺权谋反的罪大。 第二，政权目的是什么？是绝对不能丢掉这个政权——存在就是目的，自我循环。那么当政者对谁负责？还是对祖宗，对打江山的父辈。我记得1962年古巴导弹危机时，最后赫鲁晓夫跟肯尼迪妥协，同意美国在公海上检查苏联船只，证实上头确实没有导弹，化解了当时一触即发的危机。那时中共批“苏修”，指责赫鲁晓夫投降了，先是冒险主义，后来是投降主义。我听到一些高级干部骂赫鲁晓夫，说他对不起祖宗——指列宁，说列宁如在坟墓里知道的话都会不安生。当时的观念还是对不起祖宗，认为赫鲁晓夫对不起列宁。至于如果爆发核战争对苏联广大群众如何乃至全人类如何，不是主要的。我们的一些老革命，虽然是无神论者，但一说到将来去世的话一定说见马克思去了，如果犯了错误，就说无脸见马克思，说的是对不起祖宗，而非对不起民众。这些观念都是一脉相承的。 还有就是轻视个体生命。核战争没关系，死了三亿人，还有三亿人。甚至有一个说法是，全世界有几十亿人，死了一半人也没有关系，在有重视个体生命的传统的国家里，政治人物绝不会公开说这种话。在这类国家，军队不是属于整个国家，军队职责不光是外战，还包括对内镇压造反，镇压对政权的挑战。 有一点跟皇权时代不一样的是，宣传工作的重要性远远超过皇权时代。因为现在社会信息这么流通，民众耳目不可能完全封闭，可以有横向比较，而且公开的说法又不能以血统为依据，让民众信服的难度越来越大。过去皇帝不需要宣传工具，也没有人一天到晚在那儿宣传，只要颁布一下号令，大家自然而然就接受了，皇恩浩荡，理应如此。现在宣传机器之庞大之重要，远远超过历朝历代。 还有一个是民生要求越来越高，不是以前稍微给点小恩小惠就满意了。因为有横向比较，而且生命的价值以等级论的观念，越来越不能为普通百姓所接受。更重要的是，第三种国家（即本文上面说的另一种打出来的国家）自称比第二种国家（指谈出来的国家）优越之处在民生，所以保障民生的任务非常重，但民生还是手段不是目标。常常有人说，载人飞船都能上天、都能做得到，但污染问题、毒奶粉问题为什么没有办法解决好？总之，政权的终极目标是保自己，而不是保障公民权利。 结论是：必须改变政府的根本目标，使其成为一个保护公民基本权利的手段，不能达到这个目标就要改革，这样才能建立法治。这是一个根本问题。根本问题没有解决，谈宪法就是一厢情愿。]]></content>
      <categories>
        <category>书籍</category>
      </categories>
      <tags>
        <tag>中国</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[关于重新评价罗斯福新政]]></title>
    <url>%2F2014%2F11%2F19%2Fre-evaluate-Roosevelt%2F</url>
    <content type="text"><![CDATA[中国对罗斯福有特殊的好感，我想历史原因当然是与抗日战争时的与中国同盟有关，那是唯一的国共两党都把美国视为亲密盟友的时期。 现在国人大力推崇罗斯福，是基于片面的理解，把它作为政府干预经济的榜样，甚至可能有些人以此为“国进民退”辩护。作者认为如下几点有必要予以澄清： 一、美国的基础是自由市场经济，它的改革是纠正因过度放任所造成的弊病我国的改革是从原来政府统管一切的计划经济基础上逐步走向市场经济，至今政府该退出的领域还没有退够，很多弊病在于权力操纵市场。所以改革的方向应该与美国正好相反。 二、中国和美国有共性的一面，就是都要对人性贪婪的一面予以遏制，但是两者贪婪的载体有时不同的在美国，这个贪婪的载体是大财团、大金融家，而我国贪婪的载体是各级集政权与财权于一身的权势集团。所以中国和美国改革所针对的对象是不一样的，因此途径和措施也应该不一样。 三、新政中的“以工代赈”不适合我国经济之病，反而会加重病情我国平时由各级政府财政支持的工程不知多少，其中许多是不必要的浪费，而且带来严重腐败和对环境的破坏，本来是应该加以遏制的，而最有活力的民营中小企业却始终得不到公平的竞争条件。 四、不论情况如何紧急，任何政府的改革措施一定要通过法律来进行，而不是靠领导临时下命令美国成功的经验就在于每一项措施，每一笔拨款，都是公开透明的在国会经过辩论，通过法律而后执行。同时作为执行者的各级行政部门是超越利益集团的，这点很重要，但又要保证行政部门的廉洁和公信力，在美国这得力于自老罗斯福总统以来半个世纪的吏治改革和反腐败斗争。 五、实体经济是国民经济之本纵观几百年来美国每一轮经济危机的复苏，都与科技创新和新兴产业有关。大致的规律是，每一项重大发明促成新型产业，引起一轮投资热和股市投机，投机家催生泡沫，泡沫破裂引发危机，而下一个新型产业又引发下一轮复苏、繁荣、投机、危机的周期。如果只把注意力集中在股市升降而忽视实体经济的创新和进步，那是舍本逐末。]]></content>
      <categories>
        <category>书籍</category>
      </categories>
      <tags>
        <tag>美国</tag>
        <tag>改革</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[泥与土]]></title>
    <url>%2F2014%2F11%2F18%2Fni-and-tu%2F</url>
    <content type="text"><![CDATA[小时候，雨天我穿着长靴，趟过一段泥路天晴了，我又经过这片土地 蹲下来，满地形态各异的建筑整个像座残败且古老的城堡 在这片古迹中，我寻找着突然，我指着一处尖叫道这是我做的，因为我的靴底刻有自己的名字 看得出神了，我把它捧在手里却发现名字不见了，低头一看原来它留在了这片土地上]]></content>
      <categories>
        <category>随笔</category>
      </categories>
  </entry>
  <entry>
    <title><![CDATA[大多数人会说]]></title>
    <url>%2F2014%2F11%2F17%2Fpeople-say%2F</url>
    <content type="text"><![CDATA[我们经常会使用这样的句式——“大多数人会说……其实”“不少人认为……然而事实上”，有没有想过为什么很自然地用了“大多数人这样，而少数那样”的写法呢？ 当我写完以上这段的时候，发现自己在上面用的是“我们”二字，不免惊愕，感觉被自己拍了一下天灵盖，浑身一哆嗦，想说的话都被憋回去了。 其实当我发现自己有这样写的习惯时，经常会去将“我们”修改为“我”，当时给自己的解释是——我不应该贸然地认为别人也和我们一样，不能就随便就代表了他人，而很多时候可能就是你一厢情愿的想法而已，因此你最好就拿自己说事吧。但有时我真就觉得大多数人就是那样啥的，那我就这样写也没有什么大碍吧。而且说完了大多数的情况，那接下来的写少数人的情况不是更加显得对比鲜明和表达突出吗，这真实一种省事又高效、有力的写法啊。 仔细想想其中缘故，其实充斥着不少大多数与一小撮严重对立的界限和模型，有时对应到具体事情上，我便会套用其上，屡试不爽，大有看尽人间沧桑，览遍世上冷暖之感。可是视野仅限于事物的正反性，而省略其中太多的变化的状态和过程，算不算是一种思维上的偷懒吧。]]></content>
      <categories>
        <category>杂说</category>
      </categories>
      <tags>
        <tag>改变</tag>
        <tag>习惯</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[看不同电影的乐趣]]></title>
    <url>%2F2014%2F11%2F16%2Fjoy-of-movie%2F</url>
    <content type="text"><![CDATA[以前，看电影总是以游离于其外的状态，看他人人生尽收眼底，自由一种高高在上、指点江山的意味，不免得意之极，却也无甚感受。 后来慢慢开始理解一些电影，到爱上部分电影，再到知晓看电影和思考电影的乐趣不同之处，最后才真正爱上电影这门艺术。 下面就谈一谈我看各种电影的乐趣所在吧—— 喜剧片这其中多是各种人物与现实生活中的反差造成，产生一些错位，或是一些稀松平常的囧事放大化，而产生喜剧的效果。因而适合在低落的时候缓解个人情绪，或是叫几个好友，边吃边看，其乐融融。 动作冒险类这一类让人在紧张刺激的环境下血脉贲张，时而有种英雄的代入感，很是快意。 恐怖惊悚类这种电影不太适合一个人时看，要是真的想一个人体验一番，最好挑个心情还不错的时机，因为其中诡异的气氛、离奇的事件、莫名的死亡总是让人很压抑，更加让人在投入其中的时候感到孤独与无助，却也让人明白不是什么事情都是我们能够掌控的，珍惜现在拥有的有时比追求没有的更可贵。 科幻类随着年龄的长大，越多接触现实，越容易丧失想象力，而通过看这一类片子，会将你引入一个幻想、构造出的境地，在你为哪些你所想象的境界感到美妙的同时，甚至能够为自己有着这样的想法而感到神奇。也算是给自己的精神生活增添一份灵性吧。 励志类接触过太多的成功学、励志类话题的讨论后，便容易感到自身被其绑架，于是会产生抵触。但偶尔能看到一部几乎看不出修饰、但又包含励志的元素的电影，还是一种激励人心、鼓舞人心的感受，也是不错的。 爱情类爱情，单单就这一个词来说，我理解为很纯粹的感情。可是它诞生在这个社会，就不免会有社会上的各种元素碰撞，比如伦理、习俗、生存、人性等，又是表现爱情的伟大力量，有时则突出爱情的不堪一击。它带给人的既有美好的想象，又有为美好事物的破碎而叹息的复杂感受。 文艺片这一类电影对于没啥文学素养的我来说，最大的享受是静静地接受导演给我所呈现的。往往你会说：“啊，真没，虽然我不知道美在哪里。”不过这需要非常安静地欣赏，否则容易破坏气氛，那就达不到效果。 当然，类型片远不止这些，我只是挑了几个常见的说一说，还有一些是非类型片，简单说来是没有突出的标签元素可以概括，有时甚至让你搞不清想表达什么，但我总会有一个共同的感受：世事无常啊，一切皆有可能发生，无论好的还是不好的。]]></content>
      <categories>
        <category>电影</category>
      </categories>
      <tags>
        <tag>电影</tag>
        <tag>兴趣</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[七号房的礼物]]></title>
    <url>%2F2014%2F11%2F15%2Fgift-from-room%2F</url>
    <content type="text"><![CDATA[之前就看到有这么一部电影，结果有豆瓣短评里提到是一部温情的电影，需要准备足够的餐巾纸来对付你的眼泪，而对韩国这类温情的、反映亲情的电影，我有深刻印象的是《素媛》，可爱的小女主人公和其悲惨的经历及与父亲之前关系的细微变化使得我都来不及拿餐巾纸就已经泪流满面。此外类似刻画出细腻的人物间情感的我看过的有大学时舍友推的《雏菊》，也是让人不能自拔，从那时起便佩服韩国电影中对人感情的额表达的深度和入木三分的那种功力。 正是因为如此，我有对韩国这一类型电影的印象，便不轻易来看这一类电影，而是隔一段较长时间，选个心情还不错的日子，比较放松，再准备充足的餐巾纸，然后才会去欣赏。 这部电影没有《素媛》来得那么现实、残酷，好多地方你甚至觉得很假，严重脱离了现实。其中最为现实的恐怕就是有着智障的父亲相信了警察局长的威胁为了保护女儿而承认了并无的犯罪，而且他人对此的努力也无力改变最后死刑的判定及执行。对此，我回想了一下我今年看过的十来部韩国电影，几乎都有包含对韩国警察系统滥用职权或腐败等丑陋行为的解释或讽刺，这多少和韩国80年代以来的民族电影运动有点关系，就不展开细说了，因为之前有过介绍。 其实这部电影最多给人的感觉是人性本善，除了那个警察局长一直难以接受女儿的个人原因死亡而怪罪他人的扭曲心理显得黑暗之外，其他人，诸如正义感的看守所科长等，就算是与片中父亲同间牢房的狱友虽然之前都是各种抢劫、诈骗之类的人，但与小女孩相处过程中却表现出人性光明的一面，让人觉得有些超乎现实了。可是就单说影片给人带来正面的、阳光的感受，便很让人暖心了。 最后特意提一下，韩国小女孩对“爸爸”二字的叫法实在是太能挠到你心窝里去了！]]></content>
      <categories>
        <category>电影</category>
      </categories>
      <tags>
        <tag>电影</tag>
        <tag>韩国</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[韩国的工人与工会]]></title>
    <url>%2F2014%2F11%2F14%2Fworker-union-of-korea%2F</url>
    <content type="text"><![CDATA[关于工人与工会关于工人与工会有两种思想。一种是自由主义的思想，它强调工人自治与和平的、合理的争取工人权力的工会斗争；一种是马克思主义思想，它认为工人阶级是一个革命的整体，是新的生产力的代表和资本主义的掘墓人，强调工人阶级领导的暴力革命。 总体情况尽管劳资间的纠纷在韩国有时候也很激烈，并对韩国的政治发展进程产生了不可忽视的影响。但从整体看来，工人在韩国的政治舞台舞台扮演重要的角色。痛西方国家或拉丁美洲的一些国家相比，韩国工人的组织化程度很低，政治活性化程度也很低。 历史上韩国劳资争端发生的频率并不是很高，而且工会花的比率也一直很低。1960-1961、1980年、1987-1989年，是劳资纠纷的三个高潮期。这三个高潮与20世纪40年代末的情况不同，当时工人罢工高潮是因为受到左翼政治团体的组织发动，具有颠覆制度的倾向；而这三次高潮则均是在制度框架内发生的，属于自由民主主义的范畴。即便如此，这三次也不是由内部力量所驱使，而是受到外来影响的推动。这三次高潮可以说都是对国家的大政治气候的被动反应。 1960-1961这次的工人运动高潮是受到“4月革命”及随后的全国性政治动荡的影响。其中有几次大规模的罢工，虽然其中提出了工资和劳动条件的要求，但主要是由于革新政党和学生组织到工厂中串联的缘故。针对这个问题，朴正熙政变后立即解散了所有的工会，而由情报部自上而下地重新组织一个新的全国性工会叫做“大韩劳总”，加上有《工会法》《劳工纠纷调解法》《劳工委员会法》的限制，其后的几次工人运动都是小规模的。 1980年这次高潮发生在“首尔之春”，当时的政治秩序与上一次高潮时期有些相似，社会比较混乱甚至明显失控，工人运动或劳资纠纷也跟着蜂起。到5月份光州事件被镇压后，工人运动也跟着平息了下来。全斗焕（以前一直以为是金斗焕）上台后，提出了“四禁”，分别是禁止工会的政治行动，选举宣传活动和政治资金的募捐活动，以及禁止公职人员工会化。 1987-1989年这一次的工人运动高潮与前两次相比有了新的特点——工人运动不再作为民主运动的附属物或者与之混淆在一起，而是工人自己行动，提出工资与劳动条件的要求。 民主化之后民主化之后通过工会会员数量来看工会运动呈现衰落的趋势，一方面的原因是分散性习惯、不重视横向联系、组织愿望低等传统文化因素再继续发生作用。另一方面则是现实环境的变化给工会运动的继续发展带来不利的影响： 经济大环境的变化韩国经济从1990年之后进入低增长时期，工人逐渐认识到参加工会并不能给他们带来涨工资等实际的好处。 资方对新环境的适应企业家为了应付工会而组织成立了一个全国范围的管理者的组织——国家经济组织理事会，加上更多机器的对人工的代替、更廉价地外国劳动力等等措施形成了全国的大环境，对工人和工会的行动进行了限制。 民主化本身对工人有不利的一面基于民主化的情况，政府难以像威权主义时期那样“在压制集体劳动和在以牺牲雇主的利益而给予劳动者较好的待遇上试图求得平衡”，此时企业界要求改变过时的劳动法，雇佣自由化，因此工人不得不在一些地方做出让步。 概括总之，韩国工人及其组织深深大上文化传统的烙印。如果在一个民主制度的框架下，在不受到激进意识形态和政治好事者的鼓动和组织的情况下自然发展的话，那么其组织形态就会呈现出更加多元化或多元主义，在很长时期内会继续保持一盘散沙似的特点。威权主义禁止各种激进思想在工厂传播，禁止工人外的介入，实际上是维护了一种自然的趋势。韩国工人的情况也说明，民主政治是一种专门的职业，是政治家的职业，本质上是精英主义的。工人作为个体可以进入政治家行列，而作为一个阶级想整体扮演突出的政治角色则很难成为现实。]]></content>
      <categories>
        <category>书籍</category>
      </categories>
      <tags>
        <tag>民主</tag>
        <tag>韩国</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[微信公众平台开发基础接口测试]]></title>
    <url>%2F2014%2F11%2F13%2Fweixin-basic-test%2F</url>
    <content type="text"><![CDATA[介绍这里使用了nodejs版本的微信公共平台消息接口服务中间件来进行测试，非常简单。 测试步骤准备安装wechat和express npm install wechat npm install expreess 接着在你的项目目录下运行npm init，将依赖的npm库的信息写进package.json，为的是push到heroku上之后，能帮你自动安装依赖。 上代码改写app.js 123456789101112131415161718192021222324252627282930313233343536373839var wechat = require('wechat');var express = require('express');var app = express();//var app = express.Router();app.use(express.query());app.use('/', wechat('luckypeng', function (req, res, next) &#123; // 微信输入信息都在req.weixin上 var message = req.weixin; if (message.Content === 'text') &#123; //文本回复 res.reply(&#123; content: '文本信息', type: 'text' &#125;); &#125; else if (message.MsgType === 'voice') &#123; // 回复一段音乐 res.reply(&#123; type: "music", content: &#123; title: "来点music", description: "一无所有",// musicUrl: "http://luckypeng.qiniudn.com/一无所有.mp3", hqMusicUrl: "http://luckypeng.qiniudn.com/一无所有.mp3" &#125; &#125;); &#125; else &#123; // 图文回复 res.reply([ &#123; title: '微信公众平台开发基础接口测试', description: '点击详情查看', picurl: 'http://luckypeng.com/images/basicTest.jpg', url: 'http://luckypeng.com/2014/11/13/weixin-basic-test/' &#125; ]); &#125;&#125;));app.listen(process.env.PORT || 3000); 上传代码123git add .git commit -m &quot;weixin basic test&quot;git push heroku master 测试吧]]></content>
      <categories>
        <category>技术</category>
      </categories>
      <tags>
        <tag>js</tag>
        <tag>微信</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[利用heroku,nodejs进行微信公众平台的接入]]></title>
    <url>%2F2014%2F11%2F12%2Fstart-in-weixin%2F</url>
    <content type="text"><![CDATA[写在前面我的微信公众平台已经申请好久了，但是一直没拿来用干啥的，最近捣鼓了下nodejs，除了仿照着网上的例子做了一个豆瓣电影新片榜的爬虫就没干啥了。毕竟要学以致用吗，就想着可以做一个爬虫来爬自己的网站最近更新的文章然后推送给微信公众平台。于是开始了，下面是成为开发者要做的工作。参照微信公众平台接入指南 。 herokuheroku简单来说是一个支持多种编程语言的PAAS，详细请参考heroku的维基百科。这里用来作为我们微信公众平台的服务器端代码的部署。 nodejsnodejs简单来说是一个服务器端js语言，详细请参考nodejs的维基百科。这里用来作为我们微信公众平台的开发语言。 废话少说，开始吧开始heroku的nodejs之旅注册一个heroku账号，new一个app,名称为appname(下面会用到)，参照heroku的官方教程一步步地进行，前提是熟悉git的基本操作就没啥问题。 关键代码下面附上我的代码—— 1234567891011121314151617181920var http = require('http');var url = require('url');var sha1 = require('sha1');var token = '你要在公众平台服务器配置填写的token';http.createServer(function(req, res) &#123; var gurl = url.parse(req.url, true); var signature = gurl.query.signature; var timestamp = gurl.query.timestamp; var nonce = gurl.query.nonce; var echostr = gurl.query.echostr; var array = [token, timestamp, nonce]; array.sort(); var str = sha1(array.join("")); if(str == signature) &#123; res.end(echostr); &#125;&#125;).listen(process.env.PORT || 80); 部署测试此时访问http://appname.herokuapp.com?signature=f60e14a9ca350972c5134540d573f33ac8a51604&amp;timestamp=timestamp&amp;nonce=nonce&amp;echostr=OK，如果你有看到浏览器返回了OK,应该就代码部署OK了。 公众平台的服务器配置在URL中填写appname.herokuapp.com,token和代码中保持一致，EncodingAESKey随意，然后提交，一般在页面会通知你认证通过了。接下来就是你的微信公众平台真正的开发啦啦啦。。。]]></content>
      <categories>
        <category>技术</category>
      </categories>
      <tags>
        <tag>nodejs</tag>
        <tag>微信</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[难道是记日记惹的“祸”]]></title>
    <url>%2F2014%2F11%2F12%2Fdiary-is-part-of-life%2F</url>
    <content type="text"><![CDATA[刚从大学步入工作时，一般有两种心态，一种是迎接早已向往的独立生活，二是留恋美好的大学时光。 记得我刚到上海来的感受是难以置信——就这样毕业了？我合格吗？然而没等你多想，就步入打工者的大军，成为千军万马中的普通一员，既有人多势众的安全感，又有隐匿于大众中的无力感。基于个人等情况，缓了几个月才认清大学真的已经一去不复返，但依旧难以对工作充满热情。 虽然如此，各种低落，不知何去何从，但总算通过近一年的时间养成了记日记的习惯，可见习惯真的不是28天，也不是90天就能养成的，至少对我来说是这样。可也许正式记日记的习惯，让我在不知所措的日子里还在心头有一项任务压在那，让我非做不可，因为除此之外没有动力和自豪的事情。 但状态貌似不知不觉中发生了变化，下半年以来，我让断断续续的健身计划开始按时按量地执行起来。工作上有时难免由于个人的性格不够舒展开导致的一些不快，也能在事后理性的反省中得以缓解。让我感受较深的也是一味地强求改变个人的性格是一件很难的事，因为你的驱动力和阻力都来自于自身。倒不如从养成一个良好习惯做起，做好长期计划，缓慢改变、进步的准备，时间一长自然受益。 此外，对于工作，我就自己这一年多来谈谈体会。如果你真的一点也发现不了挑战、乐趣，找不到动力、激情所在，还是趁早放弃的好，可是如果你有一点的上述四个感情之一在其中，而此时又无更好的选择，不妨试着投入其中。这里的切入点便是兴趣，试图将兴趣与工作的交汇点找到，加以发展，慢慢地，随着你投入的越多，稍有回报，你会很开心。因为人总是很难从轻而易举的成功中获得更大的满足感。这样的逐渐深入其中，你便可能因为熟悉你做的东西而对此产生一份眷恋。]]></content>
      <categories>
        <category>随笔</category>
      </categories>
      <tags>
        <tag>日记</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[读《美国十讲》最后一讲]]></title>
    <url>%2F2014%2F11%2F11%2Fdaynote_20141111%2F</url>
    <content type="text"><![CDATA[鸦片战争到二战期间相对来说，在近代时期列强中美国对中国的损害较小，而中国从对美关系中获利较多。其中有几个历史节点可以窥见一二。 1844年《望厦条约》是中美之间签订的第一个不平等条约； 1868年的《蒲安臣条约》是鸦片战争后中国与外国签订的第一个平等跳跃； 接下来的《排华法》，使得在美国冲击、迫害华人的事件变本加厉，给华人造成很大的伤害； 其后的八国联军侵华战争后签订的《辛丑条约》，使得美国获得约三千多万两白银的赔款，然而美国在算计后把剩下的以前多万两银子退回给中国办学，当然其中也有中国外交官的努力，主要是为了让中国人了解外国的情况，有利于化解仇恨，促进和平，这一行动还带动了英国和日本； 后来巴黎和会中，美国为了争取日本加入“国联”，偏袒日本的屋里要求，给广大中国人特别是知识分子造成很大失望。 抗日战争中派遣飞虎队来作为志愿者支援中国，随后在1943年废除了与中国签订的所有不平等跳跃，随后其他国家跟风。 后来在美国的坚持下使得中国的一成为联合国的发起国和五个常人理事国之一，然而在雅尔塔会议上，美、英迁就苏联背着中国同意了损害中国主权的条件，包括外蒙独立，也是众所周知的。 另外有一点，美国民间对中国的援助很大，在这一点上，我们常常把民间和政府混为一谈，其实两者行为有时可能吻合，但一般是独立的。例如美国私人、教会以及工艺基金会对中国的教育、文化、医疗等各方面现代化都有积极的贡献。 国共内战到1970年代二战后，美国理想地引导中国成为一个共产党、国民党以及各民主党派共和的一个国家，因而有了马歇尔调停，结果失败。在国共内战期间，美国采取的是片面支持国民党，出枪出钱。后国民党在大陆垮台后，美国一方面不支持国民党反攻大陆，另一方面又阻止中共武力统一台湾。然而在毛泽东采取“一边倒”的外交政策后对中国采取的是遏制和孤立政策。知道中苏关系瓦解后，开始了谈判到合作的转变。 1970年代以后在这之后的这些年，是属于一种既有摩擦又有交往，实际上是关系越来越紧密地过程。中美正式建交正好与中国的改革开放相吻合。按道理讲，中美之间应该没有根本的利益冲突。在不断摩擦、磨合的过程中，若从战略趋势上看，粗略可以分为三个阶段，差不多每十年一个阶段。 第一个阶段此时正值改革开发初期，中国的现代化进程需要美国，美国认为一个稳定、朝着改革方向发展、对美友好的中国符合美国利益。中美两国在处理国际共同关心的问题和热点问题上合作多于对抗。 第二个阶段1989年以后，形势突变。苏联威胁不复存在，天安门风波使中国政府成为国际谴责对象，人权问题成为中美关系中长期的焦点。然而在1992年邓小平南方讲话后有所改变，由于继续经济开放，双方在经济利益上有了共同点。于是在1994年克林顿政府决定人权问题与最惠国待遇问题脱钩，第二任内实现了两国首脑互访。 第三个阶段进入21世纪，美国现在不再担心中国，回到计划经济的老路，却担心中国实力强大，中国加快经济发展的步伐不一定被美国认为总是符合美国的利益，而要加以防范。所谓“中国威胁论”，在相当一部分人中有市场。 目前关系总结目前的中美关系总结起来就是既相互防范，又相互依赖。]]></content>
      <categories>
        <category>书籍</category>
      </categories>
      <tags>
        <tag>美国</tag>
        <tag>民主</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[javascript中的this]]></title>
    <url>%2F2014%2F11%2F10%2Fthis_in_js%2F</url>
    <content type="text"><![CDATA[在函数执行时，this 总是指向调用该函数的对象。要判断 this 的指向，其实就是判断 this 所在的函数属于谁。 在《javaScript语言精粹》这本书中，把 this 出现的场景分为四类，简单的说就是： 有对象就指向调用对象 没调用对象就指向全局对象 用new构造就指向新对象 通过apply或call或bind来改变this的所指 函数有所属对象时：指向所属对象函数有所属对象时，通常通过.表达式调用，这时this自然指向所属对象。比如下面的例子： 1234567891011var myObject = &#123;value: 100&#125;;myObject.getValue = function () &#123; console.log(this.value); // 输出 100 // 输出 &#123; value: 100, getValue: [Function] &#125;， // 其实就是 myObject 对象本身 console.log(this); return this.value;&#125;;console.log(myObject.getValue()); // =&gt; 100 getValue()属于对象myObject，并由myOjbect进行.调用，因此this指向对象myObject。 函数没有所属对象：指向全局对象123456789101112var myObject = &#123;value: 100&#125;;myObject.getValue = function () &#123; var foo = function () &#123; console.log(this.value) // =&gt; undefined console.log(this);// 输出全局对象 global &#125;; foo(); return this.value;&#125;;console.log(myObject.getValue()); // =&gt; 100 在上述代码块中，foo函数虽然定义在getValue的函数体内，但实际上它既不属于getValue也不属于myObject。foo并没有被绑定在任何对象上，所以当调用时，它的this指针指向了全局对象global。据说这是个设计错误。 构造器中的this：指向新对象js中，我们通过new关键词来调用构造函数，此时this会绑定在该新对象上。 1234567var SomeClass = function()&#123; this.value = 100;&#125;var myCreate = new SomeClass();console.log(myCreate.value); // 输出100 顺便说一句，在js中，构造函数、普通函数、对象方法、闭包，这四者没有明确界线。界线都在人的心中。 apply和call调用以及bind绑定：指向绑定的对象apply()方法接受两个参数第一个是函数运行的作用域，另外一个是一个参数数组(arguments)。call()方法第一个参数的意义与apply()方法相同，只是其他的参数需要一个个列举出来。简单来说，call的方式更接近我们平时调用函数，而apply需要我们传递Array形式的数组给它。它们是可以互相转换的。 123456789101112var myObject = &#123;value: 100&#125;;var foo = function()&#123; console.log(this);&#125;;foo(); // 全局变量 globalfoo.apply(myObject); // &#123; value: 100 &#125;foo.call(myObject); // &#123; value: 100 &#125;var newFoo = foo.bind(myObject);newFoo(); // &#123; value: 100 &#125;]]></content>
      <categories>
        <category>技术</category>
      </categories>
      <tags>
        <tag>js</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[读《美国十讲》第九讲]]></title>
    <url>%2F2014%2F11%2F08%2Fdaynote_20141108%2F</url>
    <content type="text"><![CDATA[精神资源自由主义精神这是美国与生俱来地，它可以最大限度地发挥人的创造性。 宪法精神美国的宪法是多方协商后的产物，大家都认同这部宪法是至高无上的。美国人的凝聚力靠的也就是这部宪法。 教育美国的教育的多元化恐怕也是世界上任何国家都比不了的。 制度完备的法治一项法律通过的过程比较复杂而缓慢，要经过多方的反复争论、各种利弊的权衡。但是一旦通过之后，一定得到遵守，立法程序长、成本高，但是司法的成本比较低。 民主的实践基本的民主在基层，各个州的官员是向下负责的，保证了基层民主的稳固，如果高层有变化或丑闻之类的，就不会动摇国家的根本。 媒体的监督这是建立在言论、出版自由的基础之上的。 渐进的改良美国在立国二百多年来，一直就是靠的是不断地改良，在发展中不断地前进。 今后发展的内部制约因素资本的肆虐自20世纪初的进步主义改良以来，逐渐发展出对资本的约束和规范，但是看来还没有找到最佳的“度”。 舆论监督力量可能削弱美国有强大的独立于权势的媒体，对于监督权势、揭露时弊、制约腐败起了很好的作用。但媒体本身不受监督，在市场化中一些大电视台和报业集团本身也变成了利益集团，成为一种权势，有“第四种权力”之称。 金钱对选举的干预百年来为此通过各种法律、规则，对企业、团体和富豪的政治捐款做出种种限制，力度还是不够，而且最近在共和党右派的影响下还有倒退的趋势。 总之单从国内讲，美国还不会衰落。但在国际上它不可能像以前那样为所欲为了，如果处理不好的话，它会陷入不利的困境，霸权削弱是可能的，但美国仍握有瑶瑶领先的超级综合实力。它如何运用这一实力，与世界其他力量的博弈是良性还是恶性，对人类的祸福将产生重要影响。]]></content>
      <categories>
        <category>书籍</category>
      </categories>
      <tags>
        <tag>美国</tag>
        <tag>民主</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[读《美国十讲》第七、八讲]]></title>
    <url>%2F2014%2F11%2F07%2Fdaynote_20141107%2F</url>
    <content type="text"><![CDATA[美国建国初期对外的砍伐有一个代表，就是华盛顿总统的告别演说上告诫美国不要卷入欧洲的纷争。但美国与生俱来有一个思想可以从托马斯·潘恩的《常识》中窥见，他提出要建立一个前所未有的新世界，改造旧世界。即以天下为己任，并且认为代表人类最先进的思想，创造了最优秀的制度，因此要把这个制度传到全世界。随着美国实力的壮大，后者成为主流思想，既是全民所认同的一种思想，也是与实际利益向结合的政策取向。 另外值得一提的是美国的民主与霸权的问题。很多人人为美国在国际上如此霸道，把自己的意志强加于人，一点也不民主，所以说美国的民主是假民主。作者的砍伐是它在国内的民主是真的，它在国家上自以为替天行道，维护人权，也不能说都是假的。她给的解释有民主不是个人行为，不是一种道德观念，不是好人行民主，坏人行霸道，民主是一种制度。而美国由于在实力上远远超过其他任何国家，它就一定会用它的实力来争取最大的利益，建立最符合自己利益的国际规则。]]></content>
      <categories>
        <category>书籍</category>
      </categories>
      <tags>
        <tag>美国</tag>
        <tag>民主</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[读《美国十讲》第五、六讲]]></title>
    <url>%2F2014%2F11%2F06%2Fdaynote_20141106%2F</url>
    <content type="text"><![CDATA[作为高度发达的资本主义国家，美国也经历了两极分化和尖锐的社会矛盾，但是和欧洲不一样，美国很少发生阶级革命的威胁，社会主义思潮始终未在美国兴起。 资中筠对此的解释有两点——时间差和“反面教员”。前者意为社会主义还没有传到美国的时候，由于美国人看到了欧洲的情况，因我而在还没有爆发大规模矛盾的时候变开始进行改良以缓解这一情况，按照列宁的说法是“美国的一切做法都是在拯救资本主义”，可是这个拯救是成功的。“反面教员”是说到那时世界上最大的共产主义国家苏联在一开始受到世界上很多人的歌颂，却出现了1933年到1936年间斯大林的大清洗的行动，这使得美国人大为畏惧社会主义，甚至将之等同于法西斯主义。 接下来要谈的是美国私人公益事业，其实主要说的是有几点—— 美国人以经营企业的理念来做公益事业； 美国人的这种捐赠文化在很大程度上承担了部分社会责任，从而减轻了政府的压力； 美国人的回馈社会的精神在引导年轻人价值观时起到了非常好的示范作用。]]></content>
      <categories>
        <category>书籍</category>
      </categories>
      <tags>
        <tag>美国</tag>
        <tag>民主</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[读《美国十讲》第四讲]]></title>
    <url>%2F2014%2F11%2F05%2Fdaynote_20141105%2F</url>
    <content type="text"><![CDATA[第四讲主要由两个内容，小罗斯福新政和1960年代的群众运动。前者大多数人都很熟悉，政府加大了对经济的干预力度，采用凯恩斯的经济学理论来主导各项改革。其中新提出的两个自由很有意思，分别是“免于匮乏的自由”和“免于恐惧的自由”，前者意为政府将承担公民基本的物质保障，后者则意为加强公民的人权保障。 接下来1960年代的群众运动有两个关键主题——反对越战和争取黑人的权利。对于这场运动的表现和意义有积极地、消极的说法，两面都有不少。不过给我感觉重要的是，这些运动之所以能够开展是与基本的民主自由制度分不开的。此外美国真正的民主在基层，由于基层的官员，包括州长都是直选出来的，他们直接对所在州的公民负责。加上公民有用脚投票的自由而无中国类似的户籍制度，每个州的公民与当地政府的关系是牢固和稳定的。而实际上看上去阵势很大的游行示威等反对运动大多是针对联邦政府的，所以基本不存在“维稳”的问题。]]></content>
      <categories>
        <category>书籍</category>
      </categories>
      <tags>
        <tag>美国</tag>
        <tag>民主</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[读《美国十讲》第三讲]]></title>
    <url>%2F2014%2F11%2F04%2Fdaynote_20141104%2F</url>
    <content type="text"><![CDATA[上篇讲到改良主义思潮的出现，之所以又称为进步主义改革是由于在这接下来的一个时期社会上多种力量自发从各方面推动的具有改良主义性质的一系列的实践运动。 首先要说道的是改良运动的力量来源—— 劳工运动 新闻报刊 学者 其中劳工是基于自身现状的不满做出的积极的反抗，新闻报刊对于揭露供热难受剥削、工作生活条件恶劣等不平等现象，从而触动了广大美国公民的良知进而形成强的社会力量功不可没。而学者所起的作用是发展出一套理论能够证明政府的适当干预，维护弱势群体利益，平衡两极分化并不违宪，这样运动才能在宪法的框架下从容推进。此外美国人对于改良还有一种外在动力，这来自对在欧洲出现的社会主义洪水猛兽般的恐惧。在他们看来社会主义就是把现有制度打乱，财产重新分配，这间接促进他们主动进行各种改良。 接下来主要就是西奥多·罗斯福主导的各项改革： 改善劳动者生活和工作条件 反垄断，主要会死拆散了大的垄断财团 保护消费者，主要是食品安全和药品安全 反腐败和吏治改革 这里的几项措施我们都很熟悉，可是推进的过程我们几乎很少人知道，最为我所敬佩的是这些改革都不是一朝一夕的事，而且由于宪法保护私有财产不可侵犯，正因此使得很多改革推进起来并不是大刀阔斧式的，这些改革都是和平的、渐进的、以法治为基础的，就是说每一条改革都要通过一条法律固定下来，并且不依靠行政手段。不像中国的行政力量很强大，而且涉及范围很广，在改革初期固然显现出快速、高效的一面，可是这样的手法由于缺乏法律辅助，必然后继乏力，长远看可能适得其反。 总结起来说，改革不是一件立竿见影的事，但是在接下来的一二十年甚至更长的时间里可以慢慢起作用。改革并不是哪一个特别开明的政治家的一句话，或制定了特别好的政策，一下子就推开了，而是上下结合，应该说还是从群众运动来的。但这个群众运动并不是上面用一个政治口号发动的，而是每一个群体，特别是弱势群体，为自己生存状况的改善而努力，充分利用自己的公民权利，来维护自己权益或争取改善不公平的条件，这样慢慢地推动着社会一步步地前进。]]></content>
      <categories>
        <category>书籍</category>
      </categories>
      <tags>
        <tag>美国</tag>
        <tag>民主</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[读《美国十讲》前两讲]]></title>
    <url>%2F2014%2F11%2F03%2Fdaynote_20141103%2F</url>
    <content type="text"><![CDATA[这本书源于资中筠的关于美国问题的讲座的录音稿的后期修改、加工、补充、扩展，因此通俗、亲切、易懂，让我们在片面的认识美国情况下有种拨云见日的感觉。 看完前两讲给的最大印象是美国不是“打”出来的，而是“谈”出来的。最初是在1620年的有个标志性的“五月花时间”，就是在一条船上的英国未抵达美国之前商定的如何以后再美国互相帮助地生活下去，还通过一个《五月花公约》，可以说是民主集体的雏形。 接下来有意义的是联邦制宪会议，而且这次会议是在打赢独立战争后11年的举行的讨论是否要一个真正统一的国家还是仅仅维持现有的松散的联盟。此次讨论本是修改1777年的《联邦条款》，实际结果是完全重新制定了一部宪法。在确立了最大的前提——成立一个在各邦之上的政府的国家之后，开始的是一条一条的宪法的讨论，整个文本共经过569次表决历时116天才通过。其中所表现出最重要的一点规则是你反对的东西在众人表决以少数服从多数原则通过之后，你就不能再捣乱，但在此之前你可以尽情发表意见，无人压制你的言论。这是最基本的民主训练，对于理解美国的民主精神非常重要。 此外，在美国建国初期少数精英的功劳不得不提，以乔治·华盛顿为首，杰斐逊、富兰克林、汉密尔顿等都是学识、眼光、胸怀过人的杰出人物，他们的理念奠定了宪法的精神和立国之基，后来的发展都与此密不可分。因此像后来美国在对二战后一些国家典型的是韩国帮助引入民主政治制度都是当初美国立国时的基本思想——自由主义精神、宪法精神加上分权而治。 最后由于第一代的美国人基本上是从各地来讨生活的，都有冒险精神，伴之宪法体现的自由主义精神，充分发挥市场经济，使得美国较短时间在经济上就超过了英国。然而这样充分的市场竞争带来的社会问题是聘夫差距加大，两极分化严重，资本主义的弊端和社会矛盾都显现出来，而此之前的欧洲就已经出现了类似情况，因而诞生了社会主义的思想，此时在美国出现了改良主义思潮，美国历史进入一个新的阶段，详情请听下回分解。]]></content>
      <categories>
        <category>书籍</category>
      </categories>
      <tags>
        <tag>美国</tag>
        <tag>民主</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[爱上高木直子的书]]></title>
    <url>%2F2014%2F11%2F02%2Fdaynote_20141102%2F</url>
    <content type="text"><![CDATA[之前偶然间听网络电台，知道一本高木直子的书《一个人上东京》，主播没怎么介绍，只是说这本书讲的是一个人到大城市生活的经历。于是我便上亚马逊速速下单。 等到买回来之后，才发现是一本手绘本，才想起小时候除了看过我爸小时候买的一些连环画之外，便极少看漫画书。而现在感觉自己长大了，漫画书也不是我的菜了。可是我一翻，便爱不释手。看完了还一口气又买了《一个人住的每一天》《一个人住第5年》《第一次一个人旅行》。 这里面所讲述的是她独自一个人上东京的一些经历，其中不乏糗事。她有许多幻想，许多期待，想象着在东京生活的各种美好，然而在遭遇现实生活的打击下各种沮丧、无奈，但总是在哭过之后，依然站起来，想想一些开心的事情，最后坚持下来。总体给人的感受是，一个来东京讨生活的小姑娘，遇到各种挫折，在表现得很失败的状态之后，还能笑着度过，让人在心底开心一笑之余不禁生出不少暖意。 正是这样一本普普通通的小画本让人很有共鸣，让孤独的人在看到其实有更多的孤独的人之后，心底有了一丝安慰和激动。突然想起以前同学送我的一段话中写到的“世界上所有的孤独加在一起，是抵消了，还是加大了”类似的话，当时觉得很有意思，现在才是有切身体会。当在自己孤独之时，知晓世界上还有不少人和你此时一样在体会着孤独，你首先发现的是“你不是一个人在孤独”，然后便明白“孤独是自由的代价”，最后感觉“孤独还是蛮有意思的嘛”。 此外作者在后记中写的一段话—— 现在回想起来，自己当初会如此焦头烂额，也是因为急于发掘“上东京的意义”。虽然也会想干脆回老家算了，但一旦上了东京，要回老家也需要极大的勇气和决断力。因此，我一边告诉自己“再在东京努力一下下吧”，一边拭去泪水，勉强撑过每一天。 我表示非常赞同，我们有时候可能会小小鄙视在大城市生活了一段时间最后选择回老家的人，其实想来回老家也是要下一番决心的，而留在大城市的人也是仍然有不少担忧与害怕的。因此无论对于选择继续留在城市的还是选择回老家的人，我们都无法说谁更勇敢。至于那些还在两边徘徊的人们，我们真的需要尽快地下定决心，不要把时间都浪费在犹豫不决中了。]]></content>
      <categories>
        <category>书籍</category>
      </categories>
      <tags>
        <tag>孤独</tag>
        <tag>决定</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[每日一篇超过100篇纪念]]></title>
    <url>%2F2014%2F11%2F01%2Fdaynote_20141101%2F</url>
    <content type="text"><![CDATA[之前一直在想，我一定要坚持，其中好几次面临放弃，但终于及时地捡回来，对此我感到自豪。我因此一直想着什么时候能写到100篇，那就牛逼了，可是今天一看数字，竟然已经超了一篇了，不禁各种复杂心情。一是想不到原先以为的很难得目标居然就在眼前，二是感到不容易，毕竟几次遭遇放弃的念头且搁置了不少时日，不过最后有补上来不少。当然最终没能真正做到每日一篇，还有几天没有补上，因为实在不想充次，不想太随便。因此说没有什么是完美的，达不到完美没有关系，因为你尽力了，况且还有不少收获呢！ 下面截图做纪念——]]></content>
      <categories>
        <category>随笔</category>
      </categories>
      <tags>
        <tag>坚持</tag>
        <tag>纪念</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[将博客搜索引擎改为Swiftype]]></title>
    <url>%2F2014%2F10%2F31%2Fdaynote_20141031%2F</url>
    <content type="text"><![CDATA[之前博客用的是谷歌搜索，主题为chenall,今天突然发现hexo的官网用的搜索时Swiftype，感觉挺不错，便想试试。结果发现chenall的主题中已经集成了Swiftype，不过弄了很长时间没有弄出来，索性就照搬了官网的代码。 办法为修改chenall\layout\_widgets\search.ejs： 123456789101112131415161718&lt;div id="search-form-wrap"&gt; &lt;form class="input-group"&gt; &lt;input type="text" id="st-search-input" class="form-control" /&gt; &lt;span class="input-group-btn"&gt;&lt;button class="btn btn-default" type="search"&gt;&lt;i class="fa fa-search"&gt;&lt;/i&gt;&lt;/button&gt;&lt;/span&gt; &lt;/form&gt; &lt;script type="text/javascript"&gt; var Swiftype = window.Swiftype || &#123;&#125;; (function() &#123; Swiftype.key = '你在Swiftype官网注册后提供的key'; /** DO NOT EDIT BELOW THIS LINE **/ var script = document.createElement('script'); script.type = 'text/javascript'; script.async = true; script.src = "//s.swiftypecdn.com/embed.js"; var entry = document.getElementsByTagName('script')[0]; entry.parentNode.insertBefore(script, entry); &#125;()); &lt;/script&gt;&lt;/div&gt;]]></content>
      <categories>
        <category>技术</category>
      </categories>
      <tags>
        <tag>搜索</tag>
        <tag>Swiftype</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[保重身体]]></title>
    <url>%2F2014%2F10%2F30%2Fdaynote_20141030%2F</url>
    <content type="text"><![CDATA[今天又翻开了《囚徒健身》这本书，才想起这本书是在去年的这个时候再稍晚点买的，买回来就被其中各个训练身体部位的最终式所迷倒，想着那就是我的对身体力量训练的终极目标，但是书中也强调一步一步来，一式一式练，切勿操之过急，要稳扎稳打。 于是我就照建议的从俯卧撑练起，大概用了一个多月的时间练到两组X10个的窄距俯卧撑，而在刚开始照其中的标准我一个也做不了，算是不小的进步。可是紧接着因为工作出差加上身体之前就有点小问题，强度逐渐增大的锻炼貌似加重了我问题，因此便逐渐停止了训练，到今年的上半年，身体的问题有所好转，又开始拿起，可始终停留在窄距俯卧撑那一式，很难再有所进步。接着又放弃了训练转而每周跑步两三次，可是由于每天下班回来较晚，吃完饭等消化差不多了再跑已经很晚了，所以最多也就是周六、周日泡一泡，又是加班的话那就一周顶多一次了。但是接下来我报名参加了公司组队的园区足球比赛，打了几场，虽然上场才那么半小时甚至不到，但是感觉好累，因而把锻炼重新正式提倡了日程。 可是基于以往的经验，锻炼计划的中止一方面出于不规律的工作、生活，另一方面出于缺乏兴趣来支持。既然第一点无力改变，那么只能从兴趣着手，于是我捡起了大二以后就未打的羽毛球，开始每个周末和老同学在附近的球馆打了一个小时，大汗淋漓的同时让我有了追求卓越的积极心态，以至于在工作日下班后还会在家里对着墙壁联系。在每天都固定的锻炼中找到耐力提升的快乐，并且发现身体的小问题、老问题大大改善。关键在于这是一个良性循环，你越是在锻炼中收获到身体强健带来的那份舒适与自信以及技巧提升的快乐，你越是会更加积极地投入到锻炼汇总，久而久之，你会成为一个热爱运动、热爱自己身体进而热爱生活的人。 到此，我甚至稍有变态地庆幸自己在刚开始工作的时候身体变出现了一些小状况，这让我更加珍惜身体，热爱锻炼、更早地体会到健康的重要意义。而不是像好多人那样，仗着年轻、忽视身体而全身心投入工作，到头来可能就是在事业有成时再回头补身体，这岂非是一条大大的弯路？ 所以说，年轻要经得起折腾，更要去珍惜。]]></content>
      <categories>
        <category>随笔</category>
      </categories>
      <tags>
        <tag>健身</tag>
        <tag>计划</tag>
        <tag>幸运</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[粗读《中国共产党第十八届中央委员会第四次全体会议公报》]]></title>
    <url>%2F2014%2F10%2F29%2Fdaynote_20141029%2F</url>
    <content type="text"><![CDATA[第一次读公报看了这么长时间的韩国的民主进程的书，突然对国内的政治也有了一些不同以往的兴趣，特此读了一些此次全会的公报。没有太多专业的解读，只有两点自己的粗略的见解—— 以往国家的法制建设不够重视，而对于经济在宏观上渐渐稳定的情况下，当代的个人意识更加强烈，改革开放初期以权力推动改革的思路必将是危险的，因此法制的有关建设迫在眉睫； 中国普罗大众的政治意识、民主参与意识、社会意识等方面远远落后于经济的发展速度，因此在这样的情况下中国的各种决策、执行还需要靠政府来推动，如何真正让民众的意识觉醒，加强参与，减轻政府的负担，这是一个长期但是绝对重要的一个话题。 附上公报内容中国共产党第十八届中央委员会第四次全体会议，于2014年10月20日至23日在北京举行。出席这次全会的有，中央委员199人，候补中央委员164人。中央纪律检查委员会常务委员会委员和有关方面负责同志列席了会议。党的十八大代表中部分基层同志和专家学者也列席了会议。全会由中央政治局主持。中央委员会总书记习近平作了重要讲话。全会听取和讨论了习近平受中央政治局委托作的工作报告，审议通过了《中共中央关于全面推进依法治国若干重大问题的决定》。习近平就《决定（讨论稿）》向全会作了说明。全会充分肯定党的十八届三中全会以来中央政治局的工作。一致认为，党的十八届三中全会以来，国际形势错综复杂，国内改革发展任务极为繁重，中央政治局全面贯彻党的十八大和十八届一中、二中、三中全会精神，高举中国特色社会主义伟大旗帜，以邓小平理论、“三个代表”重要思想、科学发展观为指导，深入贯彻习近平总书记系列重要讲话精神，团结带领全党全军全国各族人民，统筹国内国际两个大局，牢牢把握稳中求进工作总基调，保持战略定力，以全面深化改革推动各项工作，注重从思想上、制度上谋划涉及改革发展稳定、内政外交国防、治党治国治军的战略性、全局性、长远性问题。中央政治局适应经济发展新常态，创新宏观调控思路和方式，积极破解经济社会发展难题，着力保障和改善民生，基本完成党的群众路线教育实践活动，坚定不移反对腐败，有效应对各种风险挑战，各方面工作取得新成效，党和国家事业发展打开新局面。全会高度评价长期以来特别是党的十一届三中全会以来我国社会主义法治建设取得的历史性成就，研究了全面推进依法治国若干重大问题，认为全面建成小康社会、实现中华民族伟大复兴的中国梦，全面深化改革、完善和发展中国特色社会主义制度，提高党的执政能力和执政水平，必须全面推进依法治国。全会提出，面对新形势新任务，我们党要更好统筹国内国际两个大局，更好维护和运用我国发展的重要战略机遇期，更好统筹社会力量、平衡社会利益、调节社会关系、规范社会行为，使我国社会在深刻变革中既生机勃勃又井然有序，实现经济发展、政治清明、文化昌盛、社会公正、生态良好，实现我国和平发展的战略目标，必须更好发挥法治的引领和规范作用。全会强调，全面推进依法治国，必须贯彻落实党的十八大和十八届三中全会精神，高举中国特色社会主义伟大旗帜，以马克思列宁主义、毛泽东思想、邓小平理论、“三个代表”重要思想、科学发展观为指导，深入贯彻习近平总书记系列重要讲话精神，坚持党的领导、人民当家作主、依法治国有机统一，坚定不移走中国特色社会主义法治道路，坚决维护宪法法律权威，依法维护人民权益、维护社会公平正义、维护国家安全稳定，为实现“两个一百年”奋斗目标、实现中华民族伟大复兴的中国梦提供有力法治保障。全会提出，全面推进依法治国，总目标是建设中国特色社会主义法治体系，建设社会主义法治国家。这就是，在中国共产党领导下，坚持中国特色社会主义制度，贯彻中国特色社会主义法治理论，形成完备的法律规范体系、高效的法治实施体系、严密的法治监督体系、有力的法治保障体系，形成完善的党内法规体系，坚持依法治国、依法执政、依法行政共同推进，坚持法治国家、法治政府、法治社会一体建设，实现科学立法、严格执法、公正司法、全民守法，促进国家治理体系和治理能力现代化。实现这个总目标，必须坚持中国共产党的领导，坚持人民主体地位，坚持法律面前人人平等，坚持依法治国和以德治国相结合，坚持从中国实际出发。全会强调，党的领导是中国特色社会主义最本质的特征，是社会主义法治最根本的保证。把党的领导贯彻到依法治国全过程和各方面，是我国社会主义法治建设的一条基本经验。我国宪法确立了中国共产党的领导地位。坚持党的领导，是社会主义法治的根本要求，是党和国家的根本所在、命脉所在，是全国各族人民的利益所系、幸福所系，是全面推进依法治国的题中应有之义。党的领导和社会主义法治是一致的，社会主义法治必须坚持党的领导，党的领导必须依靠社会主义法治。只有在党的领导下依法治国、厉行法治，人民当家作主才能充分实现，国家和社会生活法治化才能有序推进。依法执政，既要求党依据宪法法律治国理政，也要求党依据党内法规管党治党。全会明确了全面推进依法治国的重大任务，这就是：完善以宪法为核心的中国特色社会主义法律体系，加强宪法实施；深入推进依法行政，加快建设法治政府；保证公正司法，提高司法公信力；增强全民法治观念，推进法治社会建设；加强法治工作队伍建设；加强和改进党对全面推进依法治国的领导。全会提出，法律是治国之重器，良法是善治之前提。建设中国特色社会主义法治体系，必须坚持立法先行，发挥立法的引领和推动作用，抓住提高立法质量这个关键。要恪守以民为本、立法为民理念，贯彻社会主义核心价值观，使每一项立法都符合宪法精神、反映人民意志、得到人民拥护。要把公正、公平、公开原则贯穿立法全过程，完善立法体制机制，坚持立改废释并举，增强法律法规的及时性、系统性、针对性、有效性。坚持依法治国首先要坚持依宪治国，坚持依法执政首先要坚持依宪执政。健全宪法实施和监督制度，完善全国人大及其常委会宪法监督制度，健全宪法解释程序机制。完善立法体制，加强党对立法工作的领导，完善党对立法工作中重大问题决策的程序，健全有立法权的人大主导立法工作的体制机制，依法赋予设区的市地方立法权。深入推进科学立法、民主立法，完善立法项目征集和论证制度，健全立法机关主导、社会各方有序参与立法的途径和方式，拓宽公民有序参与立法途径。加强重点领域立法，加快完善体现权利公平、机会公平、规则公平的法律制度，保障公民人身权、财产权、基本政治权利等各项权利不受侵犯，保障公民经济、文化、社会等各方面权利得到落实。实现立法和改革决策相衔接，做到重大改革于法有据、立法主动适应改革和经济社会发展需要。全会提出，法律的生命力在于实施，法律的权威也在于实施。各级政府必须坚持在党的领导下、在法治轨道上开展工作，加快建设职能科学、权责法定、执法严明、公开公正、廉洁高效、守法诚信的法治政府。依法全面履行政府职能，推进机构、职能、权限、程序、责任法定化，推行政府权力清单制度。健全依法决策机制，把公众参与、专家论证、风险评估、合法性审查、集体讨论决定确定为重大行政决策法定程序，建立行政机关内部重大决策合法性审查机制，建立重大决策终身责任追究制度及责任倒查机制。深化行政执法体制改革，健全行政执法和刑事司法衔接机制。坚持严格规范公正文明执法，依法惩处各类违法行为，加大关系群众切身利益的重点领域执法力度，建立健全行政裁量权基准制度，全面落实行政执法责任制。强化对行政权力的制约和监督，完善纠错问责机制。全面推进政务公开，坚持以公开为常态、不公开为例外原则，推进决策公开、执行公开、管理公开、服务公开、结果公开。全会提出，公正是法治的生命线。司法公正对社会公正具有重要引领作用，司法不公对社会公正具有致命破坏作用。必须完善司法管理体制和司法权力运行机制，规范司法行为，加强对司法活动的监督，努力让人民群众在每一个司法案件中感受到公平正义。完善确保依法独立公正行使审判权和检察权的制度，建立领导干部干预司法活动、插手具体案件处理的记录、通报和责任追究制度，建立健全司法人员履行法定职责保护机制。优化司法职权配置，推动实行审判权和执行权相分离的体制改革试点，最高人民法院设立巡回法庭，探索设立跨行政区划的人民法院和人民检察院，探索建立检察机关提起公益诉讼制度。推进严格司法，坚持以事实为根据、以法律为准绳，推进以审判为中心的诉讼制度改革，实行办案质量终身负责制和错案责任倒查问责制。保障人民群众参与司法，在司法调解、司法听证、涉诉信访等司法活动中保障人民群众参与，完善人民陪审员制度，构建开放、动态、透明、便民的阳光司法机制。加强人权司法保障。加强对司法活动的监督，完善检察机关行使监督权的法律制度，加强对刑事诉讼、民事诉讼、行政诉讼的法律监督，完善人民监督员制度，绝不允许法外开恩，绝不允许办关系案、人情案、金钱案。全会提出，法律的权威源自人民的内心拥护和真诚信仰。人民权益要靠法律保障，法律权威要靠人民维护。必须弘扬社会主义法治精神，建设社会主义法治文化，增强全社会厉行法治的积极性和主动性，形成守法光荣、违法可耻的社会氛围，使全体人民都成为社会主义法治的忠实崇尚者、自觉遵守者、坚定捍卫者。推动全社会树立法治意识，深入开展法治宣传教育，把法治教育纳入国民教育体系和精神文明创建内容。推进多层次多领域依法治理，坚持系统治理、依法治理、综合治理、源头治理，深化基层组织和部门、行业依法治理，支持各类社会主体自我约束、自我管理，发挥市民公约、乡规民约、行业规章、团体章程等社会规范在社会治理中的积极作用。建设完备的法律服务体系，推进覆盖城乡居民的公共法律服务体系建设，完善法律援助制度，健全司法救助体系。健全依法维权和化解纠纷机制，建立健全社会矛盾预警机制、利益表达机制、协商沟通机制、救济救助机制，畅通群众利益协调、权益保障法律渠道。完善立体化社会治安防控体系，保障人民生命财产安全。全会提出，全面推进依法治国，必须大力提高法治工作队伍思想政治素质、业务工作能力、职业道德水准，着力建设一支忠于党、忠于国家、忠于人民、忠于法律的社会主义法治工作队伍。建设高素质法治专门队伍，把思想政治建设摆在首位，加强立法队伍、行政执法队伍、司法队伍建设，畅通立法、执法、司法部门干部和人才相互之间以及与其他部门具备条件的干部和人才交流渠道，推进法治专门队伍正规化、专业化、职业化，完善法律职业准入制度，建立从符合条件的律师、法学专家中招录立法工作者、法官、检察官制度，健全从政法专业毕业生中招录人才的规范便捷机制，完善职业保障体系。加强法律服务队伍建设，增强广大律师走中国特色社会主义法治道路的自觉性和坚定性，构建社会律师、公职律师、公司律师等优势互补、结构合理的律师队伍。创新法治人才培养机制，形成完善的中国特色社会主义法学理论体系、学科体系、课程体系，推动中国特色社会主义法治理论进教材进课堂进头脑，培养造就熟悉和坚持中国特色社会主义法治体系的法治人才及后备力量。全会强调，党的领导是全面推进依法治国、加快建设社会主义法治国家最根本的保证。必须加强和改进党对法治工作的领导，把党的领导贯彻到全面推进依法治国全过程。坚持依法执政，各级领导干部要带头遵守法律，带头依法办事，不得违法行使权力，更不能以言代法、以权压法、徇私枉法。健全党领导依法治国的制度和工作机制，完善保证党确定依法治国方针政策和决策部署的工作机制和程序，加强对全面推进依法治国统一领导、统一部署、统筹协调，完善党委依法决策机制。各级人大、政府、政协、审判机关、检察机关的党组织要领导和监督本单位模范遵守宪法法律，坚决查处执法犯法、违法用权等行为。加强党内法规制度建设，完善党内法规制定体制机制，形成配套完备的党内法规制度体系，运用党内法规把党要管党、从严治党落到实处，促进党员、干部带头遵守国家法律法规。提高党员干部法治思维和依法办事能力，把法治建设成效作为衡量各级领导班子和领导干部工作实绩重要内容、纳入政绩考核指标体系，把能不能遵守法律、依法办事作为考察干部重要内容。推进基层治理法治化，发挥基层党组织在全面推进依法治国中的战斗堡垒作用，建立重心下移、力量下沉的法治工作机制。深入推进依法治军、从严治军，紧紧围绕党在新形势下的强军目标，构建完善的中国特色军事法治体系，提高国防和军队建设法治化水平。依法保障“一国两制”实践和推进祖国统一，保持香港、澳门长期繁荣稳定，推进祖国和平统一，依法保护港澳同胞、台湾同胞权益。加强涉外法律工作，运用法律手段维护我国主权、安全、发展利益，维护我国公民、法人在海外及外国公民、法人在我国的正当权益。全会分析了当前形势和任务，强调全党同志要把思想和行动统一到中央关于全面深化改革、全面推进依法治国重大决策部署上来，审时度势、居安思危，既要有抓住和用好重要战略机遇期推进改革发展的战略定力，又要敏锐把握国内外环境的变化，以钉钉子精神，继续做好保持经济持续健康发展工作，继续做好改善和保障民生特别是帮扶困难群众工作，继续做好作风整改工作，继续做好从严治党工作，继续做好保持社会和谐稳定工作，为明年开局打好基础。全会按照党章规定，决定递补中央委员会候补委员马建堂、王作安、毛万春为中央委员会委员。全会审议并通过了中共中央纪律检查委员会关于李东生、蒋洁敏、王永春、李春城、万庆良严重违纪问题的审查报告，审议并通过了中共中央军事委员会纪律检查委员会关于杨金山严重违纪问题的审查报告，确认中央政治局之前作出的给予李东生、蒋洁敏、杨金山、王永春、李春城、万庆良开除党籍的处分。全会号召，全党同志和全国各族人民紧密团结在以习近平同志为总书记的党中央周围，高举中国特色社会主义伟大旗帜，积极投身全面推进依法治国伟大实践，开拓进取，扎实工作，为建设法治中国而奋斗！]]></content>
      <categories>
        <category>杂说</category>
      </categories>
      <tags>
        <tag>政府</tag>
        <tag>社会</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[天，可真的凉了]]></title>
    <url>%2F2014%2F10%2F28%2Fdaynote_20141028%2F</url>
    <content type="text"><![CDATA[这两天的天气开始变得有些凉，让人在出门的时候不得不披上一件外套，而进了地铁站之后却又不得不脱掉，因为那里面人气旺盛。 生活在大都市，寒冷总是要来得晚一些，让人在某天忽然感到有点冷时其实家乡的人早已多穿了好几件衣服，便觉得时光飞逝，离冬天已大概不远了吧。 我不喜欢冷的季节，冷在我印象中是不能愉快地自在玩耍，且家乡的冷季多伴有连绵不断的雨水，而炎热的夏季也不会，更重要的是暑假可比寒假长多了，到现在还清晰地记得在夏日里和小伙伴们愉快游戏，到了傍晚洗完澡便召唤几个来锻炼脑力——斗地主，直到天黑，边去散步，或者把家里的电视机半岛外面和他们一起分享喜欢的节目。然而寒假里由于家里做着生意，过年之际生意也是更加红火，而我就不得不帮一份忙，晚上经常由于江南的湿冷天气多而蜷缩在火桶里烤火。不过幸好等过了大年三十，打工的人又往城里赶了，家里生意淡了不少，我便又有了不少可玩的时间，只不过比之暑假还犹不及哇。 今年即将在上海度过第二个冬天，想想去年的冬天好像挺冷的，不知这次会更冷吗？]]></content>
      <categories>
        <category>随笔</category>
      </categories>
      <tags>
        <tag>冷</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[大数据可视化工具——echarts]]></title>
    <url>%2F2014%2F10%2F27%2Fdaynote_20141027%2F</url>
    <content type="text"><![CDATA[EChartshttp://echarts.baidu.com 基于Canvas，纯Javascript图表库，提供直观，生动，可交互，可个性化定制的数据可视化图表。创新的拖拽重计算、数据视图、值域漫游等特性大大增强了用户体验，赋予了用户对数据进行挖掘、整合的能力。 ———— 大数据时代，重新定义数据图表的时候到了 LICENSE:https://github.com/ecomfe/echarts/blob/master/LICENSE.txt ArchitectureECharts (Enterprise Charts 商业产品图表库) 提供商业产品常用图表库，底层基于ZRender，创建了坐标系，图例，提示，工具箱等基础组件，并在此上构建出折线图（区域图）、柱状图（条状图）、散点图（气泡图）、饼图（环形图）、K线图、地图、和弦图以及力导向布局图，同时支持任意维度的堆积和多图表混合展现。 (IE8- supported by excanvas ) 特色 我们诚挚邀请你翻阅这份在线文档 《 Why ECharts ? 》 你可以从中更直观的体验到ECharts的特性以及快速浏览到所有图表类型。 *文档中展现的个别特性在IE8-中并没有得到支持，所以建议使用IE9+、chrome、safari、firefox或opear等高级浏览器阅读这份文档。 混搭混搭的图表会更具表现力也更有趣味，ECharts提供的图表（共9类14种）支持任意混搭： 折线图（区域图）、柱状图（条状图）、散点图（气泡图）、K线图、饼图（环形图）、雷达图、地图、和弦图、力导布局图。 混搭情况下一个标准图表：包含唯一图例、工具箱、数据区域缩放、值域漫游模块，一个直角坐标系（可包含一条或多条类目轴线，一条或多条值轴线，最多上下左右四条） 拖拽重计算拖拽重计算特性（专利）带来了数据统计图表从未有过的用户体验，允许用户对统计数据进行有效的提取、整合，甚至在多个图表间交换数据，赋予了用户对数据进行挖掘、整合的能力。 数据视图如果你所呈现的数据足够让用户所关心，那么他们将不满足于查看可视化的图表，要去逐一迎合他们下载保存，数据分享，加工整合已有数据等等需求？ 或许你只要给予一个“,”分隔的数据文本他们就懂了，这就是ECharts的数据视图！当然，你可以重载数据视图的输出方法，用你独特的方式去呈现数据。 如果你的用户足够的高端，你甚至可以打开数据视图的编辑功能，跟拖拽重计算相比，这可是批量的数据修改！ 动态类型切换很多图表类型本身所表现的能力是相似的，但由于数据差异、表现需求和个人喜好的不同导致最终图表所呈现的张力又大不一样，比如折线图和柱状图的选择,系列数据是堆叠还是平铺总是让人头疼。 ECharts提供了动态类型切换，让用户随心所欲的切换到他所需要的图表类型和堆叠状态。 图例开关多系列数据的同时展现呈现出丰富内容，但如何让用户切换到他所关心的个别系列上？ ECharts提供了方便快捷的多维度图例开关，可以随时切换到你所关心的数据系列。 数据区域选择数据可以是无限的，但显示空间总是有限的，数据区域选择组件提供了大数据量中漫游的能力，让用户选择并呈现他所关心的数据区域。 配合随动的均值（极值）标线，标注展现强大的数据剖析能力。 多图联动多系列数据在同一个直角系内同时展现有时候会产生混乱，但他们又存在极强的关联意义不可分离？ ECharts提供了多图联动的能力（connect），能做的可不仅仅是鼠标划过的详情显示，连接的多个图表会共享组件事件并且实现了保存图片时的自动拼接。 值域漫游基于坐标的图表（如地图、散点图）通过色彩变化表现数值的大小能直观形象的展示数据分布。 但如何聚焦到我所关心的数值上？我们创造了称为值域漫游的功能，让你可以轻松进行数值筛选。 炫光特效我们知道，很多时候我们需要一些吸引眼球的能力。 ECharts支持标注标线的炫光特效，特别用在地图上轻松实现百度迁徙数据可视化特效 大规模散点图如何展现成千上百万的离散数据从而找出他们的分布和聚类？貌似除了用专业的统计工具（如MATLAB）外别无选择？ 不，ECharts发明了基于像素的大规模散点图（专利），一个900 x 400的散点区域就能够毫不重复的呈现36万组数据，这对于常规的应用，用现代浏览器就足以轻松展现百万级的散点数据！ 动态数据添加如果你需要展示有实时变化的数据，相信这个动态接口会对你很有帮助。 标线辅助趋势线？平均线？未来走势？修正值？有需求用户自然知道用意~ 提供标线辅助在K线图中可是必要的功能！是的，K线图我们正在开发中~ 多维度堆积支持多系列，多维度的数据堆积，配合自动伸缩的图形实体和直角坐标系，能呈现出更有内涵的统计图表~ 子区域地图模式地图类型支持world，china及全国34个省市自治区。同时支持子区域模式，通过主地图类型扩展出所包含的子区域地图，轻易输出全球176个国家地区和全国600多个省市区域简图。 GeoJson地图扩展内置地图由标准GeoJson地理数据并经过高效的压缩算法压缩生成的地图数据（大小仅为标准geoJson的30%左右）驱动而来。如果内置地图类型或数据如果并未满足你的项目需要，可通过简单动态注册产生你所需要的新类型。 个性化定制500+个可配置选项结合多级控制设计满足高度定制的个性化需求。 事件交互可以捕获的用户交互和数据变化事件实现图表与外界的联动。try this &raquo;]]></content>
      <categories>
        <category>技术</category>
      </categories>
      <tags>
        <tag>js</tag>
        <tag>大数据</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[无法评价他人]]></title>
    <url>%2F2014%2F10%2F26%2Fdaynote_20141026%2F</url>
    <content type="text"><![CDATA[今天看朴赞郁的《我要复仇》，最大的感受是命运的无奈，各个小人物因为一些个不得已夹杂着巧合与误解，造成仇恨，点燃了人性的罪恶之火，终于所有人都在其中付出了惨重的代价，然而回头想想到底是何造成了这一切，他们处于其中的人无法得知，片尾宋大叔疑惑的目光更让人深感这其中的荒诞。 说了这么多，其实想来生活中也是有诸多的无奈与荒诞，只不过我们身处其中，顶多所知所感也是个人熟知的狭小范围，而难窥得你所处的这整个链条上发生的全局事件。 不过幸好，有了电影，我们可以当观众，当裁判，指点镜头下的人的是与不是，因为他们的全部我们都看在眼里。而现实中，他人对于我们每个人都只展现的是我们听见所认为的那样，因此就有说“我们永远无法评价他人”，应该就是出于这样的考虑吧。]]></content>
      <categories>
        <category>电影</category>
      </categories>
      <tags>
        <tag>电影</tag>
        <tag>韩国</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[少走点弯路就一定直（值）吗]]></title>
    <url>%2F2014%2F10%2F25%2Fdaynote_20141025%2F</url>
    <content type="text"><![CDATA[想来，要准备做一项决定时，却发现迟迟难以下手，仔细揣摩其中缘由，恍然大悟，人生匆匆已二十余载，然真正由自己做主之时却屈指可数，就是这样从小拇指数到无名指即止的几件事中，也是结局早已注定的，毫无两难境地处之的经验可言。因此想来虽说平坦无奇是一种幸福，却也因为那么的平淡而无任何回味之时的千回百转的那份激动，总觉得少点什么。 当然，很多人说自己这么多年走过来绕了一圈又回到原点，也因而规劝年轻的我们直来直往，少走点弯路。可是谁又能说别人的弯路之后就不会是直路，亦或玩到在别人看来就是直路呢？更要紧的是究竟是弯路还是直路，他人说了没用，只有自己走过才会有答案。 因此，当你有所疑惑，前面的路看不清楚，不妨慢下来，停下来，绕着现在所处的点转上一圈，或许就能发现自己所处的为之在心中究竟居于何地位。 那么，你想好了吗？]]></content>
      <categories>
        <category>杂说</category>
      </categories>
      <tags>
        <tag>人生</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[当生活成倒计时之后]]></title>
    <url>%2F2014%2F10%2F24%2Fdaynote_20141024%2F</url>
    <content type="text"><![CDATA[虽然之前有发现到自己忽视了身边最寻常不过的美景，如一只蝴蝶优雅停在一朵花瓣上，与花融为一体，那么自然而美丽。可是这毕竟需要时常游离于生活之外方可看得见，大多数人都不曾注意到，好像从来就没有发生过。 因此我之前对自己的建议是时常提醒自己脚步放慢一点，停下来看一看周围的环境正在发生的静悄悄的变化。然而这终究需要一个提醒，可稍不留神就已经走得很远，回头再看，背景已经不是那么清晰了。 但是最近我给自己在这座城市驻留的时间加上了一个期限（当然了，显然不是一万年），再次在这座城市继续游荡，好像有些东西发生了变化，这种感觉在求学阶段有过两次，一次是在高三的时候，另一次是在大三的时候。两次同样的心态的是想着离开这里已是指日可待，而且身边的人和事都将变化，因而心胸都放得开阔些了，不再执着于一些小事与纠纷。同时更重要也是最重要的那就是十分地珍惜周遭的一切，哪怕多看一眼都是好的，因为我知道这些都将成为记忆中最美好的一部分，那我何不此刻就多留意一些以便加深对此的印象呢？]]></content>
      <categories>
        <category>随笔</category>
      </categories>
      <tags>
        <tag>生活</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[男人也需要注意外表，进而注重气质]]></title>
    <url>%2F2014%2F10%2F23%2Fdaynote_20141023%2F</url>
    <content type="text"><![CDATA[问题今天看到锵锵三人行提到赵灵敏的《中国男人配不上中国女人?》，便马上上网找到这篇文章来看。抛除其合理性不说，一个显眼的“配不上”的字眼便及其容易遭到广大男性同胞的驳斥，大多持的观点是男人不容易，很难顾得上外表，强调的是社会给男人的压力让男人没有时间和精力来注意形象及气质的培养。 从我个人来看，作者并非没有考虑到这层原因，之所以用这样的标题来也是为了让更多的中国男人注意到这个问题，而不是简单的批评中国男人。据她的文章，我总结了“中国男人配不上中国女人”的原因如下： 社会原因：男性仍然在社会占主导地位，他们承受了来自事业、家庭上的更多压力，无暇顾及个人的外表修饰；社会普遍的价值观念对于男人最大的要求是要挣钱养家，更高的事业有成，而对于外表没有特别的要求。 女人原因：大部分女人对于男人的身材外貌容忍度较高，有蝴蝶网时尚论坛（貌似不能访问了，反正我是没有）的调查报告为证: 男人原因：上层社会的男人去的多的是各种会所而非健身房，中下层的男人大多通过自身努力（考大学、职业培训）从农村到城市来，一些个人生活的习惯难以发生很大的变化来适应现代化城市的标准。 思考不管原因如何，说压力也好，男人不容易也好。只要我们在满足基本生活的同时，还有对于美的追求的欲望，那么需要做的就是培养对于追求美的能力和习惯。只有习惯于保持对于美的不懈追求，才能真正做到平时的生活习惯中改变到对于自身外表的注意，进而注重对于自身气质的培养。 虽说不要过于注重外表而忽略个人品质，可是除了先天的相貌无法改变之外，我们对于外表的努力还是有不少可走的途径的。正如“没有丑女人，只有懒女人”，我觉得这句话也同样适用于男人，也应该引起广大男性同胞的注意。此外，我们对于自身外表的要求，并不是说一味的打扮的多么出众帅气，而应该努力的方向是通过培养健康的作息，养成个人的卫生习惯，在此基础上做一些修饰，举止投足之上都要有所提升，同时对于别人的礼貌上也有所注意，总之是提高个人的表现气质，做一个内外兼修的绅士。]]></content>
      <categories>
        <category>杂说</category>
      </categories>
      <tags>
        <tag>男人</tag>
        <tag>女人</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[健身之道]]></title>
    <url>%2F2014%2F10%2F22%2Fdaynote_20141022%2F</url>
    <content type="text"><![CDATA[请记住，你当然可以找一个健身伙伴一起完成我的计划，但永远不要依赖他/她——那不过是另一更拐杖，另一个不能在任何你想要的时间、地点独自锻炼的借口。在我所认识的真正健康的人中，有99%都是自己一个人锻炼的。 你需要在精神上完全地独立，才能取得长期成功。也只有你能感受你自己的肌肉、心肺和筋骨的感觉，最终只有你能使自己的身材变好。你所需要的一切就是：你自己。 你永远不会等到完美的健身时间和健身条件。你要主动创造它们，就像我们每天、每分、每秒都在寻找不锻炼的借口一样。 如果你在早晨锻炼，闹钟上的止闹铃按钮会诱惑你，把你引向身材走样的平庸生活。起床锻炼还是关掉闹铃？我们面临抉择：是再睡30分钟，还是开始健身？你想练出最棒的身材，但是你真的很累，昨晚工作的半夜，而今天更忙……理由很多，我们都遇到过这种情况。 你想练出最棒的身材，但你不愿意放弃30分钟的舒适；你想变瘦却不愿意改变不健康的饮食习惯；你想健身但也想坐在沙发里休息……这样的例子不胜枚举。你的大脑制造借口的能力高得惊人。到底什么对你更重要：你的目标还是阻碍你实现目标的那些东西？ 下一次你因为某个理由而取消锻炼的时候，你就明白了：对你来说，那个理由比你为自己设定的目标更重要。你失败了。 我一次又一次地见到这样的事情。放弃和失败很快就会成为习惯。我们会越来越容易让步，而如果每次我们能不向自己的软弱低头，我们的担当和决心就会越来越强。 一旦完成我的简短锻炼，你就会获得巨大的收益：紧张的情绪一扫而空，身心如获新生，自信大增，能使你情绪高涨的内啡肽在你体内充盈。这就是把借口和身外世界放在一边，为自己拿出几分钟时间的结果，绝对物超所值。 永不言弃和保持一个成功者的心态事关长远的目标能否实现。一旦你清楚地知道自己想要什么——无论是更大的肌肉、小一号的腰围、更好看的腿还是连续做5个倒立撑——你就必须立即制定计划，并按计划锻炼。 没有针对目标制定计划是一个常见的错误。在军事上，任务计划是逆向制定的。在目标完全明确之后，你从目标达到时的行动开始，反向计划任务成功的标准是什么以及达到目标所应采取的手段。之后，计划的执行只是一个坚持不放弃的过程。]]></content>
      <categories>
        <category>书籍</category>
      </categories>
      <tags>
        <tag>放弃</tag>
        <tag>坚持</tag>
        <tag>健身</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[利用google翻译编写shell进行翻译]]></title>
    <url>%2F2014%2F10%2F21%2Fdaynote_20141021%2F</url>
    <content type="text"><![CDATA[多多练习一些小工具的编写当我一心钻在编程里的时候，什么东西不会就上网找，其实真的很难开阔你的思路和眼界，因此从今日起要多多放开思想，有空编写一些实用的小工具，也是一种学习的好途径。 拿来主义参见xiaoxins的Terminal 版的google translate 拿来容易，但要注意到问题用了之后，发现 translate.google.com会跳到translate.google.cn,果断修改； 其次当翻译的句子的单词数超过7个时，后面单词的翻译就会有问题，经过检查是key=$key&quot;%20&quot;$(eval echo &quot;\$$arg&quot;)读取参数时不对，对于$10会被读作$1”0”，不过这个问题我没有解决，而是用了别的方法。 具体代码123456789101112131415161718192021222324252627282930313233343536373839404142#!/usr/bin/env bash if [ &quot;$#&quot; -lt &quot;3&quot; ]; then echo &apos;usage translate ftom_lang to_lang word&apos; echo &apos;Ex: gtrans en zh-cn hehe&apos; exitfi #headers#这堆http的请求头还是有必要添加的，不然给你返回些意想不到的结果出来UserAgent=&quot;Mozilla/5.0 (X11; Linux i686) AppleWebKit/537.1 (KHTML, like Gecko) Chrome/21.0.1180.81 Safari/537.1&quot;Referer=&quot;http://translate.google.cn/&quot;AcceptEncoding=&quot;gzip,deflate&quot;AcceptCharset=&quot;UTF-8,*;q=0.5&quot;Accept=&quot;text/html,*/*;q=0.1&quot; #query#这里把第三个参数开始都视为要翻译的内容sl=$1;tl=$2key=$3until [ $# -eq 3 ]do key=$key&quot;%20&quot;$4 shiftdoneecho &quot;Querying: &quot;`echo $key|sed -e &apos;s/%20/ /g;&apos;` #这里获取网页并把结果解压url=&quot;http://translate.google.cn/?sl=$sl&amp;tl=$tl&amp;text=$key&quot; content=`curl -s \ -H &quot;User-Agent:$UserAgent&quot;\ -H &quot;Referer:$Referer&quot;\ -H &quot;Accept-Encoding:$AcceptEncoding&quot;\ -H &quot;Accept-Charset:$AcceptCharset&quot;\ -H &quot;Accept:$Accept&quot;\ &quot;$url&quot;\ |gunzip` #用sed把我要的东西过滤出来#charset=`echo $content|sed -e &apos;s/.*&lt;meta.*charset=\([^&quot;;]*\)[&quot;;].*/\1/g&apos;`result_box=`echo $content|sed -e &apos;s/.*&lt;span.*id=result_box[^&gt;]*&gt;[^&lt;]*&lt;span[^&gt;]*&gt;\([^&lt;]*\)&lt;.*/\1/g&apos;`echo &apos;Result: &apos;$result_box]]></content>
      <categories>
        <category>技术</category>
      </categories>
      <tags>
        <tag>linux</tag>
        <tag>shell</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Node.js Style Guide]]></title>
    <url>%2F2014%2F10%2F20%2Fdaynote_20141020%2F</url>
    <content type="text"><![CDATA[说明接下来的内容全部都是copy的，都是一些标准的建议，初学者只好拿来膜拜了。这是一份关于如何写出一致且美观的 Node.js 代码的风格指南。它从社区最流行的写法中抽取出来，同时融入了部分个人观点。 这份指南由 Felix 编写。通过 CC BY-SA 3.0 发布。你可以 fork 这份指南，并针对自己的需求的进行部分的调整。 中文指南由 dead_horse 翻译，同时根据个人和团队经验有部分增加条目。 2空格缩进使用2个空格而不是 tab 来进行代码缩进，同时绝对不要混用空格和 tab 。 Sublime Text 2 设置(perfernces &gt; Settings - User)： 12&quot;tab_size&quot;: 2,&quot;translate_tabs_to_spaces&quot;: true 换行使用 UNIX 风格的换行符 (\n)，同时在每个文件的结尾添加一个换行符。Windows 风格的换行符 (\r\n) 是绝对禁止出现在任何项目中的。 Sublime Text 2 设置(perfernces &gt; Settings - User)： 1&quot;default_line_ending&quot;: &quot;unix&quot; 去除行末尾的多余空格就像吃完饭要刷牙一样，在提交 (commit) 代码之前你需要清理掉所有的不必要的空格。 Sublime Text2 设置(perfernces &gt; Settings - User)： 1&quot;trim_trailing_white_space_on_save&quot;: true 使用分号是否使用分号，在社区争论已久。isaac 也写过一篇讨论的文章，但是，当可以用廉价的语法来消除一些可能引入的错误的时候，请当一个保守派。 每行80个字符限制你每行代码不超过80个字符。尽管现在的显示器越来越大，但是你的大脑并没有变大，并且你还可以把你的大显示器切分成多屏来显示。 Sublime Text 2 设置(perfernces &gt; Settings - User)： 1&quot;rulers&quot;: [80] 多屏：view &gt; Layout &gt; Columns 2 使用单引号除非编写.json文件，其他时候都请用单引号包裹字符串。 Right: 1var foo = 'bar'; Wrong: 1var foo = "bar"; 大括号位置请把你的所有的左大括号都放在语句开始的这一行。 Right: 123if (true) &#123; console.log('winning');&#125; Wrong: 1234if (true)&#123; console.log('losing');&#125; 同时，请注意在条件判断前后都添加一个空格。 每个变量声明都带一个 var每个变量声明都带一个 var ，这样删除或者调整变量声明的顺序会更加容易。不要把变量都声明在最前面，而是声明在它最有意义的地方。 Right: 12345678var keys = ['foo', 'bar'];var values = [23, 42];var object = &#123;&#125;;while (items.length) &#123; var key = keys.pop(); object[key] = values.pop();&#125; Wrong: 123456789var keys = ['foo', 'bar'], values = [23, 42], object = &#123;&#125;, key;while (items.length) &#123; key = keys.pop(); object[key] = values.pop();&#125; 变量、属性和函数名都采用小驼峰变量、属性和函数的命名风格都需要遵循小驼峰风格。同时所有的命名都是有意义的。尽量避免用单字符变量和少见单词来命名。 Right: 1var adminUser = db.query('SELECT * FROM users ...'); Wrong: 12var admin_user = db.query('SELECT * FROM users ...');var a = db.query('SELECT * FROM users ...'); 类名采用大驼峰类名都采用大驼峰风格来命名。 Right: 12function BankAccount() &#123;&#125; Wrong: 12function bank_Account() &#123;&#125; 用大写来标识常量常量变量和对象的静态常量属性都需要特殊表明，通过全部大写的方式来表明。 尽管 Node.js / V8 支持 mozilla 的 const 关键字，但是不幸的是，对象的属性并不支持这个关键字，而且 const 没有包含于任何一个 ECMA 规范中。 Right: 12345var SECOND = 1 * 1000;function File() &#123;&#125;File.FULL_PERMISSIONS = 0777; Wrong: 12345const SECOND = 1 * 1000;function File() &#123;&#125;File.fullPermissions = 0777; 对象、数组的创建使用尾随逗号，尽量用一行来声明，只有在编译器不接受的情况下才把对象的 key 用单引号包裹。使用字面表达式，用 {}, [] 代替 new Array, new Object。 Right: 12345var a = ['hello', 'world'];var b = &#123; good: 'code', 'is generally': 'pretty',&#125;; Wrong: 123456var a = [ 'hello', 'world'];var b = &#123;"good": 'code' , is generally: 'pretty' &#125;; 使用 === 比较符写代码并不是在背这些 stupid rules 。使用 === 操作符来进行比较操作，它会完全按照你的期望来执行。 Right: 1234var a = 0;if (a === '') &#123; console.log('winning');&#125; Wrong: 1234var a = 0;if (a == '') &#123; console.log('losing');&#125; 三元操作符分多行三元操作符不应该写在一行，将它分割到多行。 Right: 123var foo = (a === b) ? 1 : 2; Wrong: 1var foo = (a === b) ? 1 : 2; 不要扩展内建类型不要扩展 javascript 内建对象的方法。将来的你会感谢你这个做法的。 Right: 1234var a = [];if (!a.length) &#123; console.log('winning');&#125; Wrong: 12345678Array.prototype.empty = function() &#123; return !this.length;&#125;var a = [];if (a.empty()) &#123; console.log('losing');&#125; 使用有意义的判断条件所有复杂的条件判断都需要赋予一个有意义的名字或者方法。 Right: 12345var isValidPassword = password.length &gt;= 4 &amp;&amp; /^(?=.*\d).&#123;4,&#125;$/.test(password);if (isValidPassword) &#123; console.log('winning');&#125; Wrong: 123if (password.length &gt;= 4 &amp;&amp; /^(?=.*\d).&#123;4,&#125;$/.test(password)) &#123; console.log('losing');&#125; 写精简的函数保持你的函数尽可能的精简。一个好的函数应该能够在幻灯片上一屏显示，并且让坐在教室最后一排的人看清楚。别再去数你的每一个函数并控制在15行以内了。 尽早的从函数中返回为了避免深入嵌套的 if 语句，请尽早的从函数中返回。 Right: 1234567891011function isPercentage(val) &#123; if (val &lt; 0) &#123; return false; &#125; if (val &gt; 100) &#123; return false; &#125; return true;&#125; Wrong: 1234567891011function isPercentage(val) &#123; if (val &gt;= 0) &#123; if (val &lt; 100) &#123; return true; &#125; else &#123; return false; &#125; &#125; else &#123; return false; &#125;&#125; 针对这个示例，甚至可以进一步精简优化： 1234function isPercentage(val) &#123; var isInRange = (val &gt;= 0 &amp;&amp; val &lt;= 100); return isInRange;&#125; 给你的闭包命名请尽量给你的闭包、匿名函数命名。这让人知道你在意这个函数，更重要的是，这将会产生可读性更好的堆栈跟踪和CPU调用信息等。 Right: 123req.on('end', function onEnd() &#123; console.log('winning');&#125;); Wrong: 123req.on('end', function() &#123; console.log('losing');&#125;); 不要嵌套闭包使用闭包，但是不要嵌套他们，否则你的代码将会一团糟。 Right: 1234567setTimeout(function() &#123; client.connect(afterConnect);&#125;, 1000);function afterConnect() &#123; console.log('winning');&#125; Wrong: 12345setTimeout(function() &#123; client.connect(function() &#123; console.log('losing'); &#125;);&#125;, 1000); 使用单行注释风格不管是单行注释还是多行注释，都使用 // 。同时请尝试在更高层次来编写注释（解释函数整体的思路），只在解释一些难以理解代码的时候添加注释，而不是给一些琐碎的东西加上注释。 Right: 1234567891011121314// 'ID_SOMETHING=VALUE' -&gt; ['ID_SOMETHING=VALUE'', 'SOMETHING', 'VALUE']var matches = item.match(/ID_([^\n]+)=([^\n]+)/));// This function has a nasty side effect where a failure to increment a// redis counter used for statistics will cause an exception. This needs// to be fixed in a later iteration.function loadUser(id, cb) &#123; // ...&#125;var isSessionValid = (session.expires &lt; Date.now());if (isSessionValid) &#123; // ...&#125; Wrong: 1234567891011121314// Execute a regexvar matches = item.match(/ID_([^\n]+)=([^\n]+)/));// Usage: loadUser(5, function() &#123; ... &#125;)function loadUser(id, cb) &#123; // ...&#125;// Check if the session is validvar isSessionValid = (session.expires &lt; Date.now());// If the session is validif (isSessionValid) &#123; // ...&#125; Object.freeze, Object.preventExtensions, Object.seal, with, eval这一堆屎一样的东西，你永远都不会需要他们。 Getters 和 Setters不要使用 setters ，他们会引发一些使用你的代码的人无法解决的问题。当没有副作用的时候，可以使用 getters，例如提供一个集合类的长度属性的时候。 异步回调函数Node 的异步回调函数的第一个参数应该是错误指示，只有这样才能够享受许多流程控制模块的福利。 Right: 1function cb(err, data , ...) &#123;...&#125; Wrong: 1function cb(data, ...) &#123;...&#125; 继承尽管有许多的方法来实现继承，但是最为推荐的是 Node 的标准写法： 1234567function Socket(options) &#123; // ... stream.Stream.call(this); // ...&#125;util.inherits(Socket, stream.Stream); 文件命名单词之间使用 _ underscore 来分割，如果你不想暴露某个文件给用户，你也可以用 _ 来开头 Right: 123child_process.jsstring_decoder.js_linklist.js Wrong: 12childProcess.jsstringDecoder.js 空格在所有的操作符前后都添加空格，function 关键字后面添加空格 Right: 123var add = function (a, b) &#123; return a + b;&#125;; Wrong: 123var add=function(a,b)&#123; return a+b;&#125; 尽量参照 Node.js 源码的编码风格 node 源码 Google’s JavaScript style guide 入乡随俗给别人的项目提交 pull request 的时候，要注意遵循项目的编码规范，保持项目编码风格的统一。 来源： https://raw.githubusercontent.com/dead-horse/node-style-guide/master/Readme.md]]></content>
      <categories>
        <category>技术</category>
      </categories>
      <tags>
        <tag>nodejs</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[生活与享受]]></title>
    <url>%2F2014%2F10%2F19%2Fdaynote_20141019%2F</url>
    <content type="text"><![CDATA[今天打完球，很累，想马上冲个澡，突然想起了有浴缸呢，为啥不用呢！由于经常用来洗衣服，因此清洁起来并不是很麻烦。放好大半缸的温水，躺进去，真是爽翻了！ 但是，无奈，我想法太多。身为一个刚刚步入社会的打工仔，是不是不应该过早就有这种享受的心态。但是放着浴缸不用，是不是本身已经孕育了一种让人羡慕的罪恶感呢？不行，这些是我想多了。生活嘛，享受生活也是生活构成的一部分啊，这又何为过呢。 对啊，想到这，不禁又想说，人生如此美好，再大的坎也要跨过，因为连你自己都可能不敢相信这道坎过后会有更多美好的风景。]]></content>
      <categories>
        <category>随笔</category>
      </categories>
      <tags>
        <tag>生活</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[生活之艰]]></title>
    <url>%2F2014%2F10%2F18%2Fdaynote_20141018%2F</url>
    <content type="text"><![CDATA[今天网购在收货时遇到了一点小问题，我填的收获地址是小区的一家超市，网上的物流查询已经显示为“已签收”，但是超市的老板却说没有收到。 我联系送快递的小伙子，他说他已经送了，并且撕下了上面的单子，还给我看，而那老板却一直不承认收到了货物。经小伙子的回忆，我的货物被压扁了，然后老板说可能当废品一起买了，就联系废品回收站，让那边找找看。过了大约一小时后，我收到快递小哥的电话说：“东西没找到，多少钱呢？我赔你。”我本想着可能是一件比较麻烦的事情，快递小哥和老板都有推卸责任的说辞，而我估计也就只能试试网上投诉了。但没想到这么快快递小哥就认赔了，我也就说了句：“80多块。”然后问我住几号楼几层，我有点不好意思了，“你到楼下等我吧，我马上下来。”一见面他二话不说就给了我一张100元的，我想掏钱找，他却说不用了，“请你千万不要投诉！”重复了好几篇，听口音，看长相，八成也是一个新疆人，从脸上看，就是一副经历不少风霜的样子，我就说了，“放心，我不会投诉的，而且我估计是老板给弄丢了，否则你不会撕下那个单子的。只不过下次千万小心点了。”我还说，“在外面都不容易……”却被他笑着打断，“唉，就不多说了……”话音未落，便又一个电话打进来，因此我便与他告了别。 心中有些小感慨，生活不容易啊，那些只凭体力争生计的人在城市里生活更是不易，但他为什么还要来呢，多半在他看来由于家乡的落后，在外面哪怕吃再多的苦也比在家乡更有希望。国家现代化进程在各个地区的极大不一致发展造成了地区贫富的诧异，也驱使着人口就、资源等更大、更多地流向富裕地区，造成更大的落差。可如果你要想追问这是谁造成的呢？是现代化本身呢？还是别的呢？这又是一个不小的问题了。]]></content>
      <categories>
        <category>随笔</category>
      </categories>
      <tags>
        <tag>生活</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[年轻人恃的是啥]]></title>
    <url>%2F2014%2F10%2F17%2Fdaynote_20141017%2F</url>
    <content type="text"><![CDATA[都说年轻好，不光在于人年轻的时候身体好。更多为人道的是年轻人有大把的时间，年轻人没有过多的包袱。正是年轻人的除了时间之外一无所有的状态和不断渴望填满的心，加上体力充沛的身体，使整个人散发出极大的活力与动力。 因此，我从来都不觉得欲望是一件坏事，有了欲望你才有动力去追求，否则无欲无求岂非一个空口说道的呆禅。 然而被呵护着长大，你在不断渴望的同时却更多畏手畏脚，在于害怕失去一些东西，害怕稍微走偏就会“一失足成千古恨”，其实你可以放下很多东西，轻松上路，由于一无所有而无所畏惧，未来会填满你的口袋。 No，永远不要填满，也不会填满，我要一直往里放东西，直到我拿不动……]]></content>
      <categories>
        <category>随笔</category>
      </categories>
      <tags>
        <tag>年轻</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[学习，再学习]]></title>
    <url>%2F2014%2F10%2F16%2Fdaynote_20141016%2F</url>
    <content type="text"><![CDATA[一个偶然的机会，发现自己虽然工作一年多了，一些基础性的技术点却并不知道，感觉有些愧意。 不过从另一方面来说，我不知道这些基础的点，却仍然能使用它，至少一方面说明了这门技术的封装性、易用性都做得比较到位，另一方面说明我可以在不了解一门技术基础点的情况下就能使用它。当然，用的是高级，还是一般化，那就要另说了。 但是，当我再翻看这些技术点的细节时，以前有过一晃而过、未深究的问题仿佛又出现了，并且它的解释让我恍然大悟。这种感觉告诉我学习一门技术要反复使用、重温、再使用、再重温，这样才能真正嚼烂。 因此说，学习永无止境，同志仍需努力。]]></content>
      <categories>
        <category>随笔</category>
      </categories>
      <tags>
        <tag>其他</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[这写是的啥啊]]></title>
    <url>%2F2014%2F10%2F15%2Fdaynote_20141015%2F</url>
    <content type="text"><![CDATA[在上海的租界处，鱼龙混杂，一个扎着麻花辫的小姑娘，手上拿着一支鲜花，时不时才喊一声：“卖花……啦……。”这时一个行色匆匆的男子走过来，问她花怎么卖的，结果小姑娘脸憋得通红，愣是没说出来，那男子看上去比小姑娘大上十来岁，却也忍不住笑了，给了她一些钱。她一看很多，正要退回一部分。突然人群中一阵骚动，有七八个壮汉带着家伙事冲着蹿来，男子顿时绷紧了神经，顾不上拿花，撒腿就要跑。她正要把花递给他，他说，“你先帮我拿着……”然后便消失在人群中了。 这时，又有人过来向她买花，结果—— 版本一：她说：“这花不卖。”然后望着男子离去的方向。 版本二：她说：“这花已经有人订了。”然后又盯着男子消失的方向。 版本三：她说：“这花是我自己的。”然后转身离开了。]]></content>
      <categories>
        <category>随笔</category>
      </categories>
      <tags>
        <tag>其他</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[再次想放弃]]></title>
    <url>%2F2014%2F10%2F14%2Fdaynote_20141014%2F</url>
    <content type="text"><![CDATA[这次写这篇文章的时候，又是想放弃的时候，就在刚才想了无数的借口来是自己安心地放弃这份坚持。可是一想到自己这么些年来好像没有什么坚持，除了阅读与书写，没有什么太大让我自豪的。我就想即使再怎么时间不够，即使再累，也要把这份“坚持”坚持地写下去。 写到此处，我其实已经找回了那份坚持萌动之初的想法，但是少了些激情澎湃，因为理想的实现过程要融入到枯燥长期的生活中，才有机会让它发芽壮大，否则等于使你灭了它。 不多说，不多写，就为这份坚持给自己一份鼓励，加油！]]></content>
      <categories>
        <category>随笔</category>
      </categories>
      <tags>
        <tag>放弃</tag>
        <tag>坚持</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[李承晚政权垮台后到朴正熙政变前]]></title>
    <url>%2F2014%2F10%2F13%2Fdaynote_20141013%2F</url>
    <content type="text"><![CDATA[历史过程从李承晚下台到朴正熙政变的一年多时间里，韩国经历了徐政过渡政府时期（1960年4月26日-1960年8月21日）和第二共和国时期（1960年8月13日-1961年5月16日）。其中短暂的第二共和国是许多民主人士的不灭意义，在后来漫长的威权主义时代，这是一个经常被怀念的“民主”的好时光。可是就是这样被认为“民主”的时代，表现的更多的是当时韩国许多的阶层的政治文化上的落后，尤其是民众运动团体和激进力量所表现得一些品质与民主的境界相去甚远。 李承晚政府的遗留问题李承晚时期在民主的形式框架下出现了一个传统型的独裁政府，这个责任却不在于民主制度的缺陷或者民主形式的不完善，而在于政治精英们的文化缺陷，李承晚和自由党与各个反对派的斗争，不是因为政治理念或政策取向上的分歧，而主要是因为争夺个人或小宗派的权力，他们把民主政治作为谋取个人权力和利益的舞台。民主是高尚的、坦诚的、有道德良心和责任感的人们的政治，而不是狭隘的、虚伪的、唯利是图、唯权是尊的人们的政治。然而在集权上远不如后来的朴正熙，可以说50年代的韩国既没有形成有效的民主，也没有形成合理地集权。它在民主和集权上都存在着严重的缺陷。 政党之争“4月革命”给自由党带来毁灭性的打击，使民主党意外地翻身。而由于民主党当初的成立就是由一些在野的右翼势力联合起来的，开始就有两大派系，即“旧派”和“新派”。此后在修改宪法的问题上，由于各方的利益考虑，使得旧派和自由党站在了一边主张放弃总统制而转变为内阁制，而新派则主张在目前的总统中心制的基础上做一些小幅度的调整。最终在协商下旧派人士尹潽善当上了总统，按照本来协商的结果是总理由新派的张勉担任，但是旧派却放弃了承诺而提名旧派的金度演结果却在国会表决中没有通过，最后不得不提名张勉而通过。因此民主党的分裂已经不可避免，与10月8日旧派领导核心宣布独自成立“新民党”。然而在此后的民主党中又有实权派（即老壮派）、少壮派和协作派的划分，这里主要是少壮派对于权力要求达不到要求而专门与张勉的领导核心作对。而张勉的对这些党派纷争的处理是分配权力来解决矛盾和得到支持，然而每次权力分配都制造除了更多的矛盾，他又不能不利用这个办法，因为当时的政治文化没有根本的改变，大家都是为了个人或小宗派的权力而斗争。 不要高估民众的智慧一个国家的政治文化具有某种整体性，政治精英身上的弱点在民众身上也同样会有。只是因为岗位和职业不同，暴露的侧面不同而已。在过渡阶段，民众的行为同政治精英的行为一样，有时候符合民主形式有利于推动民主发展，有时候却并非如此。一般而言，在本土文化与民主形式发生融合的早期阶段，民主的最可靠的代表是民主的形式本身，而不是某个社会群体。当一个民族的本土文化尚未与民主形式达到一定程度的融合时，所有的社会部分都是有问题的。在当时，亲李承晚势力主要包括自由党、行政与警察系统、上层军官以及与李承晚政府勾结的企业家，他们被看做是“反革命势力”，而反李的力量主要是由学生、教师、舆论界、宗教界等领域的部分人以及各反对党所组成，他们被看成是“革命势力”。 如果说民主党的政府像许多学者认为的那样是一个民主的政府，它的政策对政治与经济的发展也是有益的，那么，“革命力量”的无休止的反政府运动的合理性就大大值得怀疑。韩国由学生、市民等参加的有幸视为活动经常被习惯地成为“民众运动”。在第二共和国时期，因为政府是民主的和积极向上的，反政府运动的性质也就发生了变化。而且这些所谓的“民众”恰恰不是普通民众，而是年轻学生以及其他知识阶级，一个被认为是民主意识觉醒了的群体。然而，他们的“民主意识”是很粗糙的，非理性的成分居多而理性的成分却很少，民主参与只停留在随心所欲地搞运动和发泄不满的水平，潜藏着颠覆民主的巨大能量。]]></content>
      <categories>
        <category>书籍</category>
      </categories>
      <tags>
        <tag>韩国</tag>
        <tag>历史</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[生活是白天而非黑夜]]></title>
    <url>%2F2014%2F10%2F12%2Fdaynote_20141012%2F</url>
    <content type="text"><![CDATA[此时坐在窗前，却是大白天，不同于夜晚。由于夜晚窗外的封疆几乎被黑夜所笼罩，而你坐在明亮的室内，所处环境与所见不同，便易进入类似此场景类似的回忆中。白天却不会，你无法欺骗自己的眼睛，因为窗外的一切都是活生生的，是你的与真实世界的接触。 此时的心境由于少了一份夜晚的幻想，而添了一份面对现实的真切感。正如有些事情，你想象中的角色带入自然有趣，可终究抵不过亲身参与来得让人深刻、自然与放松。 少一份幻想，多一份参与，是我应该为之努力的，不要让自己在荒废了白天的时光后又在夜晚做着励志奋斗的梦而却却又在第二天重复着昨天的颓废。]]></content>
      <categories>
        <category>随笔</category>
      </categories>
      <tags>
        <tag>夜</tag>
        <tag>幻想</tag>
        <tag>现实</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[1990年代中期到21世纪初韩国电影主题的总体发展趋势]]></title>
    <url>%2F2014%2F10%2F11%2Fdaynote_20141011%2F</url>
    <content type="text"><![CDATA[忠实地审视构成韩国文化民族主义的传统神话和想象； 重新修正性地审视南北关系； 运用象征主义手法从心理层面表现人与人之间的关系； 根据导演个人的观点和信仰对社会现象进行仔细审视； 对基本上被文化活动和审查制度所忽略了的城市经历重新产生兴趣； 对（1960年代初至1990年代初）军事独裁统治时期的社会和政治上的失败进行公开审视； 通过性和教育对道德、宗教和伦理进行检验； 重新再现韩国的历史、传统和身份； 反思性别地位，特别是在男性主导话语中和儒家的教义与想象中思考性别的地位； 在情节剧中运用现实主义的、直截了当的和细致入微的手法表现错综复杂的关系； 重新修正性地审视韩国同周边邻国和美国的历史与现在的关系； 运用讽刺性手法和人自我身份的矛盾性表现当代紊乱荒谬的状况； 根据偶然性和非理性而不是因果关系展开故事情节。 将中国香港和好莱坞动作片与韩国夸张而敏感的情节剧相融合，形成韩国的风格化黑帮片。]]></content>
      <categories>
        <category>书籍</category>
      </categories>
      <tags>
        <tag>电影</tag>
        <tag>韩国</tag>
        <tag>历史</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[地铁的限流]]></title>
    <url>%2F2014%2F10%2F10%2Fdaynote_20141010%2F</url>
    <content type="text"><![CDATA[前天坐地铁，按照往常一样去到地铁站，却花了近20分钟的时间才进站，原来从那天开始这一站采取限流的措施。然而由于临时才知道限流，进站变得异常拥堵，即使有不少工作人员维护秩序，但是还有个别乘客等的太久而想翻越栏杆从而避免上班迟到，因而与工作人员发生争执。 当然，如果都能提前20分钟上班的话或许就不用那么着急，拥堵也会好点。不过这个只能用来约束个人，至于群体却不能如此分析。 到昨天拥挤的状况有所缓解，今天已经好多了只花了不到5分钟就进站了，看来人们对于早上的出行有了新的安排。 想来，不过就是这么小的一个规则的变化，一些人却表现出极大的不适应、愤怒、不理解。那如果以小论大，改变的规则是国家层面的呢？人们又要花多少时间来适应呢，可能要付出多少代价呢？这些作为改革的决策者都是要考虑在内的。另一方面，这次地铁限流后，个人感觉比以前要舒服，起码没那么挤了。这里除了地铁的管理者增大了人力运营成本之外，其他的人都从中获取了便利。然而对于国家的改革，涉及到的利益群体就要比这复杂的多，因此不能简单急于求成而由于没有看到成果便丧失信心，这是需要一个对于长期行动的耐心和坚持，因而真的不是一件容易的事情。]]></content>
      <categories>
        <category>杂说</category>
      </categories>
      <tags>
        <tag>规则</tag>
        <tag>改革</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[现代化的含义]]></title>
    <url>%2F2014%2F10%2F09%2Fdaynote_20141009%2F</url>
    <content type="text"><![CDATA[前言之前对于新疆人在最近几年带给我们的消极的印象背后的原因只是想到民族问题、宗教问题。昨天看《锵锵三人行》知道，原来这里还有现代化的作用，而民族、宗教问题不过是加深了新疆人的在现代化社会中边缘化的程度。所以有必要对现代化做一个系统的了解和加深。 小抄毋庸置疑，现代化是现代世界中最伟大而至关重要的力量。迄今为止，由于现代化，世界发生了翻天覆地的变化。例如，人们在工业化的环境中工作，使用先进的技术，居住在城市或郊区，体验日常生活的巨大活力和复杂性。这个似乎包容一切的术语首先指的是“传统”社会向“现代”社会的转型，而这种转型通常被视为农耕社会向工业社会的转型。 近来的历史已经证明，现代化实质上是西化。现代化有两个具有深远影响的历史根源：发源于18世纪西欧的资本主义工业化和启蒙运动。前者起源于18世纪后25年的英国，在那里物质动力和机器开始广泛地应用于生产。毫无疑问，它是现代性的最终驱动力。后者广泛传播与18世纪的西欧，建立在对理性和进步的信任基础之上。启蒙运动的宗旨就在于创造新的世界文化，即世俗的、理性的、博爱的和共和的文化，一言以蔽之，就是要创造“进步的”文化。这种进步的发展意识形态逐渐统治了西方的思想，并通过西方的殖民化和教育传播到西方以外的世界。 虽然现代化通过医药、农业等方面的新技术在很大程度上将世界改造成了一个更加美好的家园，但是在世界范围内向现代性的转型过程中，不可能不存在矛盾冲突。尽管现代化可以通过人类对社会生活和自然条件的改造实现物质文明，但同时，也会带来令人预想不到的消极影响。例如，经济上的两级分化、环境危机、对民主权利的否定和战争的危险，安东尼·吉登斯将所有这些消极后果都称为“人为创造的不确定性”。因此，现代化的具体历史进程具有深层的矛盾性：伴随着现代化所必然产生的矛盾，有可能全盘否定现代性所带来的成果。这是经历现代化转型时期的人们对现代化抱有矛盾心态的主要原因。 对于非西方的人民而言，人们对现代化产生矛盾心态还有另外一个原因。对他们而言，现代化实际上等同于西化，这一无可辩驳的事实带来了一系列的复杂影响，比现代化进程的内在矛盾性更令人困惑。现代化实际上就是这样一个过程，根据西方模式，摧毁传统的社会秩序，不仅再造经济基础，而且重组从最广泛的意义上讲的上层建筑和源远流长的传统文化。因此，现代化将西方话语的影响强加于非西方的人民。 经历了如火如荼的现代化的社会必定由西方话语所界定。资本主义工业化构成了现代化的核心，它需要相应的意识或价值体系。实行资本主义制度的国家主动接受了实用理性的原则，因为其本身就是资本主义制度用以提升物质生产效率的基本手段。 这种主导的世界观力量将西方文化准则和价值观强加于非西方的人民，他们被迫接纳这种陌生的外国思想体系，因而忽视贬低本土文化和身份。简言之，对于非西方的人民而言，作为经济过程的现代化及其社会和文化的寓意不是别的而正是强迫接受的西方话语，这种话语的实质就是资本的逻辑所产生的实用理性。 现代性所带来的复杂影响包括非西方的人民将西方的价值观“不情愿地”内在化的过程。这也可以称为内在心灵的殖民化。现代化不仅给物质世界带来了翻天覆地的变化，而且在文化生活中也发生了巨大的变化：以技术、理性的和以欧洲为中心的价值观的现代化为代表的外国价值观渗入进传统的价值观，并取而代之。在这种情况下，非西方的人们感到自己不如西方人，好像自己是“他者”一样。因此，他们往往通过贬抑或拒绝西方价值观的方式来否定现代化所必然导致的“内心的殖民化”，并逐渐具有了“并非忠贞不二的后殖民地地位所具有的难以消除模棱两可性特征，允许意识被殖民化”。这导致了一种内心深处的自卑情绪，或相对于西方社会的落后感。这种意识被殖民化的恶劣后果在于，尽管被殖民者出现了，但殖民者通常是缺席的。由此可见，现代化可以解读为一种新殖民主义的经历。 韩国人民可能比任何一个民族都更将现代化认同为西化。19世纪末，当现代化冲击韩国时，韩国人民突然发现他们处在世界的边缘，而非中心舞台。后来，随着韩国人民所面对的因一系列历史事件造成的赤贫现象，如1910-1945年日本的殖民统治、1950-1953年的朝鲜战争和1953年后美国在韩国不可忽视的存在，人们的这种认同感被强化了。崔写道： 他们（韩国人民）采用了西方的文化谱系作为自己的文化，即采用了赋予了西方文化特权的现代化逻辑。对于那些采用了这种世界观的人而言，缺乏产生先进西方文化的物质资源，事实上等同于承认了自身文化的劣等性。（后）殖民化的韩国人继续模仿着西方的霸权文化，并产生一种自我诋毁和自我边缘化的殖民化病症。 崔还指出，“殖民主义对前殖民地广泛而深远的影响在于对其社会和文化方面的影响，尤其是对意识的持续殖民化”。她认为，韩国的后殖民特性被推迟了，暗指韩国仍然处于美国的殖民主义的影响下。事实上，她引用了宣称韩国仍没有解放的布鲁斯·肯明斯的观点。在我们看来，她关于韩国的后殖民特性被推迟了的观点是不能成立的，因为韩国现在是一个能在世界秩序的限制中遵循自身发展方向的真正国家。如果按照她的逻辑推论，英国和日本都是美国名副其实的殖民地。我们认为，第三世界的现代化先天地继承了(后)殖民主义特征，特别从意识的角度看来。 概言之，由于现代化，人们在物质上取得的成就并没有抚平他们的失落感、自我间离或自卑感。正如彼得·伯格所言，在1961年至1979年朴正熙总统统治下，“饥饿的直接威胁消除了”，经济发展突飞猛进，捷报频传。再次期间，尤其在维新制度（1972年是政府改革延长朴正熙任期的界限）下的后半期（1972-1979），韩国一方面实行直接的政治高压政策，另一方面实现了经济的飞速发展。一句话，朴正熙总统即是韩国现代化最为重要的领导人，也是臭名昭著的军事独裁者。因此，现代化使许多韩国人想起了朴正熙政权，想起了政治高压下的韩国经济的腾飞。]]></content>
      <categories>
        <category>书籍</category>
      </categories>
      <tags>
        <tag>电影</tag>
        <tag>韩国</tag>
        <tag>历史</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[亲爱的朋友，再见，再见……]]></title>
    <url>%2F2014%2F10%2F08%2Fdaynote_20141008%2F</url>
    <content type="text"><![CDATA[曾，彼此说好毕业的时候一起走 不要让一个人送走一个又一个 只留下某一个走在最后 然，到那一天都有各自的理由 不能像当初承诺的时候 只有那事后才想起的不舍 说什么还有以后 却明白这可能就是最后 当，每次这些事涌上心头 总有不少思绪说不出口 却也明白过去就不再有 望，在你的那一头 也有想起这些的时刻 那便已足够]]></content>
      <categories>
        <category>随笔</category>
      </categories>
      <tags>
        <tag>回忆</tag>
        <tag>朋友</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[夜，共处]]></title>
    <url>%2F2014%2F10%2F07%2Fdaynote_20141007%2F</url>
    <content type="text"><![CDATA[我靠，怎么又写夜，貌似之前有好几篇都写的“夜”啊！你不能有点创意吗？ 创意，这个确实不容易，因为每天一篇啊，我又不是作家，还只是学生时期作文一直很差的孩子，能坚持每天胡乱涂写一点就难得了。 不过之所以老师写“夜”是因为每天晚上坐在床前的桌子上，一打开窗帘，就是黑夜和对面楼中的几扇亮着的窗户，当然窗户里的风景看不清楚，也就是黑夜因为黑而有所诉说。 面对黑夜，一个重要的关键词应该是“孤独”。之前有时候害怕孤独，有时想逃离孤独，但往往又不得不与孤独为伴，但却一直想与他战斗，当然也有时候享受孤独。后来看有人说的挺好——要学会与孤独和平共处。这里既非意为忍受孤独，又非享受孤独，而是静静地、自然地学会与他和平相处，就像对待一个人一样。这种做法有点像《美丽心灵》中的纳什晚年对由于分裂症看到的假象时不是像以往的陷入其中或奋力挣扎而是采取一种不理睬的态度，既然赶不走他们，只好以这种方式共处。 有一个共识是——大多数人不是很难相处。因此你只要找到合理适合的方式与人为善，自己的心态也会更加平和，生活不需要太多反抗、斗争，相反，共处会以更大的力量影响别人，影响自己。]]></content>
      <categories>
        <category>随笔</category>
      </categories>
      <tags>
        <tag>夜</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[从家归来]]></title>
    <url>%2F2014%2F10%2F06%2Fdaynote_20141006%2F</url>
    <content type="text"><![CDATA[国庆在家里呆了几天，与以往像大学时候回家的感觉不同，反而是有不少的难受和不适。 父母还一直是那样体贴得无话可说，几乎可以说是张张嘴，蹬蹬腿便能完成吃与穿的动作，虽说有些夸张，但感觉像是被当做一个小孩在照顾。 可是我已不小，但却又貌似无力拒绝这些行为，因而心中有些苦恼且不得其解。 记得以前也有提出，但父母经常以“儿女在父母的眼里永远是个小孩”。虽然其中有温暖，但是我却感到更多的是一成不变、僵硬的家长式的态度，一种要人向上仰视的不平等的姿态以及一直在被喂养的感觉。 我希望打破这样的内心的尴尬，却通知不想伤害父母那颗有着不变的关怀的心，这着实不是一件容易的事情，可这确实是一件需要考虑的事情！]]></content>
      <categories>
        <category>随笔</category>
      </categories>
      <tags>
        <tag>家</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[父母与孩子的思维偏差]]></title>
    <url>%2F2014%2F10%2F05%2Fdaynote_20141005%2F</url>
    <content type="text"><![CDATA[父母对于孩子的职业发展的想法多出于自身经验的角度来考虑，而且这是综合了他们这么多年来的一种危险系数最低、回报率最高的最佳路径。 这样一来，他们多考虑的是那些不变的因素，而非关注在他们看起来变化无端或者用自有知识无法解释的因素，当然，所有人都会这么考虑。只不过，这会对于受教育程度差异较大的父母和孩子之间在理解事物或者做决定时会有些偏差。 他们总结了步入社会以来的经验教训，出于对子女的关爱，而希望孩子走一条稳定且有保障的路。而孩子自己，刚步入社会，由于之前的求学阶段都不由自主的，而今有机会了，更想自己做个决定，哪怕是看上去不那么有前途、不那么便捷、不那么可靠，他也想要试试。而这些在父母看来都是极其不靠谱的，是一种风险极大的决定，因而据经验而力争。不过也许当初他们也没有像他们今天建议你的那样来做，而正因如此且带有些许后悔而真心想告诫孩子别走他们的错路、弯路而没有走更便捷的路。 想清这些，你或许就能够理解父母了，他们有着自己的一套生存经验之道，这是他们赖以生存的方法论。因此不要轻易否定他们，既然这套方法能够适用在他们身上，那么就必有一番相作用的生存哲学或者道理在其中，因此即使你不同意他们，那么这里头的道道也是值得研究的。]]></content>
      <categories>
        <category>杂说</category>
      </categories>
      <tags>
        <tag>孩子</tag>
        <tag>父母</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[eclipse, maven, 自动化部署web项目到tomcat]]></title>
    <url>%2F2014%2F10%2F02%2Fdaynote_20141002%2F</url>
    <content type="text"><![CDATA[原理将项目的src\main\webapp下的web相关文件及class文件一起复制到target下你在pom文件中配置的指定的文件夹中 tomcat配置用户&lt;role rolename=&quot;manager&quot;/&gt; &lt;role rolename=&quot;admin&quot;/&gt; &lt;role rolename=&quot;manager-gui&quot;/&gt; &lt;user username = &quot;admin&quot; password = &quot;admin&quot; roles = &quot;admin,manager,manager-gui,manager-script,manager-jmx,manager-status&quot; /&gt; pom.xml配置&lt;project xmlns=&quot;http://maven.apache.org/POM/4.0.0&quot; xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot; xsi:schemaLocation=&quot;http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd&quot;&gt; &lt;modelVersion&gt;4.0.0&lt;/modelVersion&gt; &lt;groupId&gt;com.jje&lt;/groupId&gt; &lt;artifactId&gt;jjManage&lt;/artifactId&gt; &lt;packaging&gt;war&lt;/packaging&gt; &lt;version&gt;1.0&lt;/version&gt; &lt;properties&gt; &lt;finalName&gt;jj-czp&lt;/finalName&gt; &lt;/properties&gt; &lt;build&gt; &lt;plugins&gt; &lt;plugin&gt; &lt;groupId&gt;org.codehaus.mojo&lt;/groupId&gt; &lt;artifactId&gt;tomcat-maven-plugin&lt;/artifactId&gt; &lt;configuration&gt; &lt;url&gt;http://localhost:8080/manager/html&lt;/url&gt; &lt;username&gt;admin&lt;/username&gt; &lt;password&gt;admin&lt;/password&gt; &lt;path&gt;/${finalName}&lt;/path&gt; &lt;/configuration&gt; &lt;/plugin&gt; &lt;!--其他省略--&gt; &lt;/plugins&gt; &lt;/build&gt; &lt;dependencies&gt; &lt;!--其他省略--&gt; &lt;/dependencies&gt; &lt;/project&gt; 最后pom.xml右击Maven Build中填Goals: tomcat:redeploy]]></content>
      <categories>
        <category>技术</category>
      </categories>
      <tags>
        <tag>eclipse</tag>
        <tag>maven</tag>
        <tag>tomcat</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[二十余载第一次大发感慨的长文]]></title>
    <url>%2F2014%2F10%2F01%2Fdaynote_20141001%2F</url>
    <content type="text"><![CDATA[在一个和平的年代，只要百姓没有被逼到山穷水尽，只要还有的吃，有的穿，哪怕差一点，不至于饿死、冻死。而至于上面势力（姑且称之为官府）怎么压榨，老百姓都可以忍受。因为他们会算一笔账——都知官官相护，其实官官相护即为互相维持一个庞大的官场利益网，所以上诉无效，即温和的手段行不通，而且有被诬告朝廷命官的嫌疑。那么使用武力呢，单个农民力量薄弱，若联合对抗呢，那得组织严密，领导得力，否则一旦泄密将会牵连几族啊，这样的成本太大，不逼到悬崖是玩不起的。 其实我们还有非常好的解决方法就是一起被压榨的人们联合起来形成的一个集体与官府进行和平交涉，我想这样官府不会不仔细考虑的。但是为什么很少有人这么做呢？我暂且搁置。 人们只要还可以生存下去，哪怕恶劣一点，特别是看到还有比自己更差的人甚至能够嘲笑之，当然也就降低了满意的标准，这是阿Q的思想。鲁迅所提到的国民的劣根性在于国民普遍把个人的利益摆在第一位，不能认识到集体中个人的同等重要的道理，也就是说和你一样或类似身份的人中间有人受害了，那么你也有可能受害。当然要想改变这一状况，只能是教育，用先进的文化洗去国民身上的固有污垢。否则只能出现这样的场面：当一群人赶走了奴役人民的官老爷之后，这群人便被当做新的官老爷供奉起来。 之前提到为什么不联合起来组成一个集体呢？我先引入一个例子，虽然简化了，但是大致意思没变。 说道清朝末期有个县的农民不满一项县令颁布的政策，但是固然切齿，几十年过去了谁也不敢带头。后来有个监生（相当于大学生同时是候补干部）有点愤青的意味便带头递交请愿书请求改变政策，但是最终带头人被抓。然后出乎官府意料，带头人被大批的农民拥入监狱抢出。由于末期的清朝腐败却没调动一个官兵过来，这批农民后来甚至抢了衙门并放了火。后来省里便派军队准备镇压，并且换了一个能员做县令。要知道当时要是军队开过来，那肯定是鸡犬不留！所以农民听到要镇压的消息，便立即组建了自卫队，由监生领导。后来与军队也发生过几次交锋，由于指挥得当，早已腐朽的清兵竟然没有占到便宜。于是新的县令另外想办法，准备从内部瓦解他们。他宣布自愿承认是良民的便写一份呈文并与那个监生划开界限，可以享受改变政策的待遇。于是很快出现了很多良民，他们自知与官府对抗不是长久之计，而且一家人都有危险，这样的风险实在过大，再三权衡之下便有许多人离开了那个监生。这样自然就很少有人愿意出钱来维持这个自卫队了。最后这个监生还被一群农民绑去见了官府以换取巨额的奖金，同时更是表示自己的诚心归顺。 整个故事结束了，为什么会这样呢？开始为他们着想的人却最后被出卖了。因为农民最初的改变政策的目的达到了，他们再也犯不着跟着监生冒全家老小的生命危险，更何况还有不少的奖金供他们吃很多天了。我感到这个新的县令十分聪明，他清晰地分清了利害，农民只想有一个相对稳定的环境生活，可是他们的眼光未免又十分短浅了。我们不难想象，以后这个县很难有人再带头说话了，即使他们再被压榨，甚至压榨得更苦。 之前说过只有教育才能改变这一状况。教育能让人们认识到更持久的利益，他们会自发组织集体来选出代表维护他们的利益。当然这只有在一个比较民主的国家才能做到，否则很容易被定性为非法集会或者非法组织之类的加以扼杀。但当我们所有人都认识到时，一定不断促进这一集体或组织的合法实现。 说了这么多，归根结底就是要学习，认识到更长久的利益。 在今天，虽然伴随着愚民的手段，但是信息时代给我们提供了一扇窗可以接触更多的光明。当然习惯于屋内的黑暗，光明可能会刺伤我们的眼睛。所以我们要有一双慧眼，而这双慧眼需要我们在不断学习、思考中产生。 最后说一句：在这个“敏感”的时代，在这个“审查”的时代，在这个“和谐”的时代，我相信我们大有可为！]]></content>
      <categories>
        <category>杂说</category>
      </categories>
      <tags>
        <tag>社会</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[自我初审]]></title>
    <url>%2F2014%2F09%2F30%2Fdaynote_20140930%2F</url>
    <content type="text"><![CDATA[写在前面对于自己小时候（主要为中学时期）很羡慕那些不听话、调皮的孩子可以不受或者不惧父母的管束而自我行动，以前只是理解为一种对自由的渴望的表露。后来看《中国文化的深层结构》有了更清晰的认识，也有了自己的一些思考。 下面先掉一下书袋，因为实在这些文字的概括性很强，不用都觉得可惜—— 一个在人格组成中含有许多‘他制他律’的成分、在身上必须有外加意志的人，在一个自我组织和独立自主的人格面前，是必然会感到自卑的。 一个对‘自我’的评价很低，不敢让自己太有吸引力，将自身的‘性’当作是自己体内装载的违禁品，而又不敢公然地表露自己‘是’什么的人，在另外一个完全能够确立自己、对自己的吸引力感到自豪、与自身的生命力没有失去接触，而又敢公开地展示自我‘完整性’的人面前，是会感到既怯且懦的。 一个害怕落单又必须常常和别人‘在一起‘的人，不敢’脱离群众‘或‘掉队’，总是要由别人定义自己，因此不能脱离这个定义自己的符号系统而去单独面对世界的人，在另一个独来独往、由‘自我’这个基础通过内省的方式去定义外在世界，而又不断去使自己面对以及享受新经验的人面前，就会感到自己整个人都好像很单薄，别人的内容好像比自己丰富。 一个在感情上常常受人照顾，人家待自己好，就会在原则性的事情上向别人‘交心’的人，在另一个不考虑人情攻势，而任何事情都必须经由自己的大脑皮层左半部加以分析与批判的人面前，就会觉得自己的想法总是站不住脚，而对方在任何事情上都比自己有主见似的。” 很明显，这样的心理形势与一个人的智商无关。 开始审判那时的我，一切事情由父母说了算，这样我的三观完全由他们定义，离开了他们我便失去了一切，甚至自己。而那些“不听话”的孩子则可能避免这点，可以自行其是，有一定的独立自主的意识和能力。面对这样的人，我怎么不可能不去羡慕甚至自卑，因为除了学习我便一无是处，真是悲哀至极！ 分析-教育这种内心自卑的形成和教育密不可分，有时候从一些细节就可以看出来。首先看看学校方面—— 从90年代到现在的中小学往往都有统一的校服，而且多是男女同款且宽松得过分的运动服。在这样一个讲究个性的年代如此的校服首先就抹杀了性别，同时对处于青春期的同学们来说，这无异于在抹杀个性。王潮歌对此呼喊”你的身体、你的相貌、你的头发和你修长的腿是可以拿出来显摆的“。老梁说这样背后有着管理者的思维，往往统一的规定即便是从校服入手，也会给管理带来极大的方便，然而这样一种强调高度统一的环境是不可能产生自由思维的，这是一种放弃美的思路，而往往对美的放弃的同时也意味着放弃了尊严，却单单为了一种功利性的目的（这里是取得好成绩上好大学）。我想强调的是这样不敢展现自我，不敢让自己具有吸引力的背后，反映的就是自我压缩的人格，而这样的人格有时在群体里出现还有可能会压缩他人。 分析-家庭再从家庭的教育看一看—— 当父母为孩子划了界限，你不能做什么，你这个不能做，那个不能做，而往往解释的原因是造成的后果的无法处理或者难以适应。比如说，“小明，在人家里东西不要乱动啊，否则要是你不小心弄坏了，阿姨会生气的！”，反之在公园里，小孩子任意把玩一些公共设施则父母很少说道，即使比如说骑在一些雕塑的身上等等，父母也顶多只是发现之后把孩子带走而已，理由是“别爬那么，会不小心摔下来的！”。除此之外，这样的教育方式随处可见，因而很少有人觉得有何不对。因而这样的结果是，孩子的思维很容易养成这样的习惯——如果事情的结果是可以处理的，就是可以为之的或者是小心为之的。而缺乏一种基于这种做法本身的合理性的考虑，例如这件事情是否合法，这件事情是否包含没有尊重他人的意味，这种事情是否在压抑自我，贬低自我从而赢得从众的心理的安全感。这里直接抹杀的是个人独立思考的能力，代替的是一遍又一遍的灌输。 当然，早期家庭教育对孩子性格、思维的养成起着关键性的作用。对于已经从小由于家庭的教育而已经形成“自我压缩”式的人格的人，该如何解脱呢？我目前也是摸着石头过河。不过有一点倒是经常会有所心得，就是去尝试做一些让自己不习惯的事情，当然这个不习惯主要是针对自己的人格而言的，这对改善自我有一定的帮助。 希望虽然我提到很多对于”自我“的抹杀，但仍然看到希望，不光是对自己，更是对现在的孩子们—— 在这样一个习惯压制自我发展的社会里（虽然强调”个性解放“很多年了，但是我认为这种文化里土生土长的痼疾依然还在嚣张），遭遇到信息时代的来临，外来文化的加入情况之下，我看到了更多人的”自我“的萌发，而这与传统文化中的思维模式有着不可避免的冲突，一旦个人不能很好地解决这些个问题，必然会带来非常多的困惑。然而这也是必须学会经历的一个过程，虽然很痛苦，但是却最终会体会到人性之美。]]></content>
      <categories>
        <category>杂说</category>
      </categories>
      <tags>
        <tag>教育</tag>
        <tag>自我</tag>
        <tag>家庭</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[用mahout运行fpgrowth]]></title>
    <url>%2F2014%2F09%2F28%2Fdaynote_20140928%2F</url>
    <content type="text"><![CDATA[将文件put到hdfs hadoop fs -put fp.txt ./czp 运行 mahout fpg -i ./czp/fp.txt -o ./czp/fp –method mapreduce -regex ‘[\ ]’ 成功运行后在./czp/fp文件夹里会出现四个文件或者文件夹 fList: 记录了每个item出现的次数的序列文件 frequentpatterns: 记录了包含每个item的频繁项的序列文件 fpGrowth parallelcounting 查看结果 mahout seqdumper -i ./czp/fp/fList -o /czp/fprs.txt mahout seqdumper -i ./czp/fp/frequentpatterns/part-r-00000 -o /czp/fp_guanxi.txt]]></content>
      <categories>
        <category>技术</category>
      </categories>
      <tags>
        <tag>hadoop</tag>
        <tag>hdfs</tag>
        <tag>mahout</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[用mahout运行bayes算法进行测试新闻分类的例子]]></title>
    <url>%2F2014%2F09%2F25%2Fdaynote_20140925%2F</url>
    <content type="text"><![CDATA[执行步骤： 数据准备 将新闻文件解压后整个放到hdfs中去： 1hadoop fs -put mini_newsgroups ./newsgroups 将文本文件转换为序列化文件： 1mahout seqdirectory -i ./newsgroups -o ./newsgroups_seq 将序列化文件转换为向量化文件： 1mahout seq2sparse -i ./newsgroups_seq -o ./newsgroups_vector -lnorm -nv -wt tfidf 将向量数据集分为训练数据和检测数据，以随机40-60拆分 12345mahout split -i ./newsgroups_vector/tfidf-vectors \ --trainingOutput ./newsgroups_train \ --testOutput ./newsgroups_test \ --randomSelectionPct 40 --overwrite \ --sequenceFiles -xm sequential 训练 训练朴素贝叶斯模型：12mahout trainnb -i ./newsgroups_train -el -o ./model \ -li ./labelindex -ow -c 检验 检验朴素贝叶斯模型： 12mahout testnb -i ./newsgroups_train -m ./model \ -l ./labelindex -ow -o newsgroups_result1 检验模型分类效果： 12mahout testnb -i ./newsgroups_test -m ./model -l ./labelindex -ow -o ./newsgroups_result2 打印结果 将检验结果的序列化文件转换为文本文件1mahout seqdumper -i ./newsgroups_result2/part-m-00000 -o ./newsgroups.res 其中：第1步所需的数据集从http://www.cs.cmu.edu/afs/cs/project/theo-11/www/naive-bayes.html下载 第1步生成的向量化文件的目录结构是这样的：df-count 目录：保存着文本的频率信息tf-vectors 目录：保存着以 TF 作为权值的文本向量tfidf-vectors 目录：保存着以 TFIDF 作为权值的文本向量tokenized-documents 目录：保存着分词过后的文本信息wordcount 目录：保存着全局的词汇出现的次数dictionary.file-0 目录：保存着这些文本的词汇表frequcency-file-0 目录 : 保存着词汇表对应的频率信息。来源： http://blog.csdn.net/aidayei/article/details/6674135 第3步正常运行的结果应该会看到一个矩阵，叫confision matrix，即混合矩阵，包含了分类的结果。 此外，每一个命令，可以通过加上“-h”来查看所需参数及含义，如mahout seqdirectory -h 在此过程中我遇到的错误如下： Caused by: java.io.IOException: Task process exit with nonzero status of 1解决：情况不明，换了一个集群就没有这个错误了，网上有说或是hadoop的日志文件需要清除，或是日志文件夹的权限不够需要赋权限777，或是hdfs下的temp目录已满需要清除，或是内存不足需要设置hadoop参数的值或者运行命令改变java的内存限制，或是程序本身有问题。 Caused by: java.io.IOException: Task process exit with nonzero status of 126解决：情况不明，貌似是内存不足的问题。在出现第一个问题之后换了一个集群才出现这个错误，但有时又不出现，而出现的时候我用free命令看了下，貌似内存确实在变小，但我上网一查，发现linux有个机制——内存不用白不用，因此它尽可能的cache和buffer一些数据，以方便下次使用。但实际上这些内存也是可以立刻拿来使用的。 至于为什么会出现以上提示，经上网查询得到如下结果：通过分析hadoop 1.0.1代码，发现map/reduce task在执行的时候，hadoop系统会先把要执行的java 命令已经一些环境变量写到一个本地的sh文件taskjvm.sh中，然后使用bash -c file的方式执行这个sh脚本，如果出错当然后抛出异常，进而导致看到 Caused by: java.io.IOException: Task process exit with nonzero status of 126. at org.apache.hadoop.mapred.TaskRunner.run(TaskRunner.java:258)这样的错误所以，这个exitcode实际就是bash执行时的推出代码，bash的exitcode是有特殊含义的，通过google可以知道126表明是permission的问题，具体为啥是这样的，不是很清楚了～～ 上面的那个文件在创建的是权限是700(rwx——)， 而这个文件在执行的过程中又被以setsid的方式exec，会不会这中间有些permission上的问题那～～～ 源码里说了，这样做是为了防止special character attacks 好吧水平有限，看不出来这里有什么竞争条件导致出现那样的错误 bash的退出码含义可以在下面的地方查到http://tldp.org/LDP/abs/html/exitcodes.html 这个问题可以修改hadoop源码DefaultTaskControl加入重试机制，或者对task启用reuse=-1得到缓解（reuse和非reuse执行逻辑不一样），因为涉及到文件系统，不太容易根治。来源： http://hi.baidu.com/liusc/item/e54bcd1778ded225f7625c4e]]></content>
      <categories>
        <category>技术</category>
      </categories>
      <tags>
        <tag>hadoop</tag>
        <tag>hdfs</tag>
        <tag>mahout</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[看电视]]></title>
    <url>%2F2014%2F09%2F24%2Fdaynote_20140924%2F</url>
    <content type="text"><![CDATA[以往每次看完一部电视剧（好像大多是金庸武侠剧，各种版本确实都看了不少），总有一种失落感，一种说不出、道不明的沮丧，最近才有所体会—— 那是因为电视剧往往展现给我们的是最精彩、最有故事可说的一面，而对于事前事后、生活细节等旁枝末节都未尽描述，因而我能被他们吸引。而生活中最大部分莫过于日复一日的稀松平常之小事，当然偶尔也有一些大事和精彩生动之处，但总是来于平淡，又回归自然。 既然看清了这些，我便坦然了—— 日常生活淡然处之，正是”他强任他强，清风拂山岗，他横由他横，明月照大江“。但是一总平淡未免有些无聊，也需些激情。故而在生活中我们也需要有开怀畅谈、疯狂作乐之时，才不失为生活之情趣所在。 这样，平淡之时尽享清静之乐，热闹之际自有痛快人生，岂不妙极？哈哈哈哈……]]></content>
      <categories>
        <category>随笔</category>
      </categories>
      <tags>
        <tag>人生</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[回家]]></title>
    <url>%2F2014%2F09%2F23%2Fdaynote_20140923%2F</url>
    <content type="text"><![CDATA[马上就国庆了，回家的火车票已购，就剩下倒数的日子了，但是心情并非激动不已。 其实我不算是个恋家的人，不对，是根本谈不上。因为我一直在逃避，因为我一直渴望的独立自由的的生活正在此刻，我把回家当做回到过去的时光，回家对我有一种莫名的恐惧，甚至有点牢笼的感觉。可是随着独自在外生活了一段时间后，家的感觉是有一点的，但这不是最重要的。重要的是我感受到了我的家人现在急于我的除了身体健康与快乐之外没有别的期望，而且家人身体方面也不用担心，我是如此的幸运。就是单单珍惜这样的幸运，便也值得回家看一看！ 除此之外，也就见见一些老同学和亲戚罢了，好像没有特别的感情，回家也就如此。 好在我不像中国好多的诗人作家有那么写个乡土情结，否则这个结我应该是解不开的吧。]]></content>
      <categories>
        <category>随笔</category>
      </categories>
      <tags>
        <tag>家</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[下一剂猛药]]></title>
    <url>%2F2014%2F09%2F22%2Fdaynote_20140922%2F</url>
    <content type="text"><![CDATA[这次再次下笔，算起来离上次已经有十天左右了。 有时候，说不清什么原因让你懈怠。我试图给自己各种解释。比如有——对于坚持的梦想不够清晰，个人的意志力还需加强，杂念太多，抑或没有养成好习惯，等等。 就这样，当我在数落着自己的种种不是之时，时间是不等人的，那么带来的便是晚睡，然后早上不想起——白天状态不好——晚上反思自责——继续晚睡，如此反复循环，让人很是沮丧。 可是今天就是现在，当我拿起了笔，好像一切又是那么安静，那么美好，而且时间还早。 因此，今后，对自己，少些反思，开始行动才是最重要的。NO，不是少些反思，对于我这种心思敏感的人来说，勤于思考从来不是欠缺，因此要下一剂猛药——从今天开始，不要反思自我，朝着你已经想好的方向去走就OK！]]></content>
      <categories>
        <category>随笔</category>
      </categories>
      <tags>
        <tag>自我</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[由钱包被盗引发的……]]></title>
    <url>%2F2014%2F09%2F21%2Fdaynote_20140921%2F</url>
    <content type="text"><![CDATA[从头说起晚上和同学小聚后回家，坐完地铁，出站准备转乘地铁，发现挎着的小包的拉链被拉开了，一摸钱包已经不见了。还记得那一瞬间的感受是懵了，但是故作镇定，沿原路返回，往地铁口走，没有发现影踪，因为我想小偷可能会拿完现金把钱包丢了。这是我也没办法，唯一想到的是钱包里到底有哪些东西呢。主要是身份证、银行卡几张和300元现金，除此之外貌似没什么了。还好损失不大，就是身份证丢了比较麻烦。银行卡有密码，应该关系不大，不过好在绑定了支付宝，赶紧用手机把钱转到余额宝，心理踏实一些。然后上网搜了一下身份证丢了咋办，有人建议最好报案，防止身份证被人利用而违法犯罪从而追究到你，如果报案了有回执单可以免责。可是由于从来没报过警，不知如何是好，此时公交来了，好在公交卡没放在钱包里，就上了公交。可见我的法律观念多么淡薄啊！ 此时很巧，听到刚上来一个乘客接到电话说，“对，刚是我报的警，后来又捡到了钱包。”完了听他和司机说到它的钱包被偷又被捡的事情，也是刚刚发生的，不过他比较幸运，现金没了，其他的都还在。于是我忍不住跑过去问他在哪捡的，于是便去那找，可是没有发现。然后问了附近几位骑着电瓶车正在拉客的几位阿姨，确认了那位倒霉又幸运的人，她们建议我在附近犄角旮旯里找一下，可是无果。于是她们建议我把手机号写在墙上，如果她们有人找到了就联系我，顿时我感到一丝温暖。这是我准备离开，看到有几个保安，便上前说明情况，结果他们又帮我找了一遍，还是没有什么发现，可是我很感激。最后他们问我要不要报警，考虑到身份证我便报了，随后民警赶来问了情况，编带我去派出所正式报了案，又被办案人员详细问了一遍，给我打印了回执单，这才回家，从被盗到离开派出所总共花了大概两个小时。 反思除了无力改变的偷盗行为的存在，能且应该反思的改变的是自己的过错。一是过于疏忽，走在路上还低头看手机，给了小偷可乘之机；二是从来没有被偷的经历，便一直抱着侥幸的心理，在心理上没有防范意识。 经验总结事情终究是发生了，虽说不大，但仍然有不少东西值得总结。就说当时吧，被偷后首先要考虑到损失，现金不能挽回，至于银行卡，由于没有密码除非挂失不能拿到钱，这时你如果有网上银行或者是支付宝绑定了，就赶紧把钱转到别的地方，以防万一。身份证的话，为了防止他人拿到作案而牵连到你，如果报案了凭借回执单则可以有证据免责。以上是从事情的不久思路上的经验，至于以后要注意哪些，那就是自我反思中的两条的对立面。意识不能抱着侥幸心理，要时刻有戒备，在一个有陌生人的环境一定要留心你周边的情况；二是银行卡、身份证分开（其实我以前都这样，后来为了方便又放在了一起），虽然麻烦点，但是出事后的麻烦就小，还有千万不能走路时玩手机等。 更多思考虽然是一件小事，好多人都有所经历。可对我这个一直以来顺顺当当没经历什么挫折的人来说，还是有很多值得思考的地方。首先感到一种庆幸，庆幸我在损失不大的时候有人给我上了一堂印象深刻的社会教育课。然后是在整个过程中的一些小店值得去揣摩——报警、报案的区别以及流程，为什么那些保安认定是新疆人？是被抓的小偷中大部分都是新疆人的原因吗？那么又为什么会这样子呢？]]></content>
      <categories>
        <category>杂说</category>
      </categories>
      <tags>
        <tag>钱包</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Sqoop使用：关系型数据库与hdfs、hive、hbase之间导入、导出数据]]></title>
    <url>%2F2014%2F09%2F20%2Fdaynote_20140920%2F</url>
    <content type="text"><![CDATA[介绍本文介绍了sqoop的一些常用的操作。 使用官网：http://sqoop.apache.org/解压sqoop包，注意版本号。进入bin目录，使用命令。 将mysql中的表数据导入到hdfs中：./sqoop import --connect jdbc:mysql://192.168.200.10:3306/tianshi --username root --password password --table tianchi -m 1其中，“-m 1”是设置map数量为1，则结果为一个文件，否则为多个小文件。 将hdfs上文件中的数据导出到已经建好的mysql表中：./sqoop-export --connect jdbc:mysql://192.168.200.10:3306/tianshi --username root --password password --table test --export-dir ./test在hive上建立一个和mysql中的一个表的结构一样的表：./sqoop create-hive-table --connect jdbc:mysql://192.168.200.10:3306/tianshi --username root --password password --table tianchi在hive中建立一个新表（若不指定，则表名相同），并且导入mysql中的一个表的数据：./sqoop import –connect jdbc:mysql://192.168.200.10:3306/tianshi –username root –password password –table tianchi –hive-import -m 1 将数据从mysql导入到hbase./sqoop import --connect jdbc:mysql://192.168.200.10:3306/tianshi --username root --password password --table tianchi --hbase-table tianchi --hbase-create-table --hbase-row-key user_id --column-family f -m 1将数据从hive导出到已经建好的mysql中./sqoop export --connect jdbc:mysql://192.168.200.10:3306/test --username root --password password --table tianchi --export-dir /user/hive/warehouse/tianchi --input-fields-terminated-by &apos;\001&apos; --input-lines-terminated-by &apos;\n&apos;将数据从hbase导出到mysql不能直接从hbase中导出数据到mysql,需要分几个步骤——http://blog.csdn.net/zreodown/article/details/8850172 创建关于hbase表的外表： create external table hive_tianchi(id string,id2 string,id3 string,id4 string) stored by ‘org.apache.hadoop.hive.hbase.HBaseStorageHandler’ with SERDEPROPERTIES (“hbase.columns.mapping” = “:key,f:brand_id,f:type,f:v_date”) TBLPROPERTIES(“hbase.table.name” = “tianchi”); 再创建一个hive表将上面创建的hive外表中的数据导入进来 create table new_tianchi(id string,id2 string,id3 string,id4 string); insert overwrite table new_tianchi select * from hive_tianchi; 将数据从hive导出到mysql，步骤同6 ./sqoop export –connect jdbc:mysql://192.168.200.10:3306/test –username root –password password –table tianchi –export-dir /user/hive/warehouse/new_tianchi –input-fields-terminated-by ‘\001’ –input-lines-terminated-by ‘\n’]]></content>
      <categories>
        <category>技术</category>
      </categories>
      <tags>
        <tag>hadoop</tag>
        <tag>sqoop</tag>
        <tag>hdfs</tag>
        <tag>hive</tag>
        <tag>hbase</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[小谈青少年的问题]]></title>
    <url>%2F2014%2F09%2F19%2Fdaynote_20140919%2F</url>
    <content type="text"><![CDATA[一直奇怪为什么现在或说近些年存在青少年的种种问题，而在以前或早些年很少有，退一步说也没有像现在这样世界各国都把青少年的问题提到一个很高的高度来研究探讨。《童年的消逝》中提到是由印刷术在欧洲的兴起，大量书本文化的普及导致出现学校，然后延申出童年。并且有组织的正式教育延长了儿童不必承担成人的世界和责任的时间，童年开始作为一个新的阶段出现而日益显得重要。这个阶段的出现在欧洲开始萌发于16世纪。 到后来，他们（指儿童）由于受制于书本学习者的心理及校长及家长的监督，印刷向儿童关闭了日常生活的世界，而日常生活这个世界正是中世纪的年轻人非常熟悉的。最后，了解这些文化秘密成为成年的一个显著特点。因此，直到最近，儿童与成人之间的一个重要区别 ，还是成人的据有据信是儿童不宜知道的信息。 在我看来，在这个现在被人称为“信息大爆炸”的信息时代，我们青少年伴随身体生长的爆发期可以比较容易地接触到成人向他们所隐瞒的信息。而在此之前或更小的时候他们则没有那个能力，一旦他们开始接触，他们更多的感觉或感受是好奇和兴奋，而这些又是他们之前无法从书本上得到的，无法用他们学到的知识来解释这一切。因此他们开始不知所措或乱碰乱撞，更可能反感以前成人向他们隐瞒这一切的事实，所以他们更让人感觉是叛逆，而这段时间也正是青少年出现好多问题的时候。 另一方面，由于最近几十年的经济腾飞，加上网络传媒时代的来临，文化不断地多元化。传统几不复存，现今成人的经历对如今的青少年或者说儿童已经不具有实用价值。坦白地说，成人的权威被打破，孩子们可能在某些方面接触得更多。因此孩子们便认为父母们已经过时了，土了，这也应该是现在听话的孩子越来越少的原因吧。 更进一步，随着这些现象的不断发生，甚至发生在未成年人身上的时间越来越提前，他们可能越来越可能在很小的时候就开始接触那些所谓成人的秘密。这一现象很可能导致以后成人与儿童即未成年人的界限越来越往前移，即更多的人被看作很早就成年了，就这样一直……可能到最后真的导致童年的消逝。]]></content>
      <categories>
        <category>杂说</category>
      </categories>
      <tags>
        <tag>社会</tag>
        <tag>童年</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[外婆的背]]></title>
    <url>%2F2014%2F09%2F18%2Fdaynote_20140918%2F</url>
    <content type="text"><![CDATA[很小的时候，外婆是我最亲的人。她最喜欢背着我到处走，一边走一边哼着小曲，见到路人更是热情地打招呼，最重要的是总会介绍我这个大外孙子，仿佛是在炫耀。而我也最喜欢趴在外婆的背上，有时看到别的小孩被长辈牵着走，便向他们扮鬼脸，好像也是在炫耀。 外婆，她绝对是一个女强人，外公去世的早，我都没机会见过，是她一手拉扯我妈她们姐妹四人长大的。因此是生活让外婆更加顽强，五十来岁的身体虽然有些瘦削但相当健朗，背着我到处跑都不带喘气的。也正是外婆这样的身体，有着坚韧的背，让那时的我非常有安全感。 记忆里小时候经常在外婆家，早上起来的时候，外婆走回背着我去田边转一转，看一看自家的稻苗长得如何，沐浴着清晨的温和的阳光，还伴有一丝微风。到了晚上，吃完饭，外婆又总会背着我去老屋看一看，其实我是很怕老屋的，可是当外婆背着我，我便一点也没想到害怕，只是觉得很好玩。到现在依然记得外婆进门前开锁和出门后又锁上的情景，只是不知道在老屋里外婆究竟在看些什么东西，亦或是习惯性地看看，看看过去吧。 记忆里有那么一些个零星的片段关于自己和外婆的事始终占据着一定的地位，有时回忆的时候，试图加点东西使之丰满，却一直很难。但是外婆对于我的关爱却一直铭记心中，记得后来长大到六七岁了，每次我妈带我回娘家，外婆即使抱着比我小的表弟，但是一见到我，就会把表弟交到他妈手上，再抱已经不小的我，就这份溺爱让我很是得意、开心，至今都仿佛能够感受那份被宠爱的幸福。 印象中最让她担心的是在一次外婆刷牙时，我趴在她背上打闹，结果不小头磕到前面的墙上，当时就流了不少的血。外婆就一路小跑着把我抱到医生那，不过当时我好像一下也没哭，也不害怕，也许是太小还不太知道疼，也许是在外婆怀里感觉很安全吧。 其实关于外婆的记忆中最安静、最舒适的画面是和她在夏夜里一起躺在床上，时不时远方传来一下汽笛声打破宁静，我便在脑海中浮现一艘又一艘巨大的轮船从眼前驶过，然后在外婆那宽大的手掌中握着的蒲叶扇的轻轻摇曳下慢慢睡着。 这些记忆共同构成了我此时此刻对外婆的印象与感觉，有时会突然发现记不清楚她的脸庞，越是努力，却越是徒劳，但一直记忆深刻的是她那坚实而又安全的背。]]></content>
      <categories>
        <category>随笔</category>
      </categories>
      <tags>
        <tag>回忆</tag>
        <tag>外婆</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[小论“文艺青年”“高富帅”等网络用语现象]]></title>
    <url>%2F2014%2F09%2F17%2Fdaynote_20140917%2F</url>
    <content type="text"><![CDATA[目前网络上各式各样的词汇大为流行，为众多网友所竞相追逐，有时已经到了这样的地步——只要接触任何除自身以外的人或事物，就可能无法避免耳濡目染这些东西。我这里所谈的大多是对人的种种标签式的定义或描述。如“富二代”“文艺青年”“二逼青年”“高富帅”等等。 首先不针对具体词汇地说，这些用语的确描述了我们这个世界当中的某一类人的某种特征。然而这些词汇往往根据某类人的某一个方面或少数几个方面来描述，比如外貌、身高、经济条件、家庭背景、爱好等等。就算是全部涉及以上方面，你就能保证能完整地预测一个人吗？就能判断他的性格或素质吗？显然这样未免过于偏颇，对于人这样一个有着复杂性、多面性、善变型的动物而言。 再谈这些词汇的背景吧。这样对人标签化的词语描述，多是出自这样的可能——在社会生活中，发生了一些事件，参与这些事件的人有着类似的条件（如外貌、身高、经济条件、家庭背景、爱好等等），并且这些事件在频繁地（注意：这里不一定是指次数多，因为有时候一些事情经常成为大众焦点，从而在人们的脑海中造成经常发生的错觉）被人搬到网上时引起了为数不少的人的反响（这里有羡慕嫉妒恨、或有强烈的批判谴责，或有抱不平、愤怒，或是兼有之）。然后这些人就被他们身上这些类似的条件所定义了。 这种从众多事物中抽取共性来概括之的方法，在逻辑上是有一定道理的，然而真正的问题在于这些标签的使用上。 这些标签自从诞生后，随着它们的覆盖范围越来越广之时，一旦发生了某某焦点事件，就经常会有焦点人物被贴上某种标签。所以经常容易看到这些类似的言论：“一定又是‘富二代’，要不然就是‘官二代’”，然而这些焦点事件的原因并非总是由于这些人物所属标签所造成的。但如果有多数事件就是这样的话，貌似贴标签就是合理的了？可是毕竟这些事件的原因很难用一两个标签解释完事，也更难说是多数发生的。这时还会有人说：“既然这样，贴标签总不是什么大问题吧？”事实上，问题是这里标签的意义在于屏蔽而不是展开思考，这对就事论事，合理、公平、客观地解决事情所带来的后果造成一些不便。所以有说“标签盛行的地方，理性则易于枯萎。在将对方以及自己的思维极端化的背后，是认知上的懒惰，以及一劳永逸式教条的渴望”。 日常生活中也会有人针对身边的某人干的某一件事或某一类事贴上一些标签，初看权当玩笑之语，可是久而久之，这些标签就会终结了某种话题的讨论。而事实上，很多问题的讨论怎么可能以一两个标签作为代表，而取而代之的应该是复杂理性的辩证过程，而且这个过程需要不断在认知上加以拓展、修正，然而这时想着一劳永逸的人简直不可望更不可即了。]]></content>
      <categories>
        <category>杂说</category>
      </categories>
      <tags>
        <tag>网络</tag>
        <tag>标签</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[韩国的民族电影]]></title>
    <url>%2F2014%2F09%2F16%2Fdaynote_20140916%2F</url>
    <content type="text"><![CDATA[民族电影的出现1980年代，一些初出茅庐的电影创作者开始实验拍摄各种被禁的文化与政治题材，以集体的力量挑战主流电影的霸权地位和国家电影制作的机器。电影俱乐部、地下杂志和其他出版物也推动了民族电影运动的产生，激发了大众的兴趣。然而，民族电影运动并不仅仅是对好莱坞和主流电影业的主导文化话语的能够，更是一个表达多样性的语言和社会话语的场所。 民族电影的形成 民族电影运动的宣言 宣传和鼓动：民族电影为民众寻找反抗统治阶级意识形态的声音。其最重要的使命是教育民众历史的重要性和阶级斗争的必要性。 创造民族文化：民族电影史探求韩国自我表达途径的媒介可能性的手段，也是从西方和独裁强权下寻求文化解放的媒介手段。 民主的发行体制： 民族电影抵制好莱坞在国际市场上的主导地位，防抗政府对发行的垄断和控制。 免除审查：民族电影反抗统治阶级任何形式的限制和审查。 改善电影制作的劳动条件：民族电影谴责主流电影业剥削电影创作者，侵犯他们的权利和福利。它还推动发展选择性的电影风格和制作策略，以对抗好莱坞电影和主流电影的吸引力。 民族电影的代表作——罢工前夜该片是一部队工人阶级的压榨进行强有力控诉的影片，影片所反映的工人阶级受压迫的问题引起了人们对政府政治改革的严重怀疑，即使卢泰愚总统的政治改革也无法容忍该片犀利的语言风格。为了干涉影片在全国大学传映，政府当局在校园设立战警，学子们却自发反抗，尽一切努力确保影片放映。甚至，为了没收一份拷贝，当局曾经兴师动众出动1800多名防暴警察和数架军用直升飞机突袭搜捕全南大学的电影院。事后，学生组织了一系列的街头示威以抗议政府的这次搜捕。该电影的影响如此之大，以至于全国都开始关注与民族电影运动。尽管政府对影片的正压的规模空前，但短短三周内就有20多万观众观看了这部电影。 民族电影的作用民族电影运动已经改变了韩国电影的社会作用。民族电影运动致力于社会实践，对社会政治进行重新审视，以取得平等与公正。它是一种理论性、政治化的实践活动，通常也是一种地下性的电影活动，一种为民众代言的话语，为新形式和新内容的创制和实验提供了平台。它激发了许多电影主题，开启了创作非资本主义电影实践的可能性。]]></content>
      <categories>
        <category>书籍</category>
      </categories>
      <tags>
        <tag>电影</tag>
        <tag>韩国</tag>
        <tag>历史</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[1980年代的韩国电影]]></title>
    <url>%2F2014%2F09%2F15%2Fdaynote_20140915%2F</url>
    <content type="text"><![CDATA[1980年左右韩国的历史事件1979年，总统朴正熙被其助手暗杀，从而结束了长达十八年的独裁统治。1980年的春天带来了短暂的民主和表达的自由。当第三共和国总理成为第四共和国总统时，韩国人民期待着一场全新而自由的总统大选，结果以军事镇压光州民主运动而告终。结果是另一个军人政府建立起来，开启了第五共和国时代。 第四共和国时期的电影维新政府于1979年垮台，昙花一现的文人政府成立，这为电影创作者带来了短暂的创作自由，因而一群导演利用当时的民主气氛表现了在此前所不能表达的内容。如俞贤穆的《人之子》、李长镐的《有风的好日子》和《暗街中的人们》等等，尽管这些电影均以现实主义表现手法表现和批判了社会，但还是通过了审查。 对于描写性内容的影片的放松审查为了回应电影业人士对于国产电影审查制度的不满，公演伦理委员会允许自由拍摄公开描写性内容的影片，但并未放松对表现社会意识影片的审查。这一审查制度的改变导致了1980年代影片创造的新趋势，即情色电影和历史片风行一时。例如郑仁烨执导的《爱麻夫人》于1982年掀起了情色影片的热潮，首轮放映就吸引了30多万的观众。影片讲述了一个家庭主妇因不满夫妻性生活而离家出走，大胆的追求一系列的性奇遇后，最终回到了丈夫身边，重拾失意人生。一些电影导演善于将韩国的风土人情同情色内容有机地熔于一炉，宣称其为“真正韩国式”电影，这种电影在1980年代中期形成了一种融合情色内容的混合类型片。 对于民族电影的尝试与探索在1980年代这种创作潮流背景下，一场新的电影运动由大学电影社团和拍摄8毫米或16毫米的小规格电影人共同发起。他们的主要任务在于表现被压迫者或工人阶级的生活经历，并以文化作品来唤醒民众的意识，揭露韩国社会的矛盾。这样的背景下，韩国电影人为了振兴韩国地那英、地域外国直配电影的入侵，采用了由非商业电影制作人提出的民族电影的概念。其时，在商业制作体系中时间民族电影的前景并不明朗。政府对文化部门一直实行高压政策，大家普遍认为这种政策还将继续实施下去。但鉴于出身商业电影制作中涌现的勇气可嘉的电影创作者，鉴于文化在不断前进发展，继续拍摄民族电影似乎是可行的。]]></content>
      <categories>
        <category>书籍</category>
      </categories>
      <tags>
        <tag>电影</tag>
        <tag>韩国</tag>
        <tag>历史</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[民主形式下精英的权力斗争及李承晚政权的垮台]]></title>
    <url>%2F2014%2F09%2F14%2Fdaynote_20140914%2F</url>
    <content type="text"><![CDATA[李承晚其实是个传统式的领袖在组阁上，李承晚的特点是专门选拔那些不会对自己构成威胁的人，尤其是总理一职。他想把分配权力作为拉拢人的手段，客观上却因不能满足各政党的愿望反而激起对他的更大不满。1950年5月31日选出的第二届国会比第一届国会具有更广泛的代表性。这次选举只有共产党系列的政党没有参加，其他所有的政党都参加了。但是，更广泛的代表性在民主的早期阶段则意味着更多的、更激烈的宗派主义斗争。随之李承晚逐渐认识到自己原来那种以超党派领袖的身份而通过机动灵活的权力分配来获得更多支持的策略在现在完全行不通了，于是他不得不考虑组建自己的政党。在1951年8月25日它宣布要建立奉行“一民主义”的、以劳动者和农民为基础的、有基层组织的全国性的大众政党。这个建党思想明显地吸收了当时世界上共产主义政党的某些经验，尤其是强调严格的组织化和民众基础。面对上层政治精英群体的傲慢与挑战，李承晚试图把自己的权力基础建立在更广泛的民众动员之上。 李承晚的组建政党的活动再国会内和国会外分头进行，所以在一开始就形成了院内派和院外派两股势力。伴随着组建政党的行动，李承晚于1951年11月30日提出了以总统、副总统直选和两院制为内容的修改宪法议案。结果在国会内外引起激烈的反应，李承晚的力量也出现了分裂。院外派积极支持李承晚的改宪议案，而院内派却表示反对。结果两派的组织政党的行动也分开了，都分别宣布成立“自由党”。此后，李承晚于1952年1月18日再次向国会提出宪法修正案。连院内自由党也不同意削弱立法机构权限的条款，结果再次以压倒多数被否决。于是随着李承晚的院外自由党的发展，在基层奠定了一定的基础之后，他开始对上层政治精英动手，从而引发了著名的1952年“釜山政治危机”。结果是使用武力威胁通过了新宪法，改动的主要内容是规定总统和副总统由选民直接投票决定。其中增加的总理对国务委员的任命有裁定权这一条，算是对反李派的妥协。 有意思的“四舍五入”李承晚的第二任总统将于1956年到期，但他想在1956年的总统换届中仍继续参选。于是，他操纵自由党再次提出改宪议案。国会在11月2日对废除限制总统第三次参选的议案进行表决，结果125票赞成，比起码要求的票数126票恰好少了1票。改宪案遭到国会的否决，也立即被媒体披露了。然而，隔了一天，自由党却宣布按照四舍五入计算改宪案已经获得通过。此后自由党还玩起了“民意运动”的把戏：先是李承晚自己宣布不参加新的总统竞选，接着自由党在全国的基层组织发动游行示威活动，强烈要求李承晚再次参加总统选举，然后，自由党与3月28日宣布李承晚答应了人民的要求而同意参加新一届总统竞选。利用这一套不光彩的政治手腕，李承晚终于达到了自己的目的。 不过此时李承晚已经81岁了，耳朵失聪，把处理业务事物的权力交给各部长，把政治权力交给李起鹏。此前的自由党是以李承晚个人为中心的权力结构，而现在变成了少数核心人物为中心的“党官僚寡头制”，一直延续到1960年自由党垮台。 民主形式的惩罚在1958年5月2日进行的第四届国会选举，由于一些在野党并入了民主党，此时韩国形成了两大党制的格局。在总共233个席位中，自由党126席，民主党79席。到了1960的第四届总统竞选进入高潮之际，民主党年迈的总统候选人赵炳玉由于竞选劳累至死，这样的事情在1956年民主党已经出现过一次。选民上次已经给了民主党一次同情，再投一次悼念票的可能性很小。而且这次选举采取的是总统、副总统捆绑制，赵的死亡就意味民主党的全盘失败。然而，自由党却利欲熏心而丧失掉起码的智慧，不禁没有很好地利用对自己有力的局面，没有采取至少让人们能偶勉强接受的姿态，反而沿着以往的惯性继续前进，利用集权化的党组织和国家警察与行政系统的配合，在投票和验票过程中大肆舞弊。 自2月28日起，由学生带头的反对自由党搞独裁、玩弄政治阴谋、企图操纵选举的游行示威就持续不断，由于自由党调动警察不断与学生发生冲突，最终引发了“4·19革命”。此次事件中，李承晚采取部分辞职的对策，令内阁总辞职，23日李起鹏申明辞退当选的副总统，24日李承晚宣布辞去自由党总裁职务。但是过了几天，又有游行示威，李承晚下令重新实行非常戒严，但戒严司令宋尧瓒这次没有听取命令。 就这样，由于李承晚得不到军队的支持，最后于4月27日宣布辞去总统职务，次日李起鹏之子现实开枪杀死了自己的亲生父母和其他家庭成员，然后自杀。第一共和国就这样结束了。 第一共和国的小结第一共和国时期的韩国的形式民主是高层政治精英们的民主，他们进行持续不断的权力斗争，充分展示自己政治博弈的才能。普通公民由于信息不通以及受到传统政治文化的束缚，仅是受政治家们鼓动和利用的对象。尽管李承晚和自由党精英们的观念陈旧而手段多样，他们也只能是在这个形式框架下达到自己的目的。虽然他们依靠扭曲这个框架而获取利益，并在一个时期如鱼得水，但他们最终却受到民主形式的最严厉的惩罚。]]></content>
      <categories>
        <category>书籍</category>
      </categories>
      <tags>
        <tag>韩国</tag>
        <tag>朝鲜</tag>
        <tag>历史</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[韩国的宪政萌芽与民主框架的建立]]></title>
    <url>%2F2014%2F09%2F13%2Fdaynote_20140913%2F</url>
    <content type="text"><![CDATA[李氏朝鲜时期的政治制度是否有宪政的萌芽甲午更张后的李氏朝鲜将王室与政府分开，议政府变成总理领导的国务院。这样的议政府有一种权力相互牵制的意图，但这只是极少数人所组成的权力寡头之间的协商，是几个人的民主。这样的权力制约和民主是十分原始的、习惯性的，因人而异的，一言蔽之，它是没有形式的。而宪政体制下的权力制约和民主协商却依赖于其完善的形式系统，建立在权责明晰的法律基础之上，并有程序化、制度化的运作。这就是说，李氏朝鲜的政治制度没有留下什么重要的宪政遗产。它的那些宪政影子或元素也不可能进化为现代制度。 日本殖民统治时期1910年8月22日，日本强迫朝鲜签订日韩合并条约并与29日公布实施，李氏朝鲜灭亡而朝鲜半岛陷入日本的殖民统治，这一直到1945年第二次世界大战结束，长达35年。 日本殖民主义与英国殖民主义有重要的区别。日本的殖民地主要是周边邻国和地区（中国台湾、朝鲜、中国东北地区等），它的最高目标不是追求贸易和经济利益，而是领土的扩张。日本虽然在本土有一定的宪政形式，但是在殖民朝鲜半岛的35年却是一种没有任何宪政形式的高压专制，并且也没有给以后发展宪政做文化观念上的铺垫，只是在民众心中留下对殖民主义的憎恨。 朝鲜半岛的分裂二战结束后朝鲜的政治精英主要由三个部分组成：一是从美国留学归国者（如李承晚、徐载弼等），二是从中国回来的军官和独立活动家（军官如柳东悦、李范奭（音“shi”），政治家如大韩民国临时政府的领导），三是国内团体的领袖。然而随着苏联与美国的以三八线为界的分区占领，使得朝鲜半岛变成了国际斗争的一个前沿阵地。就这样在1945年到1947年间，朝鲜半岛左右两翼政治力量的斗争随着苏美谈判的脉搏而跳动，而这两个占领国都希望由自己来主导朝鲜半岛的国家建立。 由于左右两翼政治精英的思想分歧是对抗性的，即使美苏两国不干涉，恐怕也很难建立一个统一的政府，而且这种对立很容易导致内战，最终还是要去寻求国际力量的支持。1950年爆发的朝鲜战争就是这个逻辑的演绎。 民主形式的引入韩国的民主框架式在1948年到1952年期间在美国的帮助与监督之下奠定的。在1945年9月19日占领军就成立了军政厅并宣布了八项基本原则： 基本政治权利来自国民 政治权利执行的政策由国民通过选举决定 选举由两个以上政党以竞争方式进行 政党必须是民主的国民自发团体 确保国民的基本权利 社会舆论自由而不受政府控制 实行法制 政府的权力必须分立 1948年1月，在美国的推动下，联合国召开了一个特殊的委员大会，授权联合国朝鲜委员会“处理在可行的地区举行选举的相关事情”，随之，朝鲜委员会宣布将要在朝鲜半岛南部进行选举。5月10日，根据过渡立法议院制定的选举法，南部在军政厅的组织下举行了第一届国会的选举。此次选举共选出198个议员，民众的参与投票占到注册选民的95.5%。5月30日，第一届国会也被称为“制宪国会”开院，7月17日公布了《大韩民国宪法》和《政府组织法》。各项法律都是在美国专家的帮助下起草的，并且大部分是照抄美国等下方国家，所以速度很快。《大韩民国宪法》规定了韩国民主制度的基本形式，主要内容包括保障公民的自由权，实行立法、行政、司法三权分立，设单院制国会，总统中心制，总统任期四年，由国会选出，可连任一次等。7月28日，国会按照宪法以间接选举的方式选举总统。李承晚和金九为候选人，结果李承晚以压倒多数当选。8月15日，“大韩民国”政府正式宣告成立。9月9日，北部宣告“朝鲜民主主义人民共和国”政府成立，朝鲜半岛正式分裂为两个国家。在1948年建立政府前后有一个密集的制定法律阶段。除了上述两部法律之外，还有《国家公务员法》、《粮食谷物买入法》、《国家安全保卫法》、《新闻法》、《兵役法》、《邮件取缔法》、《土改法》等。这些法律同宪法一起，构成基本的法律系统，是民主制度的形式框架的重要组成部分。 关于这个民主的形式框架从1948年到1952年，韩国完成了奠定民主的形式框架的工作，这符合民主的一般形式，即，符合各民主制度的平均值。这一框架的建立对于韩国以后的民主发展至关重要。可以说从此到1987年韩国的政治发展与变动都是在这个大框架下进行的，包括法律的变动、专制手段的使用、具体的形式细节的变化。甚至可以进一步说，1987年以后的“民主化”也是在这个框架基础上展开的。美国人很重视民主的形式框架。当基本的形式要素设立之后，美国就会认为民主制度已经在某个国家建立起来了。美国是维持在韩国的这个形式框架的极其重要的力量。民主的形式系统奠定之后，本土文化由于对它不适应而不断地产生要颠覆它、扭曲它的冲力。民主制度是对统治者的一个剥夺。它首先使统治者不舒服，使他们受限制而享受不到传统的荣耀、威严和特权。所以，他们总是找各种借口诋毁民主制度和扭曲其形式。]]></content>
      <categories>
        <category>书籍</category>
      </categories>
      <tags>
        <tag>韩国</tag>
        <tag>朝鲜</tag>
        <tag>历史</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[学习一下朝鲜半岛的历史知识]]></title>
    <url>%2F2014%2F09%2F12%2Fdaynote_20140912%2F</url>
    <content type="text"><![CDATA[新罗、高丽、李氏从古朝鲜（约公元前5世纪到前4世纪）到三国时代之前，朝鲜半岛基本处于部落社会阶段。公元前1世纪，高句丽、百济、新罗先后兴起，并在公元4世纪形成鼎足的局面，并且都采取了逐级管理的行政分区制度和官僚等级制度。后来在中国唐朝的帮助下，新罗分别于公元660年、668年先后灭了百济和高句丽，结束了三国时代。然而由于新罗还是以部落、家族的网络为支撑，而不是由同一的科层体系职称，是世袭的部落或家族的统治而不是官僚制。部族或家族的兴衰运动始终是体系的不稳定因素，导致中央的权利斗争、地方的割据和各种其他冲突。终于公元900年，后百济与后高句丽先后建国，朝鲜半岛进入了“后三国”时期。然而过了18年，由后高句丽的建立者弓裔的部将王建取而代之为王，先后灭了新罗与后百济，朝鲜半岛重新统一，即历时近500年的高丽王朝，其间先后与宋朝结交、断交，向辽称臣，向金称臣，后又成为元朝的一个行省。1392年，高丽的都统使李成桂废黜高丽国王，自立为王，并改国号为朝鲜，定都汉阳（今韩国首尔），称作“李氏朝鲜”。从此到1910年，朝鲜朝经历了500多年。 朝鲜半岛从新罗、高丽到李氏朝鲜这样一个长期的中央集权的努力，应该被看做一个文明进步的过程。 科举制度李氏朝鲜的中央集权受到科举考试的支撑。科举考试分为文科、武科、杂科三类。科举考试的意义是革命性的，标志一种现代因素的发展，即知识精英替代以家族、土地等为背景的旧精英。科举考试把人们的志向引导到以国家卫单位的集权管理体系中，把封建结构下的弱肉强食的无序竞争转变为有序的竞争。从权力的分配来说，科举考试在理论上是公平的，虽然仍然是精英主义的，却带来社会阶层的上下流动。儒教社会结构的一个突出结构是具有纵向的流动性。在其他传统制度中，也有一些从下层上升到上层的例子，但却不是制度化的，而科举制度则是制度化的官员招募，它使传统官僚制达到一种更高境界。 然而这样的集权官僚制是一个自上而下的等级控制结构，本质是集权体制对民众的层层压迫和剥夺。它虽然帮助起了稳定的政治持续，克服了地方封建势力的争斗与战争，但却巩固了一个压迫的政治体系，这种体系下没有个人自由的空间，也不可能有民主因素的出现。 忠与孝李氏朝鲜所尊奉的儒学是朱子学，即中国哲学史上的第一代新儒学。在朝鲜，“忠”是强调对国王的绝对、无条件的服从。“忠”的观念维护了超越家庭和家族的更大共同体的关系。李氏朝鲜与中国封建时代的情况一样，很重视梳理“孝”的典范，因此朝鲜的民间也有不少的行孝的故事题材。 由于科举考试建立起了官本位的价值观，家庭共同体就与国家共同体紧密地联系在一起，“忠”与“孝”也就不可分开了。这里没有个人主义，甚至与个人主义对立，但却有现世主义，是追求现实生活提升的一种小集体协作方式。 社会冲突这里主要是宗派主义的争斗与民众的抵抗运动。 李氏王朝的宗派主义虽然不像西方概念中的政党，但却很像1948年以后的韩国的政党。在韩国，无论是执政党还是反对党，内部都有很多的派系并经常发生分裂，而且这些派系都是建立在个人关系基础之上的。宗派主义是使社会朝着多元化社会方向发展的一个驱动力。无论是在朝鲜的官僚系统中，还是在韩国的政党系统中，它都是推动体系变革的力量。韩国的政党组织一直在分裂、重组与合并的宗派主义运动中生存，都没有获得长期的稳定性。但这并非说明宗派主义完全是消极因素，至少，它的活动说明了政党内部的竞争活力，抑制了党内出现个人独裁和权力垄断，增加了透明度。一句话，它在推动政党内部新的整合机制的发展。 一方面，以农民为主体的下层民众被高度地整合进中央集权中，是受君王和大大小小的父母官庇护的“子民”，是中央集权政治的社会基础；另一方面，他们是被压在宝塔式政治建筑的底层的人口，是统治和剥削的对象，其组织能力受到文化水平的限制。这样，他们虽人数众多，却力量分散，很难构成对现存政治秩序的威胁，而事实上对体制构成真正威胁的是从统治体系中边缘化出来的那部分社会力量。]]></content>
      <categories>
        <category>书籍</category>
      </categories>
      <tags>
        <tag>韩国</tag>
        <tag>朝鲜</tag>
        <tag>历史</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[想不想长大]]></title>
    <url>%2F2014%2F09%2F11%2Fdaynote_20140911%2F</url>
    <content type="text"><![CDATA[记得好像初中听到过S.H.E的一首歌《我不想长大》，觉得她们不想长大是有理由的，而我由于一直疲于要扮演着“乖孩子”的角色却一直渴望长大。 就当我一心想着长大，其实向往的是那份自由。可是没有意料到的是摆脱枷锁获得自由的那一刻到来的并非是无比的畅快而是一段时期的迷茫。所幸的是在大学校园中并没有花费多大代价便可以度过这段迷惘时光。 当重新思考的时候，同时却是不停地在前进着。想要抓住的过去只有是保持一颗童真、不断好奇的心。然而始终不愿回到过去，在于知道被限制太多的孩子难以看到山背后其实太阳还没落下却以为整个天都黑了。当将幻想存在心底却不戳破其实是成长后对孩童时代纯粹的心灵的一种纪念。当将眼光更多聚焦当下告别童年，除了想说自己长大了，还有一种对于过去提炼的美好回忆的珍惜，甚至作为成人礼般珍藏。 想想长大后的我们，面对复杂多变的社会，才更加感叹儿时的天真无邪。这其实也是一种对记忆的提炼与筛选，儿时的不记仇往往出于健忘和尚未形成的个人利益的考虑。因此这只能存于记忆之中而不能经受现实社会的考验。 尽管如此，我们除了用保持回忆的方式当成对美的纪念，同时对于童年心中那般单纯求知的心的追求也可以作为对美的努力尝试。 曾经一直想长大，是想着长大后的自由。如今不想长大，想的却仅仅是保持那颗“一直想长大”的心。]]></content>
      <categories>
        <category>随笔</category>
      </categories>
      <tags>
        <tag>自由</tag>
        <tag>童年</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[我们]]></title>
    <url>%2F2014%2F09%2F10%2Fdaynote_20140910%2F</url>
    <content type="text"><![CDATA[当我们认识到自身是有多么渺小、卑微，但是同时又那么与众不同。我们会感到无助，同时又有些欣慰。 我们一直在努力证明着自己可以独立，然而最终发现这路上也需要彼此依偎。 我们有那么多美丽的幻想，同时也会有过噩梦。 我们经常感到迷茫，盼望着有方向指引着我们前进，却发现我们一路走过来便是一种方向。 我们曾经想的太多太多，到头来却发现一切其实很简单，可是曾经的一切因为有过各种想法而丰富，同时占据着回忆。 我们是谁？我们就是我们，我们还是我们，同时也还是我。]]></content>
      <categories>
        <category>随笔</category>
      </categories>
      <tags>
        <tag>回忆</tag>
        <tag>存在</tag>
        <tag>幻想</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[天注定]]></title>
    <url>%2F2014%2F09%2F09%2Fdaynote_20140909%2F</url>
    <content type="text"><![CDATA[就在大力赞赏韩国电影之关心社会的力度，同时结合商业的特性，使得在这两方面都比较出色之时，我有幸最近看到一部国内的电影《天注定》。 其实这部电影去年就出来了，由于未在国内上映，因而知名度、影响力各方面在国内都远比不上票房上的TopN。 看完了这部电影，让我最大的遗憾是未能在国内上映而给国内的观众带来一些震撼。最大的欣喜在于中国人现在还是有电影人在关注社会，并在用自己的手法来表达思想的。虽然中国电影的规则限制重重，但也不因此放弃，并在国外与观众见面，这也是一种目前可取且无奈的手段。但是从中体现的不断探索、不放弃确实让我为之动容的。 不多说，对于影片，我想说的只有——导演，同时身为编剧，用自己独特的眼光看待当今中国的热门案件，并用艺术的手段但几近现实的形式展示在我们面前，让我们自己去看、去想。]]></content>
      <categories>
        <category>电影</category>
      </categories>
      <tags>
        <tag>中国</tag>
        <tag>电影</tag>
        <tag>社会</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[你的选择]]></title>
    <url>%2F2014%2F09%2F08%2Fdaynote_20140908%2F</url>
    <content type="text"><![CDATA[今天看《锵锵三人行》，有些常见问题背后的思辨引起了我的兴趣。 首先窦文涛提到他注意到他所认识到的上海的夫妻看上去就是那么般配，而且事实上他们在身份、地位、经济等方面也是比较匹配的，相差不是很大。这引起了他的注意，然而许子东的解释很有说服力—— 这表明了上海人的生活已经是小康状态了，因此不愿意处于结婚而牺牲了其他的考量。他们有各方面的尺度把握，不是因为只看中某一点而忽略其他因素。而且这也随着经济发展，其他城市也会越来越多地像上海人的这种考虑。但是这又有一另一方面，就是说我们其实是做了一个选择——是兼顾对方各方面的因素还是看重一个点而忽略其他点。如果是前者可能就很平淡而比较和谐一些。后者的话你就要自己承受其他不理想的点带来的困扰了。 总之，看上去是选了一个对象，其实是自己内心的一个抉择。是找类似的、匹配的、平淡的，还是浪漫的、只看优点忽略缺点的。也就是像选择生活一样，是平淡还是冒险的。这其实每个人都有自己的考量，你说呢？ 而往往不管你倾向哪一种，你的内心有时恐怕会想着另一种思路，如果再在实际中有这样的际遇或可能，那么就容易徘徊于这两条有些矛盾和冲突的路上，疲乏不已、心力交瘁。但是，何解呢？我只能说误解，因为爱的事情能说的那么清楚呢？这便在于爱能让理性与感性相互冲突、融合、对立、消解，最后谁也不知会碰撞成啥样。]]></content>
      <categories>
        <category>杂说</category>
      </categories>
      <tags>
        <tag>选择</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[人际关系的方法论之闲扯篇]]></title>
    <url>%2F2014%2F09%2F07%2Fdaynote_20140907%2F</url>
    <content type="text"><![CDATA[毕业之后，体验最多的关系还是同事之间的相处。由于在一块的时间比较长，虽说都是差不多一起毕业的，但是还是比不上同学关系。最起码的是有些话同事之间是不方便说的，而且往往你还在时刻把握着这个分寸，要想着如何拿捏，这个无形中给同事之间增加了不少的隔阂。 当然，这些都是不可避免的。因此当你刚刚来到一个新的城市工作的时候，除了工作上的同事关系很少有别的纽带与人相连，这对你来说就少了一个出口。这样一来，好多话恐怕就要憋在心里，这无疑给初来乍到的你又增添一分困惑。 不过这对我来说并没有带来很大的困难，因为在这里还有不少的同学，间歇性地聚聚，偶尔动手做做菜，喝点小酒，其实挺美好的。 另外，如果同事间有敞开聊天的时候，那也多见于平级之间，而且相互的水平等方面是有差不多的地方。然后通过这种方式，一是释放不好的情绪，二是将风险分摊。这样互相知道对方的一些不为他人所知的细节，都有着被泄密的危险，但因为有着某种共同点使得双方在都考虑到单独泄密不光没有什么好处还有可能自己被泄密的风险的情况下从而反而会尽力为对方保守着这些细节。说起来有点像是某种“荣辱共同体”（ps:我自己造的词），却让人感觉很亲密，其实只是互相有着共同的需求。 当然了，如果要说到各种人际关系的本质，其之所以能够发展都是双方都能从对方找到自己的需求并得以一定程度的满足。但是有时候我们认为是纯粹的，有时候认为是肮脏的。这便取决于这种需求是精神上的还是物质上的，但是大多数人不是分的那么清楚。比如说，同学中有一开始一方垂涎于另一方的样貌，然后使了一些小的手段获得了对方的亲睐，但在一起后双方确实是相敬如宾。又比如说一个漂漂的女生为了更快更便捷地获得物质的享受，便出卖自己的美色，但是最终发现自己真的爱上了对方。再或者说一个都有自己的家庭的男方和女方，由于对方的才气或者气质的吸引，发生了关系并且维持着，但是出于各自的家庭的责任感，但终究放精力放在了各自的家庭，然而心依旧在对方那儿。等等等等，这些关系关系是不是听起来越来越有些乱了。这些人你都不好痛快地骂他（或她），因为有时候他（或她）确实表现了人性善的一面，然而又不总是这样。他们不如荧幕上的人们爱憎分明，善恶对峙那么明显，让你不好评价。 其实这时候，你要做的是修正自己评价人的方法论，不要光凭某一件事去定义某个人，不要试图去合理地解释某个人，也许最好的方式是不断地学习如何更深入地了解一个人。]]></content>
      <categories>
        <category>杂说</category>
      </categories>
      <tags>
        <tag>评价</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[MRv1与MRv2]]></title>
    <url>%2F2014%2F09%2F06%2Fdaynote_20140906%2F</url>
    <content type="text"><![CDATA[写在前面虽然接触hadoop这么长时间了，但很少有写过一些技术性总结的文档，现在起开个好头，复习、加深一下对MRv1与MRv2的理解。 MRv1即MapReduce Version 1.0，该计算框架主要由三部分组成，分别是 编程模型 数据处理引擎 运行时环境 编程模型将问题抽象成map和reduce，其中map阶段将输入数据解析为k/v，迭代调用map()函数处理后，再以k/v的形式输出到本地目录，reduce阶段则将key相同的value进行规约处理，最终将结果写在hdfs上； 数据处理引擎由MapTask和ReduceTask组成，分别负责Map阶段逻辑和Reduce阶段逻辑； 运行时环境由（一个）JobTracker和（若干个）TaskTracker两类服务组成，其中JobTracker既负责资源管理又负责所有的作业控制，而TaskTracker负责接收来自JobTracker的命令并执行它。 MRv2即MapReduce Version 2.0，该计算框架与MRv1具有相同的编程模型和数据处理引擎，唯一不同的是运行时环境。MRv2是在MRv1基础上经过加工，运行于资源管理框架Yarn上的MapReduce计算框架。它的运行时环境是通用的资源管理框架Yarn和作业控制进程ApplicationMaster，其中Yarn负责资源管理与调度，而ApplicationMaster仅负责一个作业的管理。 小结MRv1是一个独立的离线计算框架，而MRv2是一个运行在Yarn之上的MapReduce框架。 细说区别MRv1的运行时环境主要由JobTracker和TaskTracker组成，其中JobTracker负责资源和任务的管理和调度，TaskTracker负责单个节点的资源管理和任务调度。这样使得MRv1把资源管理和应用程序管理混杂在了一起，在扩展性、容错性和多框架支持方面存在缺陷。而MRv2则通过将资源管理和应用程序管理两部分剥离开来，分别由Yarn和ApplicationMaster负责，Yarn专管资源管理和调度，而Application则负责与具体应用程序相关的任务切分、任务调度和容错等等。]]></content>
      <categories>
        <category>技术</category>
      </categories>
      <tags>
        <tag>mapreduce</tag>
        <tag>yarn</tag>
        <tag>hadoop</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[社会的bug观]]></title>
    <url>%2F2014%2F09%2F05%2Fdaynote_20140905%2F</url>
    <content type="text"><![CDATA[我也如很多人一样，心中有一个黄金时代，有时候是民国，有时候是宋朝，有时候是春秋战国时期，但目前心中的黄金时代就是眼下。 我们之所以有那么一个黄金时代的想法在于看到了那个时代自认为最美好的事物并想象自己参与其后在那个，想象着自己得到身份的认同，这在眼下好多梦想难以实现的时刻确实是一剂很好的止痛针。 此外，针砭社会系那是的不平与腐朽，既能让你立于道德不败之地，又能获得一个关心现实、批判黑暗等的好名头，不过更重要的恐怕还是能够发泄一下心中对于现实的残酷的不堪和无奈。当然，这样说可能会引起大多数人的奋力反击——他们有人就坚信自己是真的在想这个社会匾额更好，而非仅仅泄一己之愤。而我恰恰想说的是，即使是为了泄一己之愤而骂社会，只要骂的合理，又有何妨，难道这个社会脆弱到禁不起几个人骂一骂吗？其实我们这个社会不怕有更多的人骂，怕的确实没有人想这个社会越来越好和没有人实际行动起来让这个社会越来越好。 我真正想表达的是，我们除了看到这个社会的黑暗面之外，还要看到这个社会的光明的一面。减少黑暗面和扩大光明面的目的是一致的，或许后面一种能让自身更加积极、全身心地投入到其中，这不是更好么？ 此外，很多人会抱怨生在这个问题太多的时代，但是我们换个思路，问题多，才需要我们来投入其中来解决问题，这也正是体现你自身价值的机会啊。记得以前看到一个沙龙上一个来自台湾的人看到大陆的青年来听讲座时有意思地提到：“看到你们就很激动，因为你们都是带着问题来的，怀揣着一颗急于求知的心，而在台湾已经很少看到这样的局面了。”当然，这话外表明了大陆还有好多的问题有不少人在关注与求解，而在民主化、现代化相对进步一些并且地域较小的台湾则没有今天大陆人面对的问题那么多。 一方面是我们身处问题多多的社会，也是经常被人谓“转型中的社会”，一方面是处于其中的我们面对问题时的恐慌、逃避、烦躁。从一个IT男的角度考量，以解决问题、修复bug的角度看待社会，而非沉浸于对问题的误解与惧怕，不光可以提升个人幸福感，还可以为社会贡献一份无知的力量，并从中体验责任感带来的满足感，这不失为一种可取的思路吧。]]></content>
      <categories>
        <category>杂说</category>
      </categories>
      <tags>
        <tag>社会</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[如何将MapReduce转换成Spark]]></title>
    <url>%2F2014%2F09%2F04%2Fdaynote_20140904%2F</url>
    <content type="text"><![CDATA[充分利用Spark的秘诀在于理解它的RDD API和原始的Mapper和Reducer 的API之间的区别。 经典的MapReduce一开始就成为Apache Hadoop的主要计算方式。它的思想在于最初设计为下面的场景：大规模的日志访问和面向批处理的ETL操作。 随着Hadoop的功能的拓展，各方面都表明MapReduce不再是一个对所有计算都是最好的框架了。Hadoop通过将资源管理模块抽离出来成为一个可选的结构组件，叫Yarn。因此就有像Impala这样使用新型的、专门的、非MapReduce的结构来实现交互式的SQL功能。 今天Apache Spark是另一种可选的结构，并且很多人说它作为一个通用的Hadoop计算框架战胜了MapReduce。但是如果说MapReduce是如此有用，那么会马上被替代吗？毕竟，虽说现在Hadoop平台也有了实时的功能，但是仍然有不少的类ETL工具使用MapReduce运行在Hadoop上。 Spark完全有可能重新实现类似MapReduce的一些计算。由于Spark能够优化掉溢出到磁盘所以简单更快地实现这些计算。对于MapReduce，在Spark上重新实现像是一种回归。Spark毕竟是模仿Scala的函数式编程的风格和API。而MapReduce中同样的观点也是来自函数式编程语言LISP。 虽说Spark的主要抽象概念，RDD清晰地给出了map()和reduce()操作，但是它们不是直接仿照Hadoop中的Mapper和Reducer的API。这个经常给开发者Mapper和Reducer的类迁移到Spark上同等的功能上带来一些障碍。 比较传统的函数式语言的map()和reduce()在Scala或Spark上的实现，Hadoop上的Mapper和Reducer的API事实上是可伸缩的并且复杂的。这些差异对于习惯于MapReduce的开发者来说并不明显，下面的介绍都是详细的Hadoop实现和而非抽象的MapReduce思想。 Mapper和Reducer总是使用key-value对来作为输入和输出； 一个Reducer仅在每个key上归纳value； 一个Mapper或Reducer对于每个输入可能得到0,1或者多个key-value对； Mapper和Reducer可能得出任意的key或value，而非仅仅是输入的子集或转换； Mapper和Reducer对象的生命周期范围在map()和reduce()方法调用中。它们支持一个setup()和cleanup()方法，这两个方法可以被用来在一批记录被处理的开始和结束之时做些处理。 这篇文章将会简要地介绍如何用Spark来重现它们，并且表明不是必须要逐字地转换一个Mapper和Reducer。 Key-Value Pairs as TuplesLet’s say we need to compute the length of each line in a large text input, and report the count of lines by line length. In Hadoop MapReduce, this begins with a Mapper that produces key-value pairs in which the line length is the key, and count of 1 is the value: 12345678public class LineLengthMapper extends Mapper&lt;LongWritable,Text,IntWritable,IntWritable&gt; &#123; @Override protected void map(LongWritable lineNumber, Text line, Context context) throws IOException, InterruptedException &#123; context.write(new IntWritable(line.getLength()), new IntWritable(1)); &#125;&#125; It’s worth noting that Mappers and Reducers only operate on key-value pairs. So the input to LineLengthMapper, provided by a TextInputFormat, is actually a pair containing the line as value, with position within the file thrown in as a key, for fun. (It’s rarely used, but, something has to be the key.)The Spark equivalent is: 1lines.map(line =&gt; (line.length, 1)) In Spark, the input is an RDD of Strings only, not of key-value pairs. Spark’s representation of a key-value pair is a Scala tuple, created with the (a,b) syntax shown above. The result of the map() operation above is an RDD of (Int,Int) tuples. When an RDD contains tuples, it gains more methods, such as reduceByKey(), which will be essential to reproducing MapReduce behavior. Reducer and reduce() versus reduceByKey()To produce a count of line lengths, it’s necessary to sum the counts per length in a Reducer: 123456789101112public class LineLengthReducer extends Reducer&lt;IntWritable,IntWritable,IntWritable,IntWritable&gt; &#123; @Override protected void reduce(IntWritable length, Iterable&lt;IntWritable&gt; counts, Context context) throws IOException, InterruptedException &#123; int sum = 0; for (IntWritable count : counts) &#123; sum += count.get(); &#125; context.write(length, new IntWritable(sum)); &#125;&#125; The equivalent of the Mapper and Reducer above together is a one-liner in Spark: 1val lengthCounts = lines.map(line =&gt; (line.length, 1)).reduceByKey(_ + _) Spark’s RDD API has a reduce() method, but it will reduce the entire set of key-value pairs to one single value. This is not what Hadoop MapReduce does. Instead, Reducers reduce all values for a key and emit a key along with the reduced value. reduceByKey() is the closer analog. But, that is not even the most direct equivalent in Spark; see groupByKey() below. It is worth pointing out here that a Reducer’s reduce() method receives a stream of many values, and produces 0, 1 or more results. reduceByKey(), in contrast, accepts a function that turns exactly two values into exactly one — here, a simple addition function that maps two numbers to their sum. This associative function can be used to reduce many values to one for the caller. It is a simpler, narrower API for reducing values by key than what a Reducer exposes. Mapper and map() versus flatMap()Now, instead consider counting the occurrences of only words beginning with an uppercase character. For each line of text in the input, a Mapper might emit 0, 1 or many key-value pairs: 123456789101112public class CountUppercaseMapper extends Mapper&lt;LongWritable,Text,Text,IntWritable&gt; &#123; @Override protected void map(LongWritable lineNumber, Text line, Context context) throws IOException, InterruptedException &#123; for (String word : line.toString().split(" ")) &#123; if (Character.isUpperCase(word.charAt(0))) &#123; context.write(new Text(word), new IntWritable(1)); &#125; &#125; &#125;&#125; The equivalent in Spark is: 123lines.flatMap( _.split(&quot; &quot;).filter(word =&gt; Character.isUpperCase(word(0))).map(word =&gt; (word,1))) map() will not suffice here, because map() must produce exactly one output per input, but unlike before, one line needs to yield potentially many outputs. Again, the map() function in Spark is simpler and narrower compared to what the Mapper API supports. The solution in Spark is to first map each line to an array of output values. The array may be empty, or have many values. Merely map()-ing lines to arrays would produce an RDD of arrays as the result, when the result should be the contents of those arrays. The result needs to be “flattened” afterward, and flatMap() does exactly this. Here, the array of words in the line is filtered and converted into tuples inside the function. In a case like this, it’s flatMap() that’s required to emulate such a Mapper, not map(). groupByKey()It’s simple to write a Reducer that then adds up the counts for each word, as before. And in Spark, again, reduceByKey() could be used to sum counts per word. But what if for some reason the output has to contain the word in all uppercase, along with a count? In MapReduce, that’s: 123456789101112public class CountUppercaseReducer extends Reducer&lt;Text,IntWritable,Text,IntWritable&gt; &#123; @Override protected void reduce(Text word, Iterable&lt;IntWritable&gt; counts, Context context) throws IOException, InterruptedException &#123; int sum = 0; for (IntWritable count : counts) &#123; sum += count.get(); &#125; context.write(new Text(word.toString().toUpperCase()), new IntWritable(sum)); &#125;&#125; But reduceByKey() by itself doesn’t quite work in Spark, since it preserves the original key. To emulate this in Spark, something even more like the Reducer API is needed. Recall that Reducer’s reduce() method receives a key and Iterable of values, and then emits some transformation of those. groupByKey() and a subsequent map() can achieve this: 1... .groupByKey().map &#123; case (word,ones) =&gt; (word.toUpperCase, ones.sum) &#125; groupByKey() merely collects all values for a key together, and does not apply a reduce function. From there, any transformation can be applied to the key and Iterable of values. Here, the key is transformed to uppercase, and the values are directly summed. Be careful! groupByKey() works, but also collects all values for a key into memory. If a key is associated to many values, a worker could run out of memory. Although this is the most direct analog of a Reducer, it’s not necessarily the best choice in all cases. For example, Spark could have simply transformed the keys after a call to reduceByKey: 1... .reduceByKey(_ + _).map &#123; case (word,total) =&gt; (word.toUpperCase,total) &#125; It’s better to let Spark manage the reduction rather than ask it to collect all values just for us to manually sum them. setup() and cleanup()In MapReduce, a Mapper and Reducer can declare a setup() method, called before any input is processed, to perhaps allocate an expensive resource like a database connection, and a cleanup() method to release the resource: 123456789101112public class SetupCleanupMapper extends Mapper&lt;LongWritable,Text,Text,IntWritable&gt; &#123; private Connection dbConnection; @Override protected void setup(Context context) &#123; dbConnection = ...; &#125; ... @Override protected void cleanup(Context context) &#123; dbConnection.close(); &#125;&#125; The Spark map() and flatMap() methods only operate on one input at a time though, and provide no means to execute code before or after transforming a batch of values. It looks possible to simply put the setup and cleanup code before and after a call to map() in Spark: 123val dbConnection = ...lines.map(... dbConnection.createStatement(...) ...)dbConnection.close() // Wrong! However, this fails for several reasons: It puts the object dbConnection into the map function’s closure, which requires that it be serializable (for example, by implementing java.io.Serializable). An object like a database connection is generally not serializable.map() is a transformation, rather than an operation, and is lazily evaluated. The connection can’t be closed immediately here.Even so, it would only close the connection on the driver, not necessarily freeing resources allocated by serialized copies.In fact, neither map() nor flatMap() is the closest counterpart to a Mapper in Spark — it’s the important mapPartitions() method. This method does not map just one value to one other value, but rather maps an Iterator of values to an Iterator of other values. It’s like a “bulk map” method. This means that the mapPartitions() function can allocate resources locally at its start, and release them when done mapping many values. Adding setup code is simple; adding cleanup code is harder because it remains difficult to detect when the transformed iterator has been fully evaluated. For example, this does not work: 123456789lines.mapPartitions &#123; valueIterator =&gt; val dbConnection = ... // OK val transformedIterator = valueIterator.map(... dbConnection ...) dbConnection.close() // Still wrong! May not have evaluated iterator transformedIterator&#125;``` A more complete formulation (HT Tobias Pfeiffer) is roughly: lines.mapPartitions { valueIterator =&gt; if (valueIterator.isEmpty) { Iterator… } else { val dbConnection = … valueIterator.map { item =&gt; val transformedItem = … if (!valueIterator.hasNext) { dbConnection.close() } transformedItem } }} Although decidedly less elegant than previous translations, it can be done. There is no flatMapPartitions() method. However, the same effect can be achieved by calling mapPartitions(), followed by a call to flatMap(a =&gt; a) to flatten. The equivalent of a Reducer with setup() and cleanup() is just a groupByKey() followed by a mapPartitions() call like the one above. Take note of the caveat about using groupByKey() above, though. ### But Wait, There&apos;s More MapReduce developers will point out that there is yet more to the API that hasn&apos;t been mentioned yet: - MapReduce supports a special type of Reducer, called a Combiner, that can reduce shuffled data size from a Mapper. - It also supports custom partitioning via a Partitioner, and custom grouping for purposes of the Reducer via grouping Comparator. - The Context objects give access to a Counter API for accumulating statistics. - A Reducer always sees keys in sorted order within its lifecycle. - MapReduce has its own Writable serialization scheme. - Mappers and Reducers can emit multiple outputs at once. - MapReduce alone has tens of tuning parameters. There are ways to implement or port these concepts into Spark, using APIs like the Accumulator, methods like groupBy() and the partitioner argument in various of these methods, Java or Kryo serialization, caching, and more. To keep this post brief, the remainder will be left to a follow-up post. The concepts in MapReduce haven&apos;t stopped being useful. It just now has a different and potentially more powerful implementation on Hadoop, and in a functional language that better matches its functional roots. Understanding the differences between Spark&apos;s RDD API, and the original Mapper and Reducer APIs, helps developers better understand how all of them truly work and how to use Spark&apos;s counterparts to best advantage.]]></content>
      <categories>
        <category>技术</category>
      </categories>
      <tags>
        <tag>mapreduce</tag>
        <tag>spark</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[想]]></title>
    <url>%2F2014%2F09%2F03%2Fdaynote_20140903%2F</url>
    <content type="text"><![CDATA[一朵小花 你从她身旁经过 如果你没看见她 你还会想起她吗]]></content>
      <categories>
        <category>随笔</category>
      </categories>
      <tags>
        <tag>存在</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[幻想的英雄情结]]></title>
    <url>%2F2014%2F09%2F02%2Fdaynote_20140902%2F</url>
    <content type="text"><![CDATA[我想着有一天 乘风破浪 像个战士，独自一人 前面是茫无边际的大海 后面是狂风暴雨漆黑一片 在我别无选择毅然决定前行之际 耳旁响起的是“Gonna Fly Now” 而我依然头也不会 冲向未知]]></content>
      <categories>
        <category>随笔</category>
      </categories>
      <tags>
        <tag>幻想</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[素媛]]></title>
    <url>%2F2014%2F09%2F01%2Fdaynote_20140901%2F</url>
    <content type="text"><![CDATA[素媛，这是片中女孩的名字，她在父母及周围人群的关怀下，即使遭受到惨重的侵犯也依然表现得勇敢、坚强。 影片中女孩演绎得让人惊叹不已，我还担心这会对她的心理造成一些障碍，上网看相关介绍才知道这个角色是经过海选的，而且剧组还专门联系了相关的儿童心理辅导机构，但她的反应似乎也让大家打消了所有的顾虑。 整个影片看起来有些沉重，但是让人看到了希望，因为这个女孩在越来越开朗并趋于正常。特别是片中的父亲由一开始的粗心大意、不关心转变为想要杀掉罪犯也要维护女儿的伟大父亲形象。其中由于女儿受害后的心理问题难以接受父亲的男人形象，他便选择了不让女儿看到他却一直默默地扮演女儿所喜欢的卡通形象逗她乐同时保护她，也终于随着女儿心理的慢慢恢复使得她能够重新接受父亲。看到此处，我已经用了好几张纸巾了，好在没有别人在，不然不能哭得尽兴该是多么难受啊！ 这部影片除了父女情让我动容之外，给我感触最深的还是小女孩在受到伤害之后的恢复过程中各类人群对她的关怀。父母的照顾不必说，最重要的是心理咨询师的一步步引导。同时更让我关注到的是隔壁邻居的主动捐款和安慰，公司上司、同事的帮助，同学亲切的关心（贴满整个窗户的小纸条看起来让人心里暖暖的）。这些给我的感受是整个周围的环境给这个受伤害的小女孩的是小心翼翼的避免二次伤害的关心，这是多么强大又正面的力量啊。这也给小女孩的恢复正常贡献了不可估量的作用。 这不禁让我联想到当今中国不断爆出油桶被侵犯的案件，却缺少一个强大健全的社会力量为这些受伤的孩子提供全面的帮助，就连一部能反应类似事件的影片也难得见到。 回头想想自己最近看得几部韩国电影，都是《熔炉》《恐怖直播》《辩护人》《素媛》这样的犯罪剧情片，这些电影深刻揭露和批判了现实，不仅让我们看到社会真相、人性本质同时更带给人们改变社会的力量，这些都是值得我们所有中国人学习的。]]></content>
      <categories>
        <category>电影</category>
      </categories>
      <tags>
        <tag>电影</tag>
        <tag>韩国</tag>
        <tag>社会</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[梦想]]></title>
    <url>%2F2014%2F08%2F31%2Fdaynote_20140831%2F</url>
    <content type="text"><![CDATA[说到梦想梦想，这个词我们听得太多太多，说到梦想几乎都会联想到马丁·路德·金的演讲《我有一个梦想》，也有人认为这是美国人追梦的而最佳阐述，就连在当下的中国也听见主流声音不时强调着“中国梦”。 梦想的光芒一般当人有某种超越当前现实的想法的时候容易被人说是“做梦”，可是如果那个人在自己的“梦”后面加个“想”字，貌似这个人身上便充满了活力与希望，甚至散发出某种光芒。 梦想的本质梦想，说白了是对未来个人状态的一种想象。正因为是未来，那么这个距离感还会容易产生高度差，即梦想的内容大多是高于当前的现实。梦想的好处在于，我们承认那种状态的到达是需要跨越各种限制的，而事实上成败与否又非那么容易检验，那么可以减小你的挫败感和排解你对于当前的不满，因为你着眼的是未来。坏处也正在于此，可能是一心只想着目标，而忽视了过程的体验。 建议在这里，作为中国大地上能养活自己同时每周还能挤出一点时间的最广大群体的一员打工族，给这个群体有一点关于梦想的态度的建议——或许你对你当前的工作不满意，但你应该为自己能够经济上独立有自由做人的底线而庆幸。重要的是要么去找一份与你兴趣相投的工作，要么在现在的工作上重新发现你的兴趣。之后至于所谓梦想有无不重要，因为你已经找到了你的兴趣，自然超前不断行进。]]></content>
      <categories>
        <category>杂说</category>
      </categories>
      <tags>
        <tag>梦想</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[不再强调]]></title>
    <url>%2F2014%2F08%2F30%2Fdaynote_20140830%2F</url>
    <content type="text"><![CDATA[大城市的好处在于你可以与任何人无关，坏处在于这样的状态容易让人缺少存在感。 这个社会，我们经常强调的是个人的独立，例如什么独自旅行、独自生活啦。其实好多时候我们越是强调的东西往往是我们最缺乏的。我们之所以老是那样说，一部分是出于抵制一成不变的规范式的生活。如果说哪一天我们没有人再去强调自由，去大力宣说一个人旅行的美妙之时，不是说没有人这么干了，而是大部分都会这么干并且当成了常态。 我们一直强调的生活方式定是现在大多数人难以到达的状态，因此我们有了去说的理由，也有了为了这而去做的借口。]]></content>
      <categories>
        <category>随笔</category>
      </categories>
      <tags>
        <tag>存在</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[生气到极点说的就是真话吗]]></title>
    <url>%2F2014%2F08%2F29%2Fdaynote_20140829%2F</url>
    <content type="text"><![CDATA[当两人闹了矛盾、有些争执之时，往往在于互相都认为对方错大于自身，甚至自身无过错。当然也有一种另外的情况就是其中一人耻于承认自身的不足或缺点而将过错分摊或干脆推给对方来试图减小那种自卑感的暴露于他人的危险。 在这里，我想着重说的是前面的一种情况，而且这种情况多见于男女关系之中，双方各自站在自身的家督坚持着自己的立场。可是一旦长时间的僵持无法得到对方的放弃或投降，便容易气急败坏，而说出了比平时更重的话语。而这时候另外一方常见的反应是:靠！你终于说出你的心里话，你就是这样想的，好，那么…… 其实仔细想一想，有可能那人是愤怒到极点时说出了一句藏在心里已久的话，但也有可能就是气话，而且他自己也未当真。 下面就自然引出一个新的问题——既然他自己未必当真，那又何必对另一方说出来呢？ 首先最简单的一种可能，他已经忍了很久了，极度愤怒之时他便不顾一切了，顺便发泄心中的不满。但如果不是这样呢？即气话不是他的真心话呢，他为什么还会这样说呢？首先，他不甘心在僵持中示弱，因为这容易与自己之前的表现产生很大的矛盾而令自己不舒服。其次，他容易将这样的僵持看成无硝烟的战斗，而他不想成为失败者。另外是他希望通过稍微有些过激的语言能够让对方步入一个更加难受、失望、后悔的境地但又不太至于崩溃以使自己有个喘息的机会而稍稍缓解紧张的神经。 这样看来，当两个人在僵持着并且越来越激烈时，其实他不光是与对方在争斗，更是与自己的内心做一种更大的抗衡，而且这个抗衡与生俱来地无比排斥外在的矛盾。因此双方此时都是痛苦又疲劳的，但又不肯松一口气。这真是一种难解的局面啊。]]></content>
      <categories>
        <category>杂说</category>
      </categories>
      <tags>
        <tag>其他</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[压迫与反抗]]></title>
    <url>%2F2014%2F08%2F28%2Fdaynote_20140828%2F</url>
    <content type="text"><![CDATA[“哪里有压迫，哪里就有反抗。”这经常用来鼓舞广大人民群众的集体斗争来争取自身的自由。 其实，当你投入了这样的运动之后，并未立刻得到自由，往往是将之放在未来作为一种希冀，而眼下却是更大的集体约束。 但是一旦压迫被冲破一个口子，很快变回整个崩溃，此时个体便易如火山般喷涌而出，你会看到各种不同的闪烁的火星。 往往由于压迫使其积蓄力量，等待已久只为那一刻的迸发，这必然会带来一段时期的绚丽的景象。 小学、初中、高中，好多时候，我们被老师、家长和周遭的气氛所压抑、被限制。可是如果在这段时间没有养成自我限制的习惯，离开了压迫，你可能也就失去了方向。 可当你重拾方向，继续前行之时，你会越发觉得各方面的压迫如此之多。就在你大骂这压迫之时，其实你应该有点庆幸，因为它让你发泄了自己的负面情绪，同时还感觉毫不愧色、正气凛然。 另一方面，正因为有了压迫，你的生命多了一份战斗与反抗作为人生意义而避免了空虚感的无形压力。 因此，最可怕的不是有多大的压迫，而是说——如果没有了压迫，我们又可以反抗什么？]]></content>
      <categories>
        <category>杂说</category>
      </categories>
      <tags>
        <tag>自由</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[你一直在那]]></title>
    <url>%2F2014%2F08%2F27%2Fdaynote_20140827%2F</url>
    <content type="text"><![CDATA[夜晚，最让人舒服的状态时外面真的很安静，同时内心也很安静，这样也才能真正感受静谧之美正在于这悄无声息。 似乎心思是能随着这份静如流水般经过夜的每一个角落。有过刹那的停留，却从不知不，仿佛一直在向前，忽然发现其实绕了一个大圈又回到了曾经走过的地方。要说这无聊至极，却又不然，因为每一份似曾相识中却又包含了更多的不了解。 这是一份遗憾或是一种奇遇，不好做过多解释。终究成为浮云，可有从未在心中彻底磨灭。过去的点点滴滴总能在不经意的一回首涌上心头，一番回味之后便又归于自然。终于，淡然处之也好，激烈兴奋也罢，这便是你，无需面对和逃避，因为你一直在那，从未走远。]]></content>
      <categories>
        <category>随笔</category>
      </categories>
      <tags>
        <tag>夜</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[改变]]></title>
    <url>%2F2014%2F08%2F26%2Fdaynote_20140826%2F</url>
    <content type="text"><![CDATA[“改变”这个词是我们经常提到的，有人想努力改变世界，也有人想着努力使自己不要被世界改变。 针对目前经济、科技等领域告诉发展的社会，人作为一种习惯于不变或缓慢变化的动物，多少有些措手不及，应接不暇。 有相反的两种人在这样的社会能够保持良好的状态。第一种是紧随时代步伐、努力追求新知识，不断求突破的人；第二种是以不变应万变的、看准时代良机、坚持自身追求与习惯，不停奋斗的人。第一种人因为总是走在人群的先烈而倍感骄傲，第二种人因发现蹊径而自豪。他们因为付出了自己的智慧和努力，在收获回报时感到满足。 一种是不断改变，另一种是在变化中坚持着不变。这两种人，要做好，都不容易，你想好了自己要成为哪种人吗？]]></content>
      <categories>
        <category>杂说</category>
      </categories>
      <tags>
        <tag>改变</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[恐怖直播]]></title>
    <url>%2F2014%2F08%2F25%2Fdaynote_20140825%2F</url>
    <content type="text"><![CDATA[今天有幸又看到了一部非常不错的韩国电影《恐怖直播》。 整个电影从刚开始的电台主播偶然见的电话，那头说要炸掉汉江大桥，就当他以为是个玩笑不久汉江大桥便发生了爆炸，由此整个影片便进入了紧张的气氛。 这又是一部全程无尿点的韩国电影，先大致说下影片的大致情节——一个汉江大桥的建设工人的儿子，因为父亲在施工时由于救援工作的不到位而丧命，同时面对法律手段的无效，而采取一种极端的手段——炸掉汉江大桥，希望借此来逼迫韩国总统出面说一句道歉的话。由于最早这一行动由一个被下调到电台而失意的主播尹英华知晓，便想以此来做成独家新闻视频直播来使得台长重新青睐于他。而台长为了提升收视率，不惜牺牲人质来希望尹英华激怒嫌犯而是政府出于正义的地位来挽回正面形象。一方面有派来替总统出面的警察局长来直播厅正义凛然、丝毫不顾是否会激怒嫌犯的情况下指责，却完全没有两天前自己还被调查受贿一案的尴尬，另一方面，始终未曾出现的总统在事态愈发严重以至于最后不可能挽回之时不惜让尹英华成为替罪羊而躲避可能随之而来的国民的指责。 整个危机事件起因于政府对人命的漠然而至的个人诉于正义的无效并最终采取恐怖行动，其间各种人和组织都是出于自身的利益来考虑事件。整个影片将人性中的私欲和社会中的黑暗面的展示发挥到了极致，但是也有一丝的光亮，那就是尹英华的前妻至死都战斗在现场坚持进行真实的报导。 这部电影除了通过紧凑的剪辑使得观众无片刻的放松，而获得充分刺激的观影体验之外，也有明显的政治映射——当一个人在法律上正义的诉求得不到回应之后而采取暴力的行为，该如何处理。国家或者代表其的政府在其遇到信任危机是应该首先不择手段排除危险来获得统治上的绝对安全还是应该以一副低姿态的面目以保障公民安全为目的来解决公共危机呢？ 此外，影片中的结尾让我很意外，嫌犯被直接射杀了，尹英华对政府行为感到失望后完成嫌犯的未完成的计划——总统不道歉就炸掉SNC大楼从而压倒国会大厦。 如此让人绝望的结局让我对韩国电影的政治宽松大为惊叹，重要的是还诞生了一部又一部优秀的电影。这些电影不仅故事性、真实性、冲击力极强，更重要的能给我们一些对于社会矛盾、民主自由等尖锐问题的深刻反思，这实属不易啊！]]></content>
      <categories>
        <category>电影</category>
      </categories>
      <tags>
        <tag>电影</tag>
        <tag>韩国</tag>
        <tag>社会</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[韩国经验的特点]]></title>
    <url>%2F2014%2F08%2F24%2Fdaynote_20140824%2F</url>
    <content type="text"><![CDATA[本书对韩国的威权注意政体作一历史的、经验型的研究，并结合对1987年民主化以后情况的一些扫描，从而解释民主形式与本土文化相互冲突域融合的逻辑，对威权体制的“过渡性”的意义作一重新评估。这一评估或许会改编我们原来对许多重要的理论问题与现实问题的认识。 韩国的民主建设时从1945年日本投降后开始的。1945年美军占领军进入朝鲜半岛后就启动组建政党的工作。1948年朝鲜半岛以三八线为界分裂为韩国和朝鲜两个国家。南部的韩国从1948年建立政府到1987年民主化运动的半个世纪时间，政治发展可分为四个大的阶段： 第一个阶段是从1948年到1960年李承晚时期，即第一共和国时期； 第二个阶段是从1960年8月到1961年5月民主党执政的第二共和国时期； 第三个阶段是从1961年5月16日朴正熙军事政变到1972年年底推行维新新宪法，期间包括两年多的军政府时期和1963年10月开始的第三共和国时期； 第四个阶段是从1973年进入维新体制到1987年，包括朴正熙第四共和国时期和金斗焕第五共和国时期。 第三波研究中关于韩国的诸多文献一致认为：在四个时期中只有第二共和国属于“民主”，而其他三个时期都是威权主义或“不民主”；韩国的民主是从1987年民主化运动后才开始的。这一流行观点需要重新检讨。尽管第一共和国时期的被讥讽为“外壳民主”或直接称为“独裁”，但韩国的民主制度的框架却是在此时期建立的。它有一个民主的宪法，三权分立、政党竞争、公民投票、地方自治、言论出版与结社自由等基本的形式因素都一一存在。这个大框架在以后并没有发生很大的改变，一直连续到1987年民主化之后。历时不到一年的第二共和国尽管受到第三波研究的很大的同情，被看做是“民主”，但实际上它与以前及以后的政权在形式框架上并无很大区别。“官僚——威权主义”的第四共和国和第五共和国被看做是最专制、最独裁的时期，但它们却依然保留着基本的民主形式框架，与第三共和国有继承性和连续性。 因此，可以把这四个时期看做是一个框架，即向充分民主过渡的阶段。这个历时约50年的过渡阶段充满了尖锐的政治冲突。韩国是个单一民族的国家，它没有令人头痛的亚民族或种族冲突的问题，它的政治冲突其实是比较简单的，集中表现为政府与反政府运动之间的冲突。这一冲突经常被解释为“专制”与“民主”的冲突，第三波研究的文献尤其是如此。这只是浅层的解释，其深层还是民主形式与本土文化和社会因素之间的冲突。很难说韩国威权主义政府总是在代表专制、扼杀民主，也很难说反政府的一方总是在代表民主和促进民主。在文化融合没有达到一定程度之前，双方都是有问题。政治精英有政治精英的问题，社会精英有社会精英的问题，民众有民众的问题。各个阶层的人们的思想和行为都与民主形式系统的要求有很大差距，因而产生了激烈的文化碰撞。 在这样一个充满矛盾的运动中，一切都是变化的，只有民主的形式系统是相对稳定的。民主有一般抽象的形式系统和具体的形式系统。一般形式系统是存在于概念之中的，是现实中各个民主的平均值，而具体的形式系统则是一个国家的具体的形式要素的组合。一般形式系统对所有的国家（包括那些没有奠定具体形式的国家）都会发生作用。但这并不决定有了具体形式后政治就变成民主的。就像韩国经验所展示的那样，它在很多时候是专制的、独裁的、混乱的、腐败的。但有一点却很重要，即，它是会不断发展的。换句话说，民主形式与本土文化之间的冲突最后会达成二者的融合。在传统政体和全权主义政体中也同样存在着各种激烈的冲突，并且这两类政体也各自有自己化解冲突的办法，但却没有我们所强调的“文化融合”的价值。因为在这两类政体中均没有民主的基本形式要素的存在。没有基本的形式要素存在，就等于“一个巴掌拍不响”，就不会有“文化融合”发生，自然也不会有“民主建设”的意义。 这就是说，韩国的民主建设与发展不是像目前人们认为的那样是从1987年开始的，而是从1948年开始的。发生在1987年的民主化转型只是一个水到渠成的步骤。韩国民主发展的特点是先奠定民主的形式框架，然后发生文化冲突与融合。为了清晰地揭示韩国在威权主义时期的民主发展这一线索，本书的章节内容基本是按照时间顺序排列的。这种排列也便于读者把握韩国政治发展的历史全貌。在这些章节中，笔者将通过对韩国不同时期、不同侧面的政治冲突的描述和分析来揭示威权主义过渡阶段的民主形式与本土文化冲突和融合的方方面面的性质和特点，从而拓展我们队关于民主发展的一些重要理论问题与现实问题的认识。]]></content>
      <categories>
        <category>书籍</category>
      </categories>
      <tags>
        <tag>民主</tag>
        <tag>韩国</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[痛与健身]]></title>
    <url>%2F2014%2F08%2F23%2Fdaynote_20140823%2F</url>
    <content type="text"><![CDATA[都说人有两种痛，一种是永远也得不到的痛，另一种是得到了又失去了的痛。最近的体会是打了两场足球比赛后便浑身酸痛，才发现长期坚持身体训练的重要性。 这次大运动量后其中主要是大腿的酸痛，这也让我知道了原来跑步只能锻炼小腿，结果忽视了大腿的锻炼。不过还好一直保持者跑步的习惯，至少每周有一两次，虽然肌肉有些拉伤，但总算恢复得比较快。 这时想起了已经垫底的《囚徒健身》，翻开一看，想起了当初按照上面的之时联系俯卧撑的经历，练到窄距俯卧撑便没有再练下去了。然后提到联系大腿的方式就是联系深蹲，希望自己重建健身的氛围。 最后说一句——健身不是为了成为肌肉男，而是如果不健身的话你的身体会不知不觉地每况愈下以至积重难返。]]></content>
      <categories>
        <category>随笔</category>
      </categories>
      <tags>
        <tag>痛</tag>
        <tag>健身</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[辩护人]]></title>
    <url>%2F2014%2F08%2F22%2Fdaynote_20140822%2F</url>
    <content type="text"><![CDATA[缘分今天看《锵锵三人行》，上面提到了《辩护人》这部电影，貌似很赞，就下载了看下。 简介以下来自时光网 影片以1981年韩国第五共和国全斗焕军事独裁政权执政初期的釜山为背景，讲述了平凡税务律师宋佑硕（宋康昊 饰）的为震惊全国的“釜林事件”受害学生进行人权辩护的故事。上世纪1980年代的韩国釜山，高中毕业、既没钱也没背景的宋佑硕(宋康昊 饰)考下了律师执照，凭借一腔热情和个人努力当上了税务律师，成立了个人事务所，打着”守护客户钱财”的口号到处散发名片招揽生意，虽艰辛却也小有成就。因为心存感恩，宋佑硕经常光顾一家七年前曾经蹭饭吃的小饭馆。一天，小饭馆突然关张，主人顺爱（金英爱 饰）的儿子镇宇（林时完 饰）不明原因的被关进了监狱。前往探视的宋佑硕看到遍体鳞伤的镇宇，感到震惊。受顺爱的请托，宋佑硕在经历了一番思想斗争后，决定为镇宇做一次辩护。 电影的开始 电影的演绎几乎每一个演员都演得很是自然，到位，尤其是男主，最让我感怀的是他在法庭上的一番番的质问与回答。本来由于这部电影是基于相关事实的，我对于这样深情的演绎是有所怀疑的——因为在真实情景中很难有如此效果，可我最终还是被这位律师宋佑硕的发自内心的表达给打动了，并且拍手叫好。 电影之外当你听到这样的新闻—— 电影公映两个月后,釜山地方法院2014年2月13日对“釜林事件”进行了二审宣判，宣布被告没有对国家的安全和自由民主主义基本秩序造成危害，因此改判被告人无罪。 会作何感想？艺术居然能够改变现实！当然这还是主要归功于韩国长期艰难困苦（恐怕这样说一点都不为过）的民主化的深入人心。 我这也使得这部电影更加多了一份历史的意义，也给了我追寻电影之外的历史事实的动力和兴趣。可以参阅卢武铉、全斗焕和本片背景的碎片和近代韩国民主运动历程。 这也直接导致我果断买了《民主与本土文化:韩国威权主义时期的政治发展》和《韩国电影历史、反抗与民主的想象》两本书，不过还没有寄到，希望还不错吧。]]></content>
      <categories>
        <category>电影</category>
      </categories>
      <tags>
        <tag>电影</tag>
        <tag>民主</tag>
        <tag>韩国</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[文化生产]]></title>
    <url>%2F2014%2F08%2F21%2Fdaynote_20140821%2F</url>
    <content type="text"><![CDATA[今天继续看《韩国电影——历史、反抗与民主的想象》，忍不住想记录下，看似抄书，心中却也有些感慨。 这本书试图从“文化生产”的视野对韩国地那英情况进行分析。其实这本书我看到现在感觉像是在读一篇学术论文。前面讲哲学基础和理论架构，提到本书所使用的方法论和其理论基础，并与其他研究手法对比分析，而后便按时间将韩国电影的发展史分成6个主要的时期作一一研究—— 早年的日本殖民统治时期 解放时期 朝鲜战争期间及1950年代初期 1950年代末至1960年代初 1960年代至1970年代然后分析了一个具体的案例。此外，又做了对韩国电影中现代性的研究以及以好莱坞为代表的外国电影与本国电影的关系和发展，最后是对以后韩国电影的发展的评测。 令我感动的是作者不仅介绍了自己的研究方法，还提该方法的一些局限性—— 这种文化研究的方法往往更注意对文本的解读，而非对制度架构影响的分析。当然优势也有提到——文化生产视野的最大价值在于它重视媒介复合集合机构汇总的运作过程，意识形态借此以文化生产为媒介而传达出来。 综合说来， 本书并不企图将韩国电影确定为一个统一的整体，而是试图将民族传统、历史架构与文化形式结合起来探讨。此外，电影在此并不仅仅被视为类型理论空间的文本，而是作为承载并架构文化转型的社会、政治与艺术表现得话语而探究。本书还将尝试从商业与非商业纸片策略以及韩国民主化视野的角度分析一些优秀影片的共同点。最后，由于所有这些因素都涉及复杂的结构过程，本书各章将重点探讨电影化建构的韩国想想中的意识形态之重要性与意义。]]></content>
      <categories>
        <category>书籍</category>
      </categories>
      <tags>
        <tag>电影</tag>
        <tag>民主</tag>
        <tag>韩国</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[熔炉]]></title>
    <url>%2F2014%2F08%2F20%2Fdaynote_20140820%2F</url>
    <content type="text"><![CDATA[今天下午，由于心情比较轻松的，就看了一篇比较沉重的韩国电影《熔炉》，讲述的是几个聋哑学校的学生遭遇校务人员及老师的虐待及性侵的真实事件的再现。 在电影中，受到暴力对待的聋哑学生大都来自残缺不全的家庭，要么是父母双亡，要么是父母同样残障等等。终于出现了一个有正义感老师讲此时捅出来，最终曝光在电视台，开始了对三位被告人的艰难起诉。这个过程之痛苦不言而喻—— 首先，受害者处于人的自我保护意识会将痛苦深藏，让他们重新回忆便是对他们内心能否面对痛苦经历的极大考验，然而还要一遍遍地在公众场合重复受害的过程，更要命的是在法庭上还会受到被告律师的质疑。因此我非常佩服电影中的女学生金妍斗的勇敢机智的表现。 然而，由于涉案校方利用和解、贿赂检察官、法官以及所谓的“前官待遇”最后并未受到实质性的惩罚。这样的结局未免让人来沉重压抑之余更加感到无奈甚至绝望乃至愤怒。 电影之外看完电影之后了解到这部电影改编自孔枝泳的小说，并且是由刚刚退伍的孔刘（片中饰演美术老师）促成了这部电影的诞生。更重要的是，正如《辩护人》，电影上映之后，韩国民众发出了积极浩大的呼声，并直接促成了当年案件的重新审理及判决以及《熔炉法》的修订。 这是我看过的艺术改变现实的第二部韩国电影，更是让我震撼不已，同时让我对这种现象充满了好奇和疑问——为什么会有这样的电影？为什么这样的电影会引起韩国民众的关注？为什么电影可以影响现实中的事件？希望最近在读的两本书能够给我一些帮助。]]></content>
      <categories>
        <category>电影</category>
      </categories>
      <tags>
        <tag>电影</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[《韩国电影——历史、反抗与民主的想象》第一章小结]]></title>
    <url>%2F2014%2F08%2F19%2Fdaynote_20140819%2F</url>
    <content type="text"><![CDATA[今天看了《韩国电影——历史、反抗与民主的想象》的第一章，说的是韩国电影的哲学基础，介绍的东西有点多，为了怕遗忘，同时也是为了再次消化，因此做一点小结。 这里给出了“我们”经常以国家层面区分其他国家时形成的缘由——一个拥有共同历史经历的民族，并且强调“民族”作为一个文化单位而发挥的作用，另外欧内斯特·勒南对民族作了阐述—— 一个民族是一个灵魂，是一种精神原则。两个东西，实际上是一个东西，构成了这种灵魂或精神原则。一个在过去，另一个则在现在。一个是共同拥有丰富的记忆遗产；另一个则是现今的一致性，渴望生活在一起，希望永远地保存以统一的方式接受的遗产的价值。 这一点对于解释韩国电影可能确实有帮助，因为韩国有99%是高丽人，可以说是一个单一民族的国家。 此外提一种叫做“众声喧哗”的理论，作为分析诸如电影这种文化形式的复杂话语关系提供理论框架。这个理论大致可理解为不同声音的交错、对话关系。该理论的发明人认为 语言是一个处于不同方言、阶级和少数民族之中的分裂化、阶层化和冲突性的区域，每一个对象都有自己的话语，体现了一系列自己独有的思维、规则与矛盾。 文中提到大众文化在形成记忆过程中所起的作用 对米歇尔·福柯而言，大众记忆之存在于话语的王国，它不能以抽象规范的方式存在，存在于与意识形态相关事物之中，而这种“意识形态致力于使人们形成对过去和值得铭记的个人重要经历形式的一致性观点”。 还提到韩国电影历史中的反抗电影（值得是表现韩国人民主运动中反抗精神的影片）作为大众记忆的保卫者，富有诗意地详细记载了恐怖的过去，成为了韩国人民生存与斗争的历史见证。 此外，我想说的是，看今天步入现代化且越来越在国际上扮演重要角色的韩国，回顾其100年来的历史，让人感觉是并不容易的。从刚开始的日本殖民统治到朝鲜的分裂战争以及战后严重依赖美国且内政受美国干涉再到后来的慢慢走向民主政治，每一步都历经多少血与泪。]]></content>
      <categories>
        <category>书籍</category>
      </categories>
      <tags>
        <tag>电影</tag>
        <tag>民主</tag>
        <tag>韩国</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[医疗，免费就一定好吗]]></title>
    <url>%2F2014%2F08%2F18%2Fdaynote_20140818%2F</url>
    <content type="text"><![CDATA[以前一直很羡慕欧洲的免费医疗的政策，也不禁常常痛快地骂政府怎么越来越有钱了却连生个病住个院的问题都不能很好解决呢？ 今天看了刘瑜的《病了你得管》才知道现在欧洲的毅力哦啊并没有那么完美—— 在英国据一个叫做“拥护改革的护士”组织统计，有近1百万的英国人正在排队等待医疗服务。更何况，所谓的“免费”医疗的钱其实也还是来自税收，“羊毛出在羊身上”嘛。随着人口的老龄化，医疗支出占国家财政支出将会越来越高。在美国——美国政府是美国医疗服务最大的买单者，资助穷人和老人的Medicare和Medicard覆盖了美国27%的人口，占据了美国总医疗支出的44%左右（保险公司付36%，个人付15%）。但是，从人口比例而言，美国大部分人口的医疗费用是通过非政府系统支出的。一般来说，是个人及其雇主（一般雇主付大头）从保险公司购买医保，生病了则由保险公司向医生交医疗费。 这带来两方面的问题，市场化的保险公司处于追逐利润的目的，必定使得整个社会的总医疗成本上升；另外一方面，由于医保的存在加上医生为了避免可能的医疗事故带来高昂的费用，经常是小题大做，导致“过度医疗”，又抬高了医疗的费用。 另外，刘瑜总结的好——在一个政治廉洁的国家，让政府来管理医疗资源海可能让大家公平“排队等候”，而在一个政府腐败的国家，全民免费医疗的结果很可能是有权有势的者“插队”或者资源在黑幕之后的更不公平分配，这种情况下的全民免费医疗，很可能就既低效又不公平了。 了解医疗问题背后的复杂性，可能更加让我关心问题的本质而非一味的情感发泄，这也是对个人发展不利的习惯。]]></content>
      <categories>
        <category>杂说</category>
      </categories>
      <tags>
        <tag>政府</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[只听一首歌]]></title>
    <url>%2F2014%2F08%2F17%2Fdaynote_20140817%2F</url>
    <content type="text"><![CDATA[当我静下来，坐在窗前，用全部身心来感受自然的美好，才突然发现我随机播放的电脑上的歌曲，每一首都是那么好听，更重要的是此时随着每首歌的旋律和歌词和我对自己相关的回忆结合起来。这一结合看似自然，其实效果惊人——女子十二乐坊的《沧海一声笑》让我浮现的画面有徐克版《笑傲江湖》中刘正风与曲洋琴箫合奏与江面上的情景，同时背景因音乐是由黄霑、徐克和罗大佑合唱的主题曲，让人感觉欢畅淋漓，又同时想到此前自己写的同样豪气自然的一段话，又为但是自己的心中一动—— 日常生活淡然处之，正是”他强任他强，清风拂山岗，他横由他横，明月照大江“。但是一总平淡未免有些无聊，也需些激情。故而在生活中我们也需要有开怀畅谈、疯狂作乐之时，才不失为生活之情趣所在。这样，平淡之时尽享清静之乐，热闹之际自有痛快人生，岂不妙极？哈哈哈哈…… 此时，不知不觉已然沉浸其中，产生更多的联想，可是突然，歌声断了，原来这首歌已经放完了。 接下来是汪峰的《北京，北京》，刚刚还处在豪迈情怀释放中的我，不得已又回到现实，而现实又是那么真实。这首歌与我此时所处的大都市的状态有不少是有重叠的，因而对这首歌多了一份情感，因为它表达了心中的一些感受同时还是那么动人，怎么不让人动怀呢？ 可就在我还在感慨人生、社会这些宏达的叙事命题之时，却又听到老狼、叶蓓的《青春无悔》，我又不得不自然而然从现实中脱身投入到对大学时光的追忆中。转眼间大学毕业已经一年，可是每次想起却依然如同眼前。 但不久，又切到了另一首歌，我不得不又…… 就这样，我感觉好累但同时又很刺激，但是最后选了首不熟的纯音乐单曲循环作为背景音乐，来开始我的写字之旅……]]></content>
      <categories>
        <category>随笔</category>
      </categories>
      <tags>
        <tag>歌曲</tag>
        <tag>回忆</tag>
        <tag>青春</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[夏夜]]></title>
    <url>%2F2014%2F08%2F16%2Fdaynote_20140816%2F</url>
    <content type="text"><![CDATA[今年的夏天比以往的都要凉快的多，此时外面正下着小雨，这雨已经下了一天了，却不见有停的迹象。 突然，我听见外面又想起了昆虫的叫声，还有青蛙。哦，原来雨已经停了。 静静夏夜，虽然工作、生活上有些许不快，可是在这雨后的环境中，即使不出门，望着窗外，也能感受那份自然的宁静、幽然。 其实，大自然不会说话，都是人为地赋予了她以各种情感来作为人的一种内在的表达，这样既显得不那么矫情，相反更加的真诚自然。另外，你在赋予自然以情感的同时大自然会回报你她最爱最真实的情感流露。这样的近距离与大自然的沟通就是一场心灵之旅，让你的内心得到一份洗礼和滋润。 就这样，夏夜，还是静静地，只有你和我对视无语，却彼此心意相通，终究相拥而眠……]]></content>
      <categories>
        <category>随笔</category>
      </categories>
      <tags>
        <tag>夜</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[杨洁与西游记]]></title>
    <url>%2F2014%2F08%2F15%2Fdaynote_20140815%2F</url>
    <content type="text"><![CDATA[看完这本书的感受就是这个女强人的人生经历了不少磨难，可依旧像《西游记》中的师徒坚持不懈前往西天取经。 这本书中最让我感到诧异但随之一想边有理解的是这样一段话—— 我曾经十年不愿看《西游记》，因为它会引起我太多的失落和伤感，以及太多的痛苦和愤怒。 整本书，西游记相关的内容有两个章节，分别是“我的夙愿——《西游记》”和“再续《西游记》”。记得小时候对《西游记》的印象除了好看外，总觉得很长，后来才知道只有25集，可是这25集从剧组成立到全集上映花了6年的时间，可是说整个剧组也是完成了一次取经，有意思的是这部戏的主演们—— 三个徒弟，不论是动不动就要分行李的猪八戒，还是大闹天宫不服管束的孙悟空，都能够踏踏实实、有始有终地完成自己的角色，取得了成功；而最应该最坚决的取经人——唐僧却恰恰没有能够坚持到底。他们有的更重视电影，有的更重视文凭，都离开了取经路，半途而废！只有这在楼梯间偶然相遇的最后一位，却把取经任务进行到底，和这个电视剧一起成功！也许，这就是缘分吧！ 这部戏在当时作为不多见的神话剧拍摄起来要达到较好荧屏效果自然是困难重重。最让我难以置信的是—— 所有的镜头都是由一个摄像师、一台摄像机、一个个镜头拍下来的！这难怪会引起“中日第二届电视艺术交流会”上日本同行们的惊叹和不敢相信。 要说这部戏在技术上剧组为此穷尽了心思，用尽了一切能用的资源，真是叫克服了重重困境，没有人会否认。可是这些对于一心筹办该剧的杨洁导演来说还好，只不过处理上麻烦而已。最难受的在她看来是——《西游记》的热播与我当时的心态形成极大的反差，当我回过头来注意“出国演出组”时，发现情况有了极大的变化。他们不再安心于排练节目，而是基于出去“走穴”。社会上对于师徒四人，尤其是孙悟空的关注达到了狂热的程度。他们再也坐不住了，要想拉住他们，那就是个傻瓜！我曾经是哪个傻瓜，因而成了他们急于摆脱的人。 书中没有详细说尽其中微妙的变故的相关细节，只是——我不明白，《西游记》在社会上引起巨大的反响，我这个导演，没有功劳也有点苦劳吧？领导不但没有对我道过一句“辛苦”，我反倒成了个罪人？王台长急急忙忙地“解除”了我对剧组的领导权，我被“解除”了，但剧组的许多工作还没收尾，除了修改镜头、国际声版外，清点回收物资的事根本无人管理，一大批精彩剧照连同底片一起流失了，一大批道具、景片都运走了……这所谓的“解散”到底是为了什么？ 以至于她在看到昔日驰骋在草原却因偶然机会为《西游记》献出毕生精力的“白龙马”在电视剧拍完后 因衰老而被排挤，被疏忽，被看成了累赘，在无人照料、无人理睬的角落里默默地死去。而发出了深深的感慨——其实，人何尝不是如此，我还不是和这匹老马一样吗？到了没有价值的时候，谁还会关心你的命运和生死呢？人尚且如此，何谈一匹羸弱不堪、不能讲话的老马呢？ 当然，这还没有完——1994年，《西游记》里三个徒弟的扮演者——马德华、章金莱、闫怀礼先后几次到我家里来，一方面为几年前发生的那场闹剧向我道歉，请求原谅；一方面希望我能把那几集被甩下的故事拍出来。他们的歉意，表现得非常诚恳，有人还痛哭流涕。我在感动之余，忘记了那些不愉快的会议，重新拾起了当初的梦想。 于是杨洁向当时的台长杨伟光打了个报告—— 王母娘娘已经驾鹤西去，金池长老也已魂归故里，若再不拍，《西游记》的遗憾将永远存留下去…… 这次的拍摄由于各方面的条件都比17年前要充分、先进的多了，但还是回了两年才拍完了16集，也算是个完结吧。 对此，杨洁写道—— 我很遗憾，加入当初资金足够，这余下的故事能够一起拍完，那它就会成为一个完整的作品，就不会有相隔十几年的不同反应。我也不遗憾,不管怎样，我的梦总算圆。遗憾总是会有的，正如孙悟空说的：“天地本不全！”又何况一部电视剧《西游记》呢？]]></content>
      <categories>
        <category>杂说</category>
      </categories>
      <tags>
        <tag>西游记</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[护犊子的故乡情结]]></title>
    <url>%2F2014%2F08%2F14%2Fdaynote_20140814%2F</url>
    <content type="text"><![CDATA[以前，在读初高中时，课本里的文章经常回出现“故乡”二字，可我却同时很纳闷，为什么自己反而对所处的家乡有很多不满？为什么我没有像作者那般对故乡的情感？故乡到底意味着啥？ 后来上了大学，离开了熟悉的故乡。出于自身存在感的证明，或是归属感的寻找，每当在网上看见关于家乡、母校的文章便要分享一番，在得到期待的大学同学的一顿好奇、赞赏之外心里便无比满足，也更加对故乡有了一种心理上的依恋。可是后来当我发现偶尔再介绍我的故乡之时他们仍然是一副几乎完全不知情的状态之时，我才知道那种依恋原来是自恋。此外，同很多人一样，对故乡有一种护犊子的心态，只准自己打他骂他，但别人就不行。这是由于你在心理上将故乡与你自己划上了等号，说你故乡的不好就是说你的不好，而人大多数是很难接受批评的。但是如果批评得有理有据，你就不好反驳，因为当别人针对你的正确批评是你个人知识，你如果还出来反驳便容易让自己步入不虚心接受他人意见，死不悔改、固执己见的道德困境，然而我们对这一困境可能没有如此清醒认识，但是出于社会上的道德审判带给人们的个人警戒让我们不知不觉地“悬崖勒马”。可是一旦你觉得别人批评你的内容并不是你自身，而只是与你相关的某一事物。这时你站出来为之袒护，不仅避免了自我的道德压力，还可以打着义正词严的气质——我热爱我的故乡，我不允许任何人说它的坏话，即使它真的有多糟糕。这样一来你不仅逆转了自己的道德困境，还反而甚至占据了道德的制高点，俯视批评你故乡的人。 这时，你自信地犹如一把尚方宝剑在手，对周围的人群说道，“谁敢以身试法，本钦差绝不姑息！”多么浩然正气啊！]]></content>
      <categories>
        <category>杂说</category>
      </categories>
      <tags>
        <tag>故乡</tag>
        <tag>道德</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[夜太美]]></title>
    <url>%2F2014%2F08%2F13%2Fdaynote_20140813%2F</url>
    <content type="text"><![CDATA[夜，当你屏住呼吸盯着她时 她也憋了一口气在看着你 那片刻，她是多么动人 向你展示那迷人的微笑 夜，当你闭上眼睛仔细倾听时 她在低声地吟唱着 那夏日夜晚的妙曲 让你疲乏的心得以片刻的放松 夜，太美！]]></content>
      <categories>
        <category>随笔</category>
      </categories>
      <tags>
        <tag>夜</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[夜与我]]></title>
    <url>%2F2014%2F08%2F12%2Fdaynote_20140812%2F</url>
    <content type="text"><![CDATA[黑夜，每当太阳落下 他方才出来 同时带着极大的野心 妄想着吞噬者一切 可是只要有哪怕一丝的光亮 在人间发出 你便消失得无影无踪 但又只要这光亮微微减弱 他便趁势围上来 那般的阴魂不散 不过，只要一直有光亮 哪怕再微小 他都对你无可奈何]]></content>
      <categories>
        <category>随笔</category>
      </categories>
      <tags>
        <tag>夜</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[放弃一些兴趣]]></title>
    <url>%2F2014%2F08%2F11%2Fdaynote_20140811%2F</url>
    <content type="text"><![CDATA[我不是一个社会学家，却对好多社会学现象感兴趣且评头论足；我不是一个心理学家，却喜欢学习心理学的课程并试图解释自己和他人的内心世界；我不是一个歌唱家，却时常在家里吼上一嗓子还有时被隔壁制止；我不是一个音乐家，却现在拥有笛子、口琴、吉他以及电子琴；我不是一个作家，却一直在坚持写东西。 也许，可能，我只是一个梦想家，梦想着在任何一方面成为一个大家。可是同时，我对这些确实又是感兴趣的。拥有这么多兴趣，首先感到高兴与自傲，但又伴随着乏力与纠结。因为当你还在为生活有点紧张的时候，你过多的兴趣点会分散你的注意力和精力。 因此，当你必须选择一些兴趣对他们说拜拜之时便心中充满无限惆怅和感慨，继而容易抱怨残酷的现实生活。但是那些保留的兴趣，你会倍加珍惜，同时他们带给你的快乐也要高于以往，不得不说命运有时还是公平的，不过命运很多时候是掌握在自己手中的，这就得看你如何拿捏了。]]></content>
      <categories>
        <category>随笔</category>
      </categories>
      <tags>
        <tag>放弃</tag>
        <tag>兴趣</tag>
        <tag>梦想</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[仪式]]></title>
    <url>%2F2014%2F08%2F10%2Fdaynote_20140810%2F</url>
    <content type="text"><![CDATA[说到“仪式”这个词，可能很多人会感到不屑，貌似在他们眼里就等同于“形式”，也常见于“形式大于内容”，“有形式，无内容”。这些说法常见于以下场景，下级官员接见上级官员，搞演出，搞庆典，而且往往动静很大。我们常说的“形式大于内容”大多指的是这一类不考虑实际情况内容空洞甚至完全就没有意义的行为活动。 网络上铺天盖地的这样性质的事件实在是屡见不鲜，因此我也开始排斥任何带有某种形式化的东西。甚至将仪式也纳入其中一并治罪，这也是我们常犯的思维错误“恨屋及乌”。后来又一次看一个电视节目，谈到今天音乐出版由于电子网络的发达而使得人们越来越方便且廉价地听到几乎任何音乐的同时，觉得音乐没有以前那么特别有感觉。这一方面原因，一件事物获取的难度降低了，也就从某方面贬低了其价值。另一方面，在早些时候，听音乐还是用留声机的时候，听音乐你要先安放上黑胶唱片，再小心地放上唱针，唱片开始转动的同时音乐慢慢响起。久而久之，你会有种仪式感，而且由于那时这还是少数人才能够做到的，你会更加自发地从内心产生无比激动与敬仰。 仔细想想，当你将一件事物仪式化的同时，其实你的内心经历了复杂的变化——首先你是爱上这件事物了，同时由于它带给你内心的某种意义上的满足或慰藉，使你从内心产生感激，而这种感激还是那种有距离感的、仰视的感激，而且你愿意把它再内心供奉起来视为神物，以至于乐于在现实世界中享受它的同时将之升华为一套仪式，在表达内心仰视的感激的时候赋予了仪式的内容，使其具有了意义，而这仪式也反过来赋予了参加仪式的人浓厚的意义。我觉得，这就是人在于自己内心交流的外在表达，重要的是这外在表达来自于心又同时给了心以存在的理由，这是一种人的自我升华。 因此，现在的我每当接触到有仪式感的东西时，首先产生的是敬畏之心，而后再去追寻背后是否有某种深厚的故事渊源，而非不假思索的一味排斥了。]]></content>
      <categories>
        <category>杂说</category>
      </categories>
      <tags>
        <tag>其他</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[该写啥呢]]></title>
    <url>%2F2014%2F08%2F09%2Fdaynote_20140809%2F</url>
    <content type="text"><![CDATA[又到写东西的时间，可是还在纠结于写啥呢。随之而来的便是内心的不断发问“这样做有意义吗”“你这是想成为作家的节奏吗”“哼，这怎么可能”。 可是等到本子摊开，拿起笔，心中就充满了无限的平静。我喜欢听笔尖划过纸面的声音，我想我是爱上这感觉了，而且这感觉我一天也离不开了。 从小善于理性思维的我，一直热爱数学，而语文很差，可是如今却挚爱读书与写字，想想都很搞笑。比较强大的理性思维带给我的好处在于一番的情绪波动、心里挣扎之后总会用逻辑分析利害、辨别对错。 想想，每天都做重复一件事的益处在于你会培养自己坚持不懈的性格和给自己一个活下去的起码理由。此外，如果这件事能够提升自我的能力，哪怕一丁点，日子久了就会有回报，甚至很多时候灵感就来自于重复的事情。因为你对此太熟悉了，加上你不断突破的愿想，最终必然有破茧成蝶的一刻，而给你带来的最大的回报想必是内心对于长期的坚持的极大满足感。 不过这不是最终目的，因为人的欲望无止境，所以说根本就没有所谓的最终目的。一番欣喜之后，你会继续回到平常的生活状态。因此，这件事应该是陪伴你一生的，并且融入到你身体里，成为你生命中不可或缺的一点一滴。随后你甚至会越来越感激它，因为有它在，你的生活多了一份坚持。]]></content>
      <categories>
        <category>随笔</category>
      </categories>
      <tags>
        <tag>感激</tag>
        <tag>坚持</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[累]]></title>
    <url>%2F2014%2F08%2F08%2Fdaynote_20140808%2F</url>
    <content type="text"><![CDATA[人们常说累，其实我觉得大致可以分成两种——一种是长时间的得不到放松，另一种是对几种事物的徘徊不定，坚持着又放弃，放弃后又拿起，拿起了又放下。第一种的累很好办，给自己腾出一个空闲的时间来发展业余爱好即可，而第二种累就比较难以处理了。这往往是现在大多数年轻人会碰到的，也常常概括为“心累了”。 究其根由，想到在一个人处于社会之时，有两种需求必须要面对，一种是生活下去且希望越来越好的物质生活，另一种是梦想的实现（我解释为人在不考虑生活压力下的内心对于某种状态的渴望）。有极少数人很幸运，能把这二者结合起来，但我们大多数人在不断满足第一种需求的同时越来越疏远第二需求，可是没关系，他们可能会发现自己新的需求在第一种需求达到的同时也能达到，这种人也还算幸运。否则好多人在事业有成的40来岁就产生了常说的“中年危机”，也有人一直朝第二需求的不断追求，但同时第一需求却又不能很好达到，这时候最容易产生的想法就是徘徊于坚持与放弃之间，但是这必须是需要解决的，没有标准答案，只有你对自己的那个答案的那份诠释才是最重要的。 我没有完美的解决方案，但我有我的答案，以第一种需求为主，不停地提醒自己的另一种需求，同时尝试融合，否则就发展成为业余兴趣爱好，也说不定业余的哪天就成了专业。即使不成，内心依然很快乐，这便足矣！]]></content>
      <categories>
        <category>随笔</category>
      </categories>
      <tags>
        <tag>放弃</tag>
        <tag>坚持</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[青春回忆]]></title>
    <url>%2F2014%2F08%2F07%2Fdaynote_20140807%2F</url>
    <content type="text"><![CDATA[对于青春，每个人都有不少美好的回忆，我们也倾向于把他们都留在心里，时不时地拿出来欣赏，对于身处压力大的社会来说也是一种很好的放松方式。 可是有时候感到很奇怪，为什么我们90后也在回忆青春？我们不是真处于青春年少吗？是周围的世界变得太快，感觉自己跟不上，有老了的感觉？这是大多数人对自己的解释。 其实仔细想想，应该是我们对于自我与个人的概念变得比上几代人都更加重视了。我们早已不是处于那个集体社会，而是处处要面对自己，然而这对于新一代从上一辈中几乎没有经验可循。这使得我们更容易迷失，而过去的岁月在今后的日子里我们可能比当初看的更加清楚，也才有可能为当初做了什么感到后悔或者没有做什么而觉得惋惜。 因此我觉得这是一个进步，虽然我们经常说自己老了，看似老成，其实心里叫着劲呢，只不过在口头上我们还是需要一种退步来舒缓紧张的内心。 比如我就有个最深的体会——以前回忆的时候，想着想着就哭了，后来想着想着就笑了，现在想着就想着，任由自己哭或笑……]]></content>
      <categories>
        <category>随笔</category>
      </categories>
      <tags>
        <tag>回忆</tag>
        <tag>青春</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[从思考到书写]]></title>
    <url>%2F2014%2F08%2F06%2Fdaynote_20140806%2F</url>
    <content type="text"><![CDATA[你可能整天有太多太多的想法，有时候甚至会为它们而叫绝。如果你是这样的人，那么你就可能和我有某种共同点。 自从大学以来，我往往会整天想很多，还有好多是在熄灯后躺在床上时产生一些奇妙的想法。而我的一贯做法是任其发挥，不去限制，偶尔也会记录一些点子，但是一直缺少的是深度的分析与考量，更极少把它们写成长篇大论。这样的做法，开始可能还是感觉良好。反正还在上大学，不用直面人生，即使晚上想的很晚甚至激动地睡不着也无所谓，大不了就是第二天的课不上了睡到中午便是。 可是这到了毕业之后真正面临社会，每天都要按时上下班就不一样了。上班时间不用想，肯定是以工作为主。下班之后往往感受就一个字“累”，哪有力气去思考，有的顶多也是胡思乱想一通。就这样，在刚工作的前几个月，任各种想法畅游脑海的痛快的感觉找不到了，我也试图营造恢复以前的那样的氛围，可是终究是徒劳。 后来，有段时间的工作轻松，貌似又多了好些想法，这让我开始重新审视工作给我带来的一些微妙的改变。 工作是个再现实不过的玩意了，没有它你就没地住没饭吃。因此当你再次拥有那么多的想法的时候，你会不禁要问自己“这可行吗”。面对自己内心不断的拷问，我便丢失了那份自以为有实际上却没有的自信，因此开始犹如丧尸般游荡于公司与租房之间。 可是后来突然有一天我遇见了苏格拉底，他让我改变了这一切。（ps: 怎么可能，你以为是在演电影么）其实我也不太能弄清自己的一些转变了（不过我后来总结应该是一直保持阅读的缘故，这个习惯算是我大学最成功的改变了，从几乎不读书到爱上读书再内化为一种不可或缺的生活的一部分，整个过程简直是潜移默化的，而我也是最近才发现的），但是有些小事物还是对我有不少的触动。例如我偶然发现了《晨间日记的奇迹》这本书（很精短，只能算是个小册子），我反复读了好几遍，也让我开始记日记。此外，我以前想到一些观点，就喜欢以说说的形式发在QQ空间上。有好多次都是挺长的，因为我发现当我开始写了就根本停不下来，后来我也好后悔，为什么不写成长文呢，再扩展一点？后来又偶然看到韩寒的一篇对于“我为什么不开微博（可是现在还是开了，估计因为这实在是作为宣传工作非常好使的媒介了）”的解释，他大概提到的是微博打碎了他的时间，难以集中时间来写长文，而且短短的一两百字数的限制使得平常的好的灵感浪费在上面了，不能做更深入的思考。我觉得就很有道理，就当有了一些啥灵光一现的时候便记录下来，留着等哪天有集中的时间写长文时拿来就可以用了，而且这样往往是精悍短小却物超所值。 就是这样的处理方式，再书写东西的时候，你会重新梳理你之前的种种想法，有些要重构，有些要修改，而有些则要抛弃，最终留下的，才是你内心的你真正的想法。慢慢地，我也在生活中、工作上延续这种思路，抛弃一些累赘的想法，更多加入可实现的考量，多了一份提炼，多了一份约束，人就进入了另一种状态（这种状态我现在还说不清，哪天能说清再说吧）。]]></content>
      <categories>
        <category>随笔</category>
      </categories>
      <tags>
        <tag>电影</tag>
        <tag>日记</tag>
        <tag>阅读</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[民主的细节]]></title>
    <url>%2F2014%2F08%2F05%2Fdaynote_20140805%2F</url>
    <content type="text"><![CDATA[“民主”，当我第一次听到这个词就不禁要赞一个。后来开始了解到一点欧美的民主制度，内心就为之振奋——中国也就应该这样嘛！而对以前的课本里所体现的说法“万恶虚伪的资本主义”的说法大大不屑，也一直深信民主就是最好的制度。 可是后来看到“民主不是最好的制度，而是最不坏的制度”开始怀疑，慢慢地了解到一个国家是否要用民主制度得看它有无滋生民主的土壤，而非仅仅是一个口号那么简单。 回想一下，我对民主的认识多来自一些宏大的叙事、是非判断和情绪感慨，欠缺的是对民主的这一制度在具体实施过程中的一些事实细节。然而，很幸运，我发现了刘瑜女士《民主的细节》，这本书试图用“讲故事”的方式来描述美国的民主。 目前这本书还没看完，不过我非常喜欢开篇结尾处她对托克维尔“民主把一个人永远地抛回他自己，最终将他完全禁锢在内心的孤独里”的解读，也将此作为结尾—— 民主通过将公共生活的重负压在每一个个体的肩膀上，挑战每一个人的心灵和头脑。如果说劣质的民主，正如专制是给个人提供一个隐身于群体的机会，那么好的民主制度则鼓励每个人成为他自己，依赖于每个人成为他自己。“把一个人永远地抛回他自己”，这是一件好事还是一件坏事呢？勇敢的人和怯懦的人，勇敢的民族和怯懦的民族，也许有不同的回答。]]></content>
      <categories>
        <category>杂说</category>
      </categories>
      <tags>
        <tag>民主</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[为我写诗]]></title>
    <url>%2F2014%2F08%2F04%2Fdaynote_20140804%2F</url>
    <content type="text"><![CDATA[夜，你是多么的无聊 静静的，一动也不动 待到黎明到来时 你便径自离去 夜，你又是多么孤独 人们从你身边走过，却没发现你 而你一直在那里 赏析：该诗将黑夜拟人化，其实表达了作者内心的无聊与孤独。 ——谨以此文来纪念高中时诗词鉴赏得分一直不高的我！]]></content>
      <categories>
        <category>随笔</category>
      </categories>
      <tags>
        <tag>夜</tag>
        <tag>纪念</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[楚门的世界]]></title>
    <url>%2F2014%2F08%2F03%2Fdaynote_20140803%2F</url>
    <content type="text"><![CDATA[看完《楚门的世界》，我感受强烈的倒不是媒体对于人权的侵犯，而是楚门个人居然完成了从平静地生活在逼近现实的影棚里到怀疑周围的事物乃至到最后克服自我、决定逃离此地实践的一系列转变。 作为一个普通人，能够发现到周围的虚假，顶多说明他的智力正常，通过与一些理性的逻辑思维便很容易识破这个。难的是他居然能够说服自己怀疑自己生活30年的世界的真实性，这是需要一番勇气的。其实，这时候弄不好你有可能会感觉自己患上了精神分裂症，由此想到《美丽心灵》中的一个医生的一段话—— 精神分裂症最大的痛苦是分不清是真还是假，想想看，你突然发现，那些人、事，以及让你最珍惜的时刻并没有消失，也没有死去，但是他们都不是真的，那是多么的可怕。另外，他心理从小由于被导演安排父亲就是被海水带走的而产生了阴影，然而他为了追求他个人的自由竟然能直面自己的阴影，并用内心对于自由的渴望来照亮它。这才是真正难能可贵的，也是我最佩服的地方。 我不禁在想，他在走出影棚后会如何生活。突然又联想到香港电影演员张家辉曾提到自己在演《红河》时，每天感觉就是那个人物就是他自己，心情一度抑郁。 其实，人最恐怖的就是扮演你自己，因为你要直面真正的自我；而人最幸福的也是扮演你自己，因为你就是因为你而存在，你就代表你自己。]]></content>
      <categories>
        <category>电影</category>
      </categories>
      <tags>
        <tag>电影</tag>
        <tag>自我</tag>
        <tag>存在</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[哭]]></title>
    <url>%2F2014%2F08%2F02%2Fdaynote_20140802%2F</url>
    <content type="text"><![CDATA[此时正值炎炎夏日的夜晚时分，不开空调，虽有些闷热，但对于静坐于桌前任意挥洒文字的我来说是恰到好处。 特别是偶尔的清风徐来，全身毛孔都为之颤动，很是清爽。窗外，小区旁边还有几排民房看，尚能听见几个孩子玩闹嬉戏的动静，但不久就没有了，估计是被大人们叫回了家。屋外恢复了安静，多么美丽祥和的夜啊！突然，一阵小孩子的哭声响起，一直哭了十多分钟。这让我不禁联想起儿时邻居家的一个小女孩，估摸着当时七八岁左右，那哭功是闻名相邻的。不哭则已，一哭起来就根本停不下来。其实这一方面要归功于她的父母，她每次一哭，苦到最后父母总能满足一点她的一些要求。但是我从小没有这么好的待遇，有时受了委屈，被父母打了，不允许辩解也不许哭，一口气憋得跟气球似的，感觉自己随时会爆掉。 还记得初中一次语文老师检查作业，发现我没做让我站起来。自尊心很强的我羞愧难当甚至忍不住快要哭出来。结果老师说了一句“男儿有泪不轻弹”，我却在心里嘀咕“为什么男儿就不能哭”，只不过当时我真的没敢哭出来。 后来听刘德华《男人哭吧哭吧不是罪》彻底得到心理对于哭的解脱，以至于现在看到一些文艺作品，一旦打动内心就有想哭的冲动，偶尔几次还耗了不少的餐巾纸。 那一瞬间，受到作品中人物情节的感染，一旦产生强烈的代入感或是共鸣，你会欲罢不能，会很想哭，更奇怪的是，哭完之后，感觉这是一种幸福！]]></content>
      <categories>
        <category>随笔</category>
      </categories>
      <tags>
        <tag>哭</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[爱上电影与书]]></title>
    <url>%2F2014%2F08%2F01%2Fdaynote_20140801%2F</url>
    <content type="text"><![CDATA[幸福的娃当你刚开始爱上电影和书的时候，并且能够腾出时间花在上面，那时候是最幸福的时刻，同时我认为那是最奢侈的。 爱上电影以我个人经历来说，我真正对电影产生浓厚兴趣是从美国动作片开始的。当我看完一部，发现是系列片，还有同主演、类似剧情的电影，犹如电视剧般过瘾。然而随便网上一搜罗，就能发现更多类似的动作系列片。关键是你都没有看过，但同时又有那么多人的推荐以保证并非烂片，更可贵的是我还在上大学，有大把的时间。这些元素堆在一起，怎能不让人感到激动且幸福呢！可是慢慢地，我发现好的电影貌似不多了，需要费一点心思才可能发现它们。但同时，我对别的类型电影也开始产生了兴趣，如恐怖片、战争片，然后是惊悚片、喜剧片，最后慢慢发展到了文艺片，连我自己都震惊了。每次的一个转变，都是一阵激动与小小的幸福感。可随着电影看的越来越多、越来越广，那种经典同时又好看的电影真是越来越少了。所以后来每次拿到一部好电影都是深入其中，慢慢体会。好在我最近又发现了一种看到好电影的途径，很简单，就是找最近30年奥斯卡获奖的电影，这应该够我吃一壶的了。 不同然而看书有点不同，首先书的信息量很大，阅读时间远大于电影，而且电影可以众人一起分享，而书是要独自品味的，还需要一点耐性，更多还是兴趣。 爱上书还是拿我个人经历来说事。我最先感兴趣的书的类型是杂文。因此我刚开始买的书绝大部分是杂文类的，其实现在还是，因为我从真正爱上读书到现在不过将近2年。由于刚开始真正的阅读，几乎每一本书都有好多让我醍醐灌顶、恍然大悟、七窍生烟，一种来得比电影更慢但是兴奋感与幸福感都持续更长的体验。后来也对一些社会学之类的书感兴趣，陆续也买了不少。可是看书真的是一个很慢的过程，而且要一本一本地看，幸好我从开始就采取了明智的做法，看完一本书再买下一本，这可以让我心思足够专注。 此时，我按照常规思维习惯必定要写一段带有总结性意义的话，可是这次确实不知怎么说。然而想想，我才看了这么一点书，还是继续努力吧。]]></content>
      <categories>
        <category>随笔</category>
      </categories>
      <tags>
        <tag>电影</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[每日一篇]]></title>
    <url>%2F2014%2F07%2F31%2Fdaynote_20140731%2F</url>
    <content type="text"><![CDATA[每天都写文章的感觉很复杂，写完很有成就感，写之前最怕的就是不知写什么主题。既希望写得很轻松，又希望让人(起码自己吧)读起来还是有那么一点意思的，着实不是一件容易的事情。 到目前为止，我坚持这《每日一篇》的书写，一大半是靠自己当初这个慎重思考的决定的约束，一小半才是有时候真的想记录点什么。好多时候的状态是这样的——写啥呢？翻翻以前自己写的，好像已经绞尽脑汁了都，没有可写的了。确实我的眼界、阅读各方面都有限，真是书到用时方恨少啊！这最大的好处就是让我有了更大的动力去阅读更多的书籍，而且是更加认真地阅读，而非仅仅走马观花，以数量来炫耀自己的阅读量的做法。 我在想，可能当一个长期的写作者真的需要每天定点定时地写点东西，以不变来对抗时间，最终融为一体，成为一种自然状态的行为，这是需要尝试的。]]></content>
      <categories>
        <category>随笔</category>
      </categories>
      <tags>
        <tag>坚持</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[你有唱歌到尽兴处被隔壁给敲门吗]]></title>
    <url>%2F2014%2F07%2F30%2Fdaynote_20140730%2F</url>
    <content type="text"><![CDATA[今天在租房里唱歌，到十分尽兴并怡然自得的情况下，就听到“咚咚”的敲门声，一下子兴致就降到了冰点。但是无奈，一番愤怒之后，冷静下来想想还是要考虑考虑隔壁人家的休息，毕竟都过了晚上11点了。 这又让我不经意间回想起大学的生活了（其实说来也就一年的时光嘛，但是毕竟是真的回不去了，曾经一度难以接受这个事实），那时候在寝室经常是音响开到最大，楼道里都能听见。然而那种肆无忌惮也就只有在理想的环境下才会发挥得淋漓尽致，又想起刚开始学笛子的经历了，记得刚开始甚至吹得不响，那是折磨人的声音，让人心痛。好在室友们经常不在，只有我一人，便可以无所顾忌了，反正其他寝室的人也没有什么意见。但是后来当他们知道是我弄出来的声音后，就问我是不是在吹箫（也不知到底是善意还是恶意哈）。 无论如何，那种自由的状态，真的很是怀念。可是有些东西就是如此，一去不复返了。当你真正地承认一件事情真正过去了，而且以后也不会再有，那么你会有一种新的态度——把过去放在心底当做珍藏，更加着眼珍惜眼下。可是说起来在内心里总有那么一丝悲凉，那份人人都有的逝去的美好会让我们保持对美的不停地追求。 有人说，人有两种痛，一种是永远也得不到，另一种失去了再也没有了。对第一种，我们将其作为一种未来的寄托，第二种我们当成永远的遗憾。可是这都是正常人的情感，不用刻意躲避，由心地体验这两张感受，到头想来便是一种幸福了。。。]]></content>
      <categories>
        <category>随笔</category>
      </categories>
      <tags>
        <tag>痛</tag>
        <tag>幸福</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[境因心而存在]]></title>
    <url>%2F2014%2F07%2F29%2Fdaynote_20140729%2F</url>
    <content type="text"><![CDATA[今天早上去上班，下了地铁，按照往常路线都会经过一个开放式的小公园。可就是这个几乎每天都会见到的小公园，今天看到了往常没有看到的景象——此时正是上午十点钟，太阳在这个季节照在皮肤上已经让人很不舒服了。但是一入公园，阳光便没有那么讨厌相反似乎为美丽的公园增色不少。这时忽然有一只蝴蝶闪现在我眼前，我的第一直觉是居然有东西在余光中飞扬（哈哈，原来是它），让我不解的是为什么自己之前从未注意到？难道它们是今天第一次出现在这里？还是我以前走得匆匆，根本没有注意到它们的存在？可是我转而一想，貌似有什么不对劲的地方。试想一下，如果我从未注意到它们，那么它们对于我而言，岂不是根本就不存在？是啊，生活中，好多时候，我们也许永远也不会知道此时此刻你又错过了什么。我们能做的也就是，发现他们的时候，紧紧抓住，好好珍惜吧。 此时我联想到到《深夜加油站遇见苏格拉底》这部电影中的一段对白—— Your mind is filling up. You are missing out on everything that is going on. 你的思想被填满了，你遗漏这正在发生的一切。There is nothing happening now. 现在什么也没发生。There is never “nothing going on.” 从来不可能“什么也没发生。”Take out your trash. The trash is anything that is keeping you from the only thing that matters. This moment. Here. Now. If you truly are where you are now, you will be amazed at what you can do. 抛弃杂念。那些杂念让你无法全神贯注。此时，此地。此刻。如果你的心真的活在当下，你会为自己的表现大吃一惊。]]></content>
      <categories>
        <category>随笔</category>
      </categories>
      <tags>
        <tag>电影</tag>
        <tag>存在</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[女儿情]]></title>
    <url>%2F2014%2F07%2F28%2Fdaynote_20140728%2F</url>
    <content type="text"><![CDATA[在韩寒的《后会无期》中，印象比较深的还是几首歌曲吧，其中就有一首来自《西游记》的插曲。当初感到纳闷，后来想想二者同样是一个从西方到东方的故事，关键是都表现了那份难以割舍的情感。 这让我又不禁回忆起《西游记》中的《趣经女儿国》一集了。 当《西游记》里女儿国国王盖上玉玺，抬起那双含泪的眼睛，凝视着唐僧走远时，一曲《相见时难别亦难》将剧情推向了高潮，女王与唐僧的依依不舍至真情怀，令观众都为她伤心、唏嘘不已，也成为观众脑海中至今难忘的一段缠绵悱恻。 我又找来20年后的西游记剧组艺术人生上的相聚的视频来看，其中徐少华（唐僧的扮演者之一）在台下坐。女儿国国王扮演者朱琳，在台上接受主持人朱军采访时的回答让我十分感动。 主持人问：“这部戏重播的话，你还看吗？”她说：“我其实，我的目光锁定就是御帝哥哥。”（台下掌声）主持人：“御帝哥哥？！”她竟然旁若无人地直视台下的徐少华，说：“我今天其实最想说的就是，自女儿国一别，至今已经二十载，御帝哥哥别来无恙？”（深施一礼，台下掌声，徐亦鼓掌，恐怕心潮澎湃）如此真挚而深情的问候，任是谁都已经看出她对御帝哥哥的深情厚意。这份感情二十年后依然念念不忘。我不知道徐少华坐在台下什么感觉，我是已经感动地无法形容了。主持人：“为什么感情这么深啊？”她略微害羞地说：“虽然是一个有头无尾的爱情，但是是一段人间佳话。”（台下安静鼓掌，徐少华眼眶湿润）她继续说：“因为其实想想人生，这个，就人这一生是有很多七情六欲的，然后也会碰到很多诱惑的，但是像女儿国国王这样的，识大体，明大义，最后把爱情当作一种憧憬，一种追求，一种享受，我觉得就是进入了一种境界了。女儿国国王做到了，我希望我也能做到。”（徐少华及众人鼓掌，徐面带微笑，估计已经欲哭无泪了） 想想这样的场景怎能不引发人的深思与联想，而且后来某杂志将这捕风捉影演绎成一个煽情的故事，说朱琳为徐少华独身二十年。至今还在网上流传，可谓西游记在人们心目中的影响力。 在西游记中，女儿国对于唐僧的那份感情让唐僧有些犹豫，可是最终还是毅然选择去西天完成取经大业，但同时也说出了“若有来生”的话。我此时注意到这首歌的词作者就是导演，不得不佩服她。由此我还发现在亚马逊上居然有她的回忆录《杨洁自述：我的九九八十一难》，毫不犹豫买了下来。终于找到写当时拍摄《趣经女儿国》的地方，却是说到当时徐少华为了当时能够获得大学的文凭而放弃了继续拍摄西游记，而且最后一部戏就是这部戏。让我不由得想当时朱琳对于拍戏之外的他的突然离去是否也有戏中同样的感觉呢，当然这不过是我一厢情愿的猜测罢了，为的是给这个故事多一份说道。 这部戏，这首歌，我偶尔会拿出来回味，下面就发几张图再欣赏欣赏——]]></content>
      <categories>
        <category>随笔</category>
      </categories>
      <tags>
        <tag>电影</tag>
        <tag>歌曲</tag>
        <tag>西游记</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[纸质书写与键盘书写]]></title>
    <url>%2F2014%2F07%2F27%2Fdaynote_20140727%2F</url>
    <content type="text"><![CDATA[我一直在想纸质书写到底与电脑上敲键盘到底有何不同。当然，很多事情，光靠想是没有用的，得亲力亲为。先说纸质书写，再说键盘书写。 当我写下上面几行字的同时，其实我已经有了一点感受(这篇文章整个都是先写在纸上然后再敲到键盘上的)。 首先(其实我写下“首先”二字时，并不知道“然后”会写什么，只是一种思维习惯而已)，当你的笔写在纸上时，你与你的文字其实是零距离的，因为他们就近在咫尺，这是多么亲切啊。 其次，文字在纸上的出现完全在于你的心思由脑海中游离辗转到笔尖的那一刻。你可以清晰地观察这一过程，想象一下，放慢这个过程不就是电影中的慢镜头吗？那该有多么的美妙。 最后，也是最重要的，当你熟悉了你手中的这支笔之后，那么她就可以说是你的一个代言。她的身姿、她的动作，尤其舞蹈中停顿的那一瞬间就同时就是你心中的思绪最直接的刻画。当我写到此，想到这，突然明白为什么好多人会竞相追逐名作家的手稿。因为这不光是本身作为文学作品的价值，而且可以通过这些曼妙的文字来揣测作者当时的心境，那便是在了解了作品的同时还能与其作者进入深度的身临其境的对谈啊，相比是一道精神大餐啊！ 这些都是纸质书写带给我们最为感性的体验，这样的体验对于叙述一件事物的直观感受是大有裨益的。当然，键盘敲击书写作为现代化一点的手段也有不一样的体验，只不过你要细心地去体会一番罢了。 当你熟悉了键盘，达到闭眼都能感受到那些字母，甚至是忘记他们的存在的程度。用拼音输入法的时候，你的手指给你的回馈是一一个个汉字而非散乱的字母，那么这才是不一样的键盘书写体验的开始。 当你的思绪在飞，你的手指在键盘上随之飞舞，在那按下空格键的不经意间，电脑屏幕上便已经出现了一行文字，而且他们是那么整齐划一。仔细回想这一短暂而又漫长的过程，让我不禁联想到《海上钢琴师》里的天才钢琴家“1900”望着窗外对镜整妆的少女，心为之吸引，便弹出了一串串美妙动听的音符，那么自然，那么随性。 其实我现在在电脑上书写东西的时候，比较喜欢用markdown的语法，一个记事本即可，简洁，写完了，再在本地预览，很是方便，也有一种创造作品的感觉，很是自足。 最后加上一句：挥洒思绪，尽情玩弄你的文字吧！]]></content>
      <categories>
        <category>杂说</category>
      </categories>
      <tags>
        <tag>书写</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[雨夜回忆]]></title>
    <url>%2F2014%2F07%2F26%2Fdaynote_20140726%2F</url>
    <content type="text"><![CDATA[在这夏季的雨夜来临之前，天空有些闷热，独自在出租屋里，心情有些燥热。终于在外卖送到的那一刻，天空开启了狂热模式，仿佛在夜店扭着她那狂野的身躯，同时挥洒着汗滴，整个世界开始狂欢…… 上面的描述有些蹩脚，也着实消耗了我不少脑细胞。我不是诗人，否则定然有美妙的诗句来赞美这雷雨之夜；我不是散文家，否则肯定有大段大段的犹如描述少女那初动的心般的文字来细细道来；我也不是……（算了，我实在编不下去了）。其实此时，在小小的键盘上敲打着这些字符（可以比作是钢琴家在玩弄着他的每一个音符吗），望着窗外，听着雷声，而屋里却无任何干扰，心理便觉无比的安定，甚至有那么一丝丝幸福的赶脚。 这样的环境，我的窗子是紧闭的，空调未开，屋里仍是闷热，汗水浸湿了整个身体，不过这样才有更多心绪在飞。 我突然想起了小学时候语文老师让我们写日记，每天都写哇，哪有东西可写，实在没办法了。就抄写成语字典上的各种成语，每天抄四五十个，不过好像很奇怪老师貌似没说啥。就是这样，不过记忆也有可能有些断裂，这也让我们回忆起来更加投入，想努力想起相关的一切，可往往却无迹可寻。 我们总想给自己相关的事情附上一点意义，也正是有这样的一种想法，当我们回忆的时候，实际上是一种重新来过。我们对平淡的过去进行加工塑造，再来点装饰点缀，还有可能把与之相关的事物糅合在一起，使之圆满而富有意义。 我们通过这一过程，可以使得身心愉快，也是让灵魂在过去的记忆中有个寄托之所。但是，我们不能沉浸于此，要面向未知的领域仍然充满希望，不要怕失望。你相信“希望越大，失望越大”的说法，只不过是害怕失败，其实每一次失败都是一次成长，而且会很快重燃希望之火，伴随你一直走……]]></content>
      <categories>
        <category>随笔</category>
      </categories>
      <tags>
        <tag>回忆</tag>
        <tag>日记</tag>
        <tag>雨</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[后会无期]]></title>
    <url>%2F2014%2F07%2F25%2Fdaynote_20140725%2F</url>
    <content type="text"><![CDATA[当得知这部韩寒的处女作，我便关注一些相关的购票优惠活动，终于在高德地图上以18.8元的价格抢到，有点小欣喜。 看完这部电影，其实最大的感觉是平淡无奇，稍微强烈一点的就是不少地方“名言警句”的出现，显得特别生硬。然后我便上豆瓣看了一些影评，现摘取一些我看来还算合适的评价如下—— 片子倒是和韩寒以往的文学作品如出一辙，从头到尾都在不停地讲故事给你听，可是到了结束之后，你却发现自己甚至无法将其相对完整的复述出来，因为他在不停地对你说，却又什么都没说，故事没有闭环，甚至根本没有故事，说到哪儿，算哪儿，这一点倒是很“公路”。[expand] 我们可以这么理解：从东极岛出发，烧房子开始，主角们就在进行着一项一项不太严肃的告别。他们要进行一段告别旧岁月的漫长旅行，旅行中会遇见什么，失去什么，谁也不知道，所以必须做好随时告别的准备。一旦接受了这个设定（很自然地就接受了），后面一次一次的告别就不会让人觉得突兀和难受了。[expand] 影片最早的两个路人角色——周沫和胡生，戏份短暂而冷漠，几乎可以代表你我的少年时代。我们一定有过那样一个有意被忘却的青梅竹马，尘封在记忆里，也许相逢两相望，可相望不如相忘，就算某天咯噔一下爆了胎，但该过去的总是会过去；我们也一定有过成长之路上无意抛下了的少年伙伴，不是一个，而是许多。直到有一天你发现路走得越远，身边的伙伴越少，你会遗憾，可是你并不会愧疚。然后，你终于来到了这里，背后是无知年少，面前是未知世界，这是每一段旅途的起点，故事就从这里开始了。[expand] 其实在我看来，导演想表达的意思非常简单，我们成长的人生之路就是一场后会无期的旅行——在这个路上我们可能遇到各种人，也可能随时就失去任何人，而这背后往往没有理由可循。至于导演的表达方式则是，用几个毫无关系的小片段，伴随着音乐，似乎在诉说着某种道理。这个过程中有笑料，但总又回归平淡无奇，或者反过来说，生活是平淡无奇的，但总能出现一些笑料，就看你如何用心去诠释。 其实这些感受在我刚看完电影的时候是没有的，知道我看了影评，看了好多的影评，仍然觉得不以为然。因为影评里多是要给一个结论，好还是不好？看影评的人也多是带着这样的初衷，这篇影评认为这部电影是好还是不好？而我对于电影的态度是，不去评论它的好坏，因为好坏其实是基于一个或一堆评价标准后的得分的高低。 对于我用心去看的一部电影，看完之后我经常会忘了其中的很多细节，只有一个总体的感觉。这次的《后会无期》，当我反复回听着邓紫棋唱的的同名主题曲，我才渐渐地加深了自己对于这片电影的感觉。而且我好像忽然意识到（也许只是我的一厢情愿地认为），由于这个歌词正是韩寒写的，那么电影恐怕只是想用镜头来表达歌词所传递的意思吧。这么一想，好像电影多了那么一丝韵味。慢慢地，再多听几遍歌曲，竟然使得电影多了一点回味的余地，而少了刚看完电影时那对于各种故事情节不合理的难受。 最后，附上这首歌词： 当一艘船沉入海底当一个人成了谜你不知道他们为何离去那声再见竟是他最后一句 当一辆车消失天际当一个人成了谜你不知道他们为何离去就像你不知道这竟是结局 在每个繁星抛弃银河的夜里我会告别 告别我自己因为我不知道 我也不想知道和相聚之间的距离 当一辆车消失天际当一个人成了谜你不知道他们为何离去就像你不知道这竟是结局 在每个银河坠入山谷的梦里我会醒来 也忘记梦境因为你不知道 你也不会知道逝去的就已经失去 当一艘船沉入海底当一个人成了谜你不知道他们为何离去那声再见竟是他最后一句 当一辆车消失天际当一个人成了谜你不知道他们为何离去就像你不知道这竟是结局]]></content>
      <categories>
        <category>电影</category>
      </categories>
      <tags>
        <tag>电影</tag>
        <tag>歌曲</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[想放弃之后]]></title>
    <url>%2F2014%2F07%2F24%2Fdaynote_20140724%2F</url>
    <content type="text"><![CDATA[放弃的念头今天，有一种放弃的念头油然而生——工作太累了，今天回去就不写了吧，好不好？对！每天一篇的任务量实在太大了，而且每天都在想着晚上该写点啥，没有必要坚持这样的计划。何况这样的坚持有效果吗？我想了好多借口让自己放弃。 重新思考对于这些放弃的念头，是你的本能，是当你在改变自己做出计划时必然的反应。要坦然接受他们，关键接下来看你如何去解释。于是我想到，我本来就是准备了一场和自己内心搏斗的战争，终于在第七天来了。这是一次表现自我、克服自我的好机会，而且这本身就是一个很好的写作话题了。是啊，就是啊，想到这，我放松了很多。原来写作，有时候不需要太刻意，不经意间将你的想法记录下来，就是很有意思的东西。 多想点此时我又不禁想起了之前看到同学在qq空间的一句话： 很多时候，我们不是由于看到希望才坚持下去，而是由于坚持下去才看到希望。 当时我仔细思量了一番，发现确实有些道理。好多时候我们会把一些事情的因果关系给颠倒了——比如有种说法是“屁股大的女人会生孩子”，其实这是以前封建社会传下来的，由于重男轻女因而认为生儿子的女人是一种福气，给家族带来兴旺。而一般儿子在妈妈的肚子里比女儿更大一些，因此会把妈妈的骨盆撑得比较大。所以在旁人看来得出结论就是这样了，看似有理有据，其实颠倒了是非。 此外，此次的坚持，让我尝到了甜头，甚至感觉是产生了兴趣。如果真的将改变自己的计划转化为一种兴趣加以发展，那真是一件幸福的事情。不过我感觉，如果要想真的发展成为兴趣，就不能去刻意要求，但是呢，这确实又是有deadline的计划，这二者是有矛盾的。因此我还要把握好，最好还是发展成为一种“例行公事”。]]></content>
      <categories>
        <category>随笔</category>
      </categories>
      <tags>
        <tag>放弃</tag>
        <tag>坚持</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[上下班的时间如何消磨]]></title>
    <url>%2F2014%2F07%2F23%2Fdaynote_20140723%2F</url>
    <content type="text"><![CDATA[苦逼的上班族上班族苦逼，上班距离住的地方很远、要花很多时间的人更加苦逼。 对于大城市的打工一族来说，即使朝九晚五，但是由于你住的很远，那你便是朝八晚六甚至朝七晚七等等，要是碰上加班，你这天就是苦逼彻底了。此外，就算是正常上下班，即使在公司比较轻松，上下班的长途跋涉也能把你折腾个精疲力尽。让你的感觉除了像累的狗一样，就是羡慕猪的生活。 这大致也是我近期的真实写照，因此大肆吐槽一番（说出来心理就舒坦了）。 上下班的时间花在哪儿了？对于长途跋涉的上班一族，最常见的消磨时间手段莫过于玩手机了。我们用来观看电影、美剧这些平常没时间却比较耗时的玩意；用来看小说，让心到文字中去畅游；用来社交，加深与他人的感情纽带；用来听音乐，让自己受音符的洗礼；当然也有直接拿纸质书阅读的…… 小谈这些方式貌似对于放松自我都能起到一定作用，可还是有些东西需要我们注意。 上述这些消磨时间的方法无一例外都要用到眼睛，而且大部分时间都要低头进行，这样对于我们的眼睛和颈椎都是比较大的损害。而且在公共交通上的时候，我们要时不时地关注着“现在是哪一站了”，带着这样的一种顾虑，我们怎么可能真正放松呢？何况还有部分人想在此时尽可能来进行一些学习，以便能够追赶他人、适应社会。那么在这么紧张的时间里，他们怎么可能用心地投入呢？ 当然有人会站出来说，我行！你如果真的站在我面前一本正经地对我说，我多半会相信你。因为事情并不是那么绝对，总有人能够克服种种逆境，这样的人我也十分佩服。但是如果你真的很难做到，我建议也不要逼自己太狠了，毕竟对自己也要适当宽容些。因此我的建议是不要在公共交通上进行深度的学习，不过适当背背单词也未尝不可。 我的建议（貌似有些高深）为了保护眼睛（因为我们平时用眼睛实在太过分了，尤其对于我们小小程序员来说），真的在地铁、公交上要少看手机、少看书为妙。那么这时间干啥呢？我到是有个不错的建议，不过倒不见得适用于你，因为这得看个人兴趣。我比较喜欢听歌，所以可以带上耳机听歌，这个大部分人都会这样干。其实带上耳机有个最大的好处就是避免嘈杂的人群对你的干扰，不过一不小心就容易坐过了站。因此我就在同时密切注视着周遭的一切，用心去观察，到了一站我都会瞟一眼，最起码避免了过站。此外，在带上耳机并且音量开得比较大的同时你看周遭的事物就如看无声电影般，有木有！如果你带着这样的眼光，你会发现身边的事物和往常会有那么一点不同。 此时，所有人物的所有行为举止，你都看在眼里，当然除了声音。你会觉得每一个人都是那么可爱，你可以去猜测其中一个人的此时的心情，是焦虑？抑或紧张、开心，还是郁闷等等。总之，有无限的可能性尽在你发挥。再说的“玄乎”些，你会觉得自己是在画一幅动态的画或是在拍摄一部电影，而其中的男主角和女主角任你挑选。 其实这些做法应该属于“冥想”，只不过又结合了实际生活，这使得体验更加奇妙。在这个过程中，你会发现美好、丑恶。但是你的目标是在于筛选出美好，同时是一种心灵的放松，总之其乐无穷。 不过这都是我个人的亲身体验罢了，至于你是否能够接受我不敢保证，不过你可以尝试在上下班的路上找到一个适合自己的放松方式，同时能够保护自己的眼睛。]]></content>
      <categories>
        <category>随笔</category>
      </categories>
      <tags>
        <tag>时间</tag>
        <tag>想象</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[关于跑步]]></title>
    <url>%2F2014%2F07%2F22%2Fdaynote_20140722%2F</url>
    <content type="text"><![CDATA[跑步今天难得早些下班，得以挤出时间在饭后休息一段时间后去附近的公园跑个步。 这个公园的健身气氛非常之好，每天都有人在这里散步或跑步，在这里你会感觉很美好。 跑步之体验在这里跑步其实是有很多体会的，待我慢慢说来： 首先跑步时你要有自己的控制，了解自己的身体限度，不要过度消耗，最好是在可承受的程度再稍微延长时间或加大动作力度以便锻炼耐力。 其次，跑步的过程中，当你发现有人从后面超过你时，出于竞技的意识你也可能放弃开始为自己设定的计划而奋起直追。我不建议这样，因为这样会打乱你的锻炼计划，毕竟这不是比赛，而是个人锻炼。那么你就要摆正心态，这是要学习的。 然后就是你在跑步的过程中，随着时间的推移、乳酸的堆积，你可能想放弃。但是如果这时候你告诉自己再跑最后一圈，你就有可能在再跑完一圈之后你发现并不太吃力。这是在考验你在放弃与坚持这二者之间的如何抉择，有意思吧。 最后来点高深的，在跑步过程中，你可以尝试着闭眼一小会儿（这当然是要在安全的条件下进行啊），想象着你身体内部的反应——你的心脏随着你有节奏的呼吸在同时有节奏地彭彭地跳，你甚至可以看清它，那是红色的，正如所说的拳头般大小。再看看小腿上的肌肉一会儿拉直一会儿收缩，都是那么有规律，等等就靠你们自己想象了。这样你会觉得很美妙，好像跑步是一种享受，并且你真的便会开始享受这样的感觉。 感受这样的跑步，是可以减轻焦虑的，因为跑着跑着，发现我们身体越来越健康的同时，会让我们发现困难都是可以克服的，即使不能，后果也没那么严重，再困难咬咬牙也就过去了。你甚至会感觉自己是在创造一种艺术。在跑的过程中，你大汗淋漓，多么欢快啊。完事了，你全身发热，甚至有一种快感在伴随着。最后，你会感觉生活如此美好，我还可以在跑步，我真的在跑步，多么幸运，so lucky!(不是为了炫耀英文，只是想充分表达此时的情感，却又不想在措辞上有重复从而带来你阅读上的厌烦，但也有可能你看到这个注释你才真的厌烦了，不过那我也没辙了) 话题外——关于感激跑步会让人充满很多感激。之前很多人说要常怀一颗感恩之心，当时我就很纳闷——我有很多烦心事，如何叫我感恩，何况那些人和事真的值得感恩吗？特别还有一首歌叫《感恩的心》，我更是反感不已。原因在于上大学之后，从一个书呆子变得不那么爱学习之后，了解到世界、社会的一些阴暗面，知道这个国家、这个party的一些不为人知和少为人知的一面之后，有种巨大的被欺骗的感觉挥之不去。由此带来的情绪必定是看啥都不顺眼，尤其是主旋律的东西，必定排斥，而《感恩的心》经常放在一些类似赈灾汇演等聚拢人心的场面中演出，更是让我唏嘘不已，也因而有点小愤青的赶脚。然而随着时间的推移，在大学的后半期，随着书看的多些，特别是一些沙龙节目让我的眼界变得开阔。我总结了一些东西 不要一味地把症结归到某一个事物上，而同时你给的解释仅仅为他在之前的类似事件中都表现很差。 有些事情不要因为人家做的在你看来还不够好，就一味地去数落，你要明白有些事情从说到做是有一个可行性的问题。 不要滥用举例子，虽然例子最有表现力、说服力。因为如果你真的想随意夸一个人还是损一个人，你都能通过从历史典故中找到一个来对照他的所作所为来做到。 等等。 小结貌似有点扯远了，不过说真的，我现在对“感恩”二字还是尽量避免不谈（事实上今天已经说了），为了避免这种尴尬，我后来就决定用“感激”二字（这两个字看上去貌似要顺眼一些）。 其实要真的做到常常感激身边的一些事物，真的也不是一件很难的事。你只要不把已有的优势忽略，如你有比较健康的身体，你有一双好眼睛，可以开怀大笑。当然好多时候人总是到受伤时才真的感到平淡时的美好。正如一次重感冒时，你就会怀念不流鼻涕的感觉。其实这些经验我们都有，只要通过我们大脑的习惯思维——类比，便很容易珍惜已经拥有的，如家人等。总之不把已经拥有的视为理所当然，再把注意力的重心从纠结于劣势转移到发展优势你便慢慢变得积极，变得幸福。 当然了，这要说一下，现在的有些想法要归功于Tal的《positive psychology》，谢谢他，同时也谢谢我自己！]]></content>
      <categories>
        <category>随笔</category>
      </categories>
      <tags>
        <tag>感激</tag>
        <tag>跑步</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[冷和热对于灵感的作用]]></title>
    <url>%2F2014%2F07%2F21%2Fdaynote_20140721%2F</url>
    <content type="text"><![CDATA[说法听有些人说，当身体特舒适的时候，对于进行艺术创作的人是比较难有一些灵感的，就是难以产生一些奇妙的想法和实际行为。不过这也可能有思维习惯的偏差——可能确实有些灵感是来自一些人在冷的时候，甚至是饥寒交迫的时候，（貌似听人说古时候就有这样的做法，对待士人、读书人不要给他吃饱，要经常饿着，否则容易“温饱思淫欲”；而对待将士，要饱食，这样才有士气打仗。）那么这时候产生的灵感那肯定是记忆深刻，而且事后回忆起伴随的还有身体上的感觉（寒冷与饥饿）便会印象深刻。这便容易让人觉得，没有恶劣的环境，就难以创造奇迹。 我呢其实我是不太喜欢冷的，但我对热却有一些好感。特别喜欢那种大汗淋漓的感觉，那种被晒得皮肤噼里啪啦的不算啊。这来自于我在写东西的时候或者看感兴趣的书和电影时，火热的环境再碰上对所看书或者电影的拍手称好抑或对于自己所写或所想感到自豪不已时便容易引发热血澎湃，全身湿透，这就是所谓身心共鸣了吧！这其实是不可多得的体验，可能这也会加重你的记忆，就如我在上段的分析一样会产生一些思维的偏差。不过没关系，即使认识到这个，我也丝毫不会减免自己对此的热情。 小结我一贯对于某些事物的喜好态度是这样一个过程：首先接受自己对于该事物的第一印象（人都会下意识对于见到的新事物与旧事物做出对比，然后在大脑中归类），然后再抛弃这个印象，接着用理性的思路去分析这件事物的好与坏（其实可能更多的是中间地带），如果真的感兴趣，甚至喜欢上了，那甚至会加上个人的情感，为其做一个属于自己带有一些感性的解释。这样不光说服了大脑（代表理性）正确对待，而且是由心（代表感性）的去追求，去珍惜。那么这个事物将长期伴随你进行更多关于美的旅行。]]></content>
      <categories>
        <category>随笔</category>
      </categories>
      <tags>
        <tag>冷</tag>
        <tag>身体</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[记录你的梦]]></title>
    <url>%2F2014%2F07%2F20%2Fdaynote_20140720%2F</url>
    <content type="text"><![CDATA[表明心境到了每日一篇的第三天了，又有了以往的想法——总是有很多的思路，感觉有很多事情要写。比如影评、乐评、自由之说、政府论等等，有没有觉得很是高大上？我的也觉得，但好像不写这些就觉得没意义一样。可是要是真的写好这些东西，真的是要整理好些资料啊，可是一时半会儿又拿不出来，但是时间依然在走。时间不等人，人总想过得有意义。想的多了，就为其所累；不想，好像人生总少点啥。这样一说，是不是觉得我又想多了？下面开扯—— 梦与你人生活在这个社会上，必是第一人称视角。你之所以是你，因为你是你才存在。而你在扮演自己时，出于“不知庐山真面目，只缘身在此山中”的原因你很难看清自己，而梦恰好给了你另外一个视角。那是一个第三人称的视角，因为梦醒的那一刻你可以回忆你自己在梦里的表现。由于梦中的我们往往的第一反应是潜意识里的作用，这样我们也恰好避免了自我的故意所为，即梦中的我们大都是个性使然。这样我们会看梦里的自我，才比较接近真正的自我。 然后呢然后呢？既然我们知道梦中的自我比较接近真正的自我，你就容易通过梦里你的表现看到你自己真正是一个什么样的人，想成为一个什么样的人。因此我决定在床边放一个本子和一支笔，以便在梦醒后能够及时记录自己的梦境。 接下来到目前为止，我只记录到了一个有比较完整故事的梦，其他好多梦是一些碎片的堆积，开始看好像没有什么意义，现在也是，不过后来呢？难说，留个标题吧，有了结论再接着写。 后来【等待更新中……】]]></content>
      <categories>
        <category>随笔</category>
      </categories>
      <tags>
        <tag>自我</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[感谢hexo]]></title>
    <url>%2F2014%2F07%2F19%2Fdaynote_20140719%2F</url>
    <content type="text"><![CDATA[感谢我要感谢hexo的作者，是他让我写博客更加简单，使用markdown的语法来通过记事本来写博客，是一种很神奇的体验，慢慢地你会爱上她。。。 关于hexohexo是一个基于nodejs的静态博客生成器，可以用来方便地将生成的页面托管在github和Heroku上。由于它是基于nodejs的，你可以在本地方便地调试，然后再将生成的静态页面上传到github和Heroku上。而且这个项目在github上还一直在维护，并且有很多人参与进行主题的开发，虽然没有达到wordpress发展的规模，不过个人感觉还是使用起来蛮爽的。这个爽很大程度来自于markdown语法使用的简洁，有一种与众不同的感觉，虽然没有强大的后台，但自是乐在其中。 它的作者是来自台湾的[@tommy351](https://github.com/tommy351)。引用@tommy351的话—— Hexo is a fast, simple and powerful blog framework. It parses your posts with Markdown or other render engine and generates static files with the beautiful theme. All of these just take seconds. 加油我也是偶然看到这个项目的，然后照着网上的方法就开始做起来了，因为之前接触过一点nodejs,了解到nodejs的强大易用之处，也是抱着试一试的态度来用来写博客，而此之前使用的是red hat的openshift来建立wordpress博客,也还不错，就是访问有点慢。最近好像github访问还不错，但有时也不太稳定。看网上的建议是将博客从GitHub迁移到GitCafe,这个尚未尝试。刚开始学习，值得一试，加油！]]></content>
      <categories>
        <category>随笔</category>
      </categories>
      <tags>
        <tag>hexo</tag>
        <tag>感激</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[aha一刻]]></title>
    <url>%2F2014%2F07%2F19%2Ffirst-article%2F</url>
    <content type="text"><![CDATA[写在前面昨天晚上看一个公开课《positive psychology》的第11集“养成良好习惯”，真的是让我有了顿悟（aha experience）。那一瞬间，我将视频暂停了，在卧室里走来走去，兴奋地停不下来，手舞足蹈，感觉非常幸运——在这个时候看到了这个视频，重要的是我解开了我的一些困惑。由于有些困惑由来已久，这次的拨云见日、眼前一亮、醍醐灌顶般的感觉，在我现在敲打键盘的时候都能回味到并且浸入其中。那种high潮可以说绝对是高质量的持续性的兴奋，总之是一次美妙的人生体会。 回顾最近一年我老是会计划着一些自我学习、锻炼的计划，借以提升自我，可是好多计划坚持着一段时间后，总是容易付之东流。人总要给自己一个说法，我也不例外，因此总结了几条原因： 自律还是不够，还是老想着放松娱乐； 性格中的保守主义，习惯于熟悉的事物而惧怕改变； 中国人的人性里的怯懦，害怕挑战，缺乏勇气面对未知的事物； 计划赶不上变化，总有些事情打乱我的计划，却少了应对的策略。 按照逻辑，摆出原因之后是开始考虑解决方案。 针对加强自律，可以分内外两个方面来做—— 一是内心的说服，心态的转变。从内心告诉自己要做一个约束力很强的人，要保持健康的心理是一个长期有益的做法，这会给以后的成功奠定基础。这个通过实验后发现接受正确乐观的观点很容易，但是转化为实际行动很难，如坚持每天跑步，一到哪天下雨或感觉有点累不想跑，第二天也就顺带忘记了。 二是外在的约束，借助一些技巧。反而是这个方法有时能管点作用，如把电视机搬下桌子，就会避免自己把时间浪费在不停地换台上了。 针对第2条、第3条，我尝试着一些改变，让自己感到不舒适，也正好应对着课程里的走出舒适区到延伸区的做法（当时还没看过这个课程，是自己想的），有些挑战，但不会感到恐惧。可是这个真的是很困难，效果自然不佳了。 针对第4条，解决是，做更加周密的计划——考虑到有时候的变化因素，比如说，有时下班晚点，还想进行自我学习啥的就稍微开个头，把剩下的任务量顺延。可是几经折腾，发现往往顺延之后接着还是顺延，然后就没有然后了。 看起来有没有觉得很失败？其实也不完全，我只是想多点铺垫而已。 成果坚持其实有些计划还是有些坚持的，甚至直到这一刻。比如坚持写日记，从去年11月份到今天断断续续也谢了近200篇的日记，只不过开始想着都是清晨写，结果往往不定时去写的；另外如跑步，现在只要晚上下班早些，还是尽量回去跑的，保证每周有至少一次跑步，有点少？是的，因此下个目标是每周三次。 转变此外也有一些价值观上的一些转变，这是通过理性的思考实现的。 比如我过去一向不喜欢去关注时事、热门事件。原因有几点： 首先新闻刚刚出炉，往往是热气腾腾、充满诱惑。而往往我们最先感受到的是它的气味，却很难看清它的样子，更不论味道如何了。这在新闻上的反映是新闻刚刚被炒熟的时候往往只会呈现它面目的很小的一部分。 其次，当下最热新闻往往很大一部分是与我们自身关系不大的，当然这是从有无切身体会来考虑的。如此一来互联网上的琐碎的猜想与评论会占据我不少的业余时间，那我倒不如来看看有用和有意思多得多的书籍了。 最后，由于真相往往为少数人所知，热门事件最后也经常被当事人及相关人私下解决，这对于我们局外人往往不得而知，顶多也是“小道消息”“坊间传闻”之类的，而这些终将伴随着时间淡出公众视野，并且我认为脱离事实的评论并无多大意义。 现在我有所改变，我开始在思维上慢慢地摒弃一些成见，最显著的是开始尝试一些原本我在逻辑上拒绝的事情。 比如我决定选择性地跟踪关注一些热门事件，当然这样的做法也有出于这决定本身的逻辑性的考量——对于热门事件这种食物，每个人对于它的样子的描述是不尽相同的，对于味道感受，那么更是较大程度上由个人口味喜好所决定，结果必然是众说纷坛了。其实这本身就包含了以一种社会学研究的意义了。 此外周孝正的一种说法也让我动心，他说他鼓励学生参与一些热门事件的跟踪评论，并且不断做自己的判断，然后与后来事件的一步步发展做对比，如果有偏差就做反思，是自己情绪化的因素还是逻辑处理的失误等等，由此来提高自己独立思考的能力。 兴趣其实对于提升自我途径来说，最理想的莫过于发展有利于此的兴趣。例如我自从大三以来养成看书的习惯之后，会持续地一本一本地买书来阅读，保证不断粮。每天可能看的不多，有时忙起来就上厕所那么一点时间可以看，可是只要愿意挤，不光牛奶，看书的时间也是有的，因为这是一个长期的过程。可是很多个人的兴趣未必就是对个人进取有着很大积极有益的作用的，而多是给生活锦上添花罢了。所以这个暂且不提。 说了这么多，貌似还没有触及我真正想说的——行动与改变以及文章开头high潮的起因。 aha在《positive psychology》的第11集中Tal有引用到—— 要改变人生轨迹，就要从两种基本方法中选择—— 其一，你可以指引你的能量及注意力，用其整理思想，集中精神，巩固力量，释放情感以及想象乐观结果，从而使你最终获得自信，鼓起勇气，下定决心做出承诺，获得充分的激励去做你要做的事情； 其二，你也可以直接去做。（You can just do it.） 貌似第二种方法真的是简单粗暴而有效，并且对比显得第一种方法繁琐而不够干脆。可是我个人认为第一种方法对于那些缺乏自信，心理尚不成熟以及执行力不够人来说确实是一个较好的途径，且是温和渐变式的。总之是因人而异。然而在改变人生这一说法中，人们经常会提到“自律”这个词语。并且很多人愿意把计划中止的原因解释（这个词很重要，Tal在积极心理学里反复强调如何解释失败是乐观者与悲观者的最大区别）为自律不够。 可是！可是！Tal给了我一个心理学上的一个研究结论：一个人不能获得更多的自律；自律也并不会对成功和幸福感起到很大作用。 很多时候，有些人在我们看来是有着很好的习惯，包括自我学习与锻炼身体等等。其实在他们眼中是“例行公事”（英语里叫“retuals”，总感觉翻译的有点怪怪的，感觉就是习惯吧，但是又貌似有点不一样），正如早上起床不管多累都会去刷牙洗脸，否则会觉得无法见人。这些任务的执行是不需要借助自律的，因此Tal建议我们要建立例行公事，而 建立例行公事需要定义精确的行为，并在特定的时间内执行它们，以深深扎根的价值观为动力。 不过建立例行公事需要大量的自律，所以例行公事不能计划太多，最好为1到2件。之前有人说养成一个习惯要21天，后来好像也有人说要30天，可是根据我自己的经历来看30天根本不够，要内化成一个长期的习惯真的是要长期的坚持。 于此，我终于有点理解为什么在一段有既定任务的时间的空隙里（比如睡觉前一两个小时），你还会有高效的时间利用。 这是因为白天的大部分时间是有被逼的成分或者说是计划内无法改变的，不需要借助自律来完成，因此你才可以利用你那有限的自律来在每天剩余的一两个小时之内来进行高效的自我主动学习或者锻炼身体的计划。 这具体在我身上的体会就是：有一段时间，天天加班，但是回来我还会争取看几页书，有时甚至有灵感一现的感觉。但是一旦某一天下班比较早，或者是到了周末，我会给自己安排好多提升自我的计划，而这些计划大多是我习惯之外的，不属于例行公事，或者甚至说是打破传统思维的、要求突破自我的。这样一来，我的自律会被分摊在较长的时间内，导致自律的分布密度降低。那么借助自律来完成的事情必定是效率低下的，甚至会带来拖延。 很明显，解决方法就是把你有限的自律全部用在短时间来做一两件事来提高效率。想到这里，我就达到了文章开头的美妙的人生体会。 结论总之结论就是每个人的自律都是有限的，不要高估自己的自律，要充分利用，提升效率，最终建立例行公事。 最后我对自己以往好些计划中止的解释就是：种类过多，跨领域太大，执行有难度，最重要的还是难以靠自律完成所有的，因此结果只能是都没有执行好。 今后因此接下来，我对自己除了坚持的还不错的写日记之外只有两个计划： 每周至少跑步三次 每天写一篇不少于300字的文章。 不过很显然，第二个任务今天完成得有点过分了,哈哈！]]></content>
      <categories>
        <category>杂说</category>
      </categories>
      <tags>
        <tag>改变</tag>
        <tag>计划</tag>
        <tag>习惯</tag>
        <tag>行为</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Hello World]]></title>
    <url>%2F2014%2F07%2F12%2Fhello-world%2F</url>
    <content type="text"><![CDATA[Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in trobuleshooting or you can ask me on GitHub. Quick StartCreate a new post1$ hexo new "My New Post" More info: Writing Run server1$ hexo server More info: Server Generate static files1$ hexo generate More info: Generating Deploy to remote sites1$ hexo deploy More info: Deployment]]></content>
      <categories>
        <category>技术</category>
      </categories>
      <tags>
        <tag>hexo</tag>
      </tags>
  </entry>
</search>
